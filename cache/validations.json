{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "8b610653756a8863acca821a1292f4435dc31d8dfa43c479b149dae643a36455",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "407c587279d640b402a56549e6fb9f370384f6564fd09e456bbf43cecc8c03ec",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tradescrow": {
        "src": "contracts\\Tradescrow.sol:15",
        "version": {
          "withMetadata": "df44916ab7a6500b290880071c19c7d2785347a9f5db04f78dca79a10802ca9b",
          "withoutMetadata": "4da58be17e0eb81178abd0d7ff2163142c2c56628f106786d76d3bb8dd9ec4e3",
          "linkedWithoutMetadata": "4da58be17e0eb81178abd0d7ff2163142c2c56628f106786d76d3bb8dd9ec4e3"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(uint256,address)",
          "proposeSwap(address,(address payable,uint256,struct Tradescrow.Nft[],struct Tradescrow.Coin[]))",
          "initiateSwap(uint256,(address payable,uint256,struct Tradescrow.Nft[],struct Tradescrow.Coin[]))",
          "acceptSwap(uint256)",
          "cancelSwap(uint256)",
          "updateAppFee(uint256)",
          "withdrawFees(address payable)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tradescrow",
            "src": "contracts\\Tradescrow.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tradescrow",
              "label": "_swapsCounter",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:21"
            },
            {
              "contract": "Tradescrow",
              "label": "_native",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:23"
            },
            {
              "contract": "Tradescrow",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:30"
            },
            {
              "contract": "Tradescrow",
              "label": "_swaps",
              "type": "t_mapping(t_uint256,t_struct(Swap)974_storage)",
              "src": "contracts\\Tradescrow.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Swap)974_storage)": {
              "label": "mapping(uint256 => struct Tradescrow.Swap)"
            },
            "t_struct(Swap)974_storage": {
              "label": "struct Tradescrow.Swap",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_struct(Offer)967_storage"
                },
                {
                  "label": "target",
                  "type": "t_struct(Offer)967_storage"
                }
              ]
            },
            "t_struct(Offer)967_storage": {
              "label": "struct Tradescrow.Offer",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address_payable"
                },
                {
                  "label": "native",
                  "type": "t_uint256"
                },
                {
                  "label": "nfts",
                  "type": "t_array(t_struct(Nft)949_storage)dyn_storage"
                },
                {
                  "label": "coins",
                  "type": "t_array(t_struct(Coin)954_storage)dyn_storage"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(Nft)949_storage)dyn_storage": {
              "label": "struct Tradescrow.Nft[]"
            },
            "t_struct(Nft)949_storage": {
              "label": "struct Tradescrow.Nft",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "id",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Coin)954_storage)dyn_storage": {
              "label": "struct Tradescrow.Coin[]"
            },
            "t_struct(Coin)954_storage": {
              "label": "struct Tradescrow.Coin",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "8b610653756a8863acca821a1292f4435dc31d8dfa43c479b149dae643a36455",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "407c587279d640b402a56549e6fb9f370384f6564fd09e456bbf43cecc8c03ec",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tradescrow": {
        "src": "contracts\\Tradescrow.sol:15",
        "version": {
          "withMetadata": "df44916ab7a6500b290880071c19c7d2785347a9f5db04f78dca79a10802ca9b",
          "withoutMetadata": "4da58be17e0eb81178abd0d7ff2163142c2c56628f106786d76d3bb8dd9ec4e3",
          "linkedWithoutMetadata": "4da58be17e0eb81178abd0d7ff2163142c2c56628f106786d76d3bb8dd9ec4e3"
        },
        "inherit": [
          "IERC721Receiver",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(uint256,address)",
          "proposeSwap(address,(address payable,uint256,struct Tradescrow.Nft[],struct Tradescrow.Coin[]))",
          "initiateSwap(uint256,(address payable,uint256,struct Tradescrow.Nft[],struct Tradescrow.Coin[]))",
          "acceptSwap(uint256)",
          "cancelSwap(uint256)",
          "updateAppFee(uint256)",
          "withdrawFees(address payable)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tradescrow",
            "src": "contracts\\Tradescrow.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tradescrow",
              "label": "_swapsCounter",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:21"
            },
            {
              "contract": "Tradescrow",
              "label": "_native",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:23"
            },
            {
              "contract": "Tradescrow",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts\\Tradescrow.sol:30"
            },
            {
              "contract": "Tradescrow",
              "label": "_swaps",
              "type": "t_mapping(t_uint256,t_struct(Swap)974_storage)",
              "src": "contracts\\Tradescrow.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Swap)974_storage)": {
              "label": "mapping(uint256 => struct Tradescrow.Swap)"
            },
            "t_struct(Swap)974_storage": {
              "label": "struct Tradescrow.Swap",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_struct(Offer)967_storage"
                },
                {
                  "label": "target",
                  "type": "t_struct(Offer)967_storage"
                }
              ]
            },
            "t_struct(Offer)967_storage": {
              "label": "struct Tradescrow.Offer",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address_payable"
                },
                {
                  "label": "native",
                  "type": "t_uint256"
                },
                {
                  "label": "nfts",
                  "type": "t_array(t_struct(Nft)949_storage)dyn_storage"
                },
                {
                  "label": "coins",
                  "type": "t_array(t_struct(Coin)954_storage)dyn_storage"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_struct(Nft)949_storage)dyn_storage": {
              "label": "struct Tradescrow.Nft[]"
            },
            "t_struct(Nft)949_storage": {
              "label": "struct Tradescrow.Nft",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "id",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Coin)954_storage)dyn_storage": {
              "label": "struct Tradescrow.Coin[]"
            },
            "t_struct(Coin)954_storage": {
              "label": "struct Tradescrow.Coin",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}