{
  "id": "aedd456923fd4dbfe98f628775fe3f1e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Tradescrow.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n/**\n* @title Trade & Escrow v1.2.1\n* @author @DirtyCajunRice\n*/\ncontract Tradescrow is Ownable, ReentrancyGuard, Pausable, ERC721Holder, ERC1155Holder {\n\n    // Use SafeERC20 for best practice\n    using SafeERC20 for IERC20;\n    // Counter to separate swaps\n    using Counters for Counters.Counter;\n    Counters.Counter private _swapsCounter;\n    // Native asset locked temporary storage - in wei\n    uint256 private _native;\n    // Native asset fee storage - in wei\n    uint256 public fee;\n    // uint256 booleans to save the boolean conversion gas cost\n    uint256 private constant TRUEINT = 1;\n    uint256 private constant FALSEINT = 2;\n\n    // Storage mapping for swaps\n    mapping (uint256 => Swap) private _swaps;\n\n    // NFT struct to hold the data required to create and reference an ERC721/ERC1155 object\n    struct Nft {\n        address addr;\n        uint256 amount;\n        uint256 id;\n    }\n\n    // Coin struct to hold the data required to create and reference an ERC20 object\n    struct Coin {\n        address addr;\n        uint256 amount;\n    }\n\n    // Offer struct to hold the data for a single participant's offer\n    struct Offer {\n        address payable addr;\n        uint256 native;\n        Nft[] nfts;\n        Coin[] coins;\n    }\n\n    // Swap struct to hold the data for a single swap transaction\n    struct Swap {\n        Offer initiator;\n        Offer target;\n        uint256 open;\n    }\n\n    event SwapProposed(address indexed from, address indexed to, uint256 indexed swapId, Offer offer);\n    event SwapInitiated(address indexed from, address indexed to, uint256 indexed swapId, Offer offer);\n    event SwapExecuted(address indexed from, address indexed to, uint256 indexed swapId);\n    event SwapCancelled(address indexed cancelledBy, uint256 indexed swapId);\n    event SwapClosed(uint256 indexed swapId);\n    event AppFeeChanged(uint256 fee);\n\n    // Sets the initial fee and assigns ownership\n    constructor(uint256 initialAppFee, address payable contractOwnerAddress) {\n        fee = initialAppFee;\n        super.transferOwnership(contractOwnerAddress);\n    }\n\n    // Modifies requests that require a fee to take place\n    modifier chargeAppFee() {\n        require(\n            msg.value >= fee,\n            \"Tradescrow: Sent amount needs to be greater than or equal to the application fee\"\n        );\n        _;\n    }\n\n    /**\n    * @notice Propose a new swap and pay the app fee\n    *\n    * @dev Step 1: User proposes a swap to another address that contains any combination of\n    *      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed\n    *      assets are transferred to this contract and kept there until the swap is either\n    *      accepted or cancelled.\n    *\n    * @param target Address that the initiating user wants to trade with\n    * @param offer Struct that defines the proposed offer\n    *\n    * @return swapId ID of the new swap\n    */\n    function proposeSwap(address payable target, Offer memory offer)\n    external payable nonReentrant chargeAppFee whenNotPaused returns(uint256) {\n        requireNotEmpty(offer);\n        _swapsCounter.increment();\n\n        safeMultipleTransfersFrom(payable(msg.sender), address(this), offer);\n\n        Swap storage swap = _swaps[_swapsCounter.current()];\n\n        swap.open = TRUEINT;\n        swap.initiator.addr = payable(msg.sender);\n        for (uint256 i=0; i < offer.nfts.length; i++) {\n            swap.initiator.nfts.push(offer.nfts[i]);\n        }\n        for (uint256 i=0; i < offer.coins.length; i++) {\n            swap.initiator.coins.push(offer.coins[i]);\n        }\n        if (msg.value > fee) {\n            swap.initiator.native = msg.value - fee;\n            _native += swap.initiator.native;\n        }\n        swap.target.addr = target;\n\n        emit SwapProposed(msg.sender, target, _swapsCounter.current(), offer);\n\n        return _swapsCounter.current();\n    }\n\n    /**\n    * @notice Initiate a response offer to a swap proposed to you and pay the app fee\n    *\n    * @dev Step 2: Proposed user agrees to the the assets offered from the initiating\n    *      party by responding with their offer that contains any combination of\n    *      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed\n    *      assets are transferred to this contract and kept there until the swap is either\n    *      accepted or cancelled. This can only be called by a user with a pending swap.\n    *\n    * @param swapId ID of the swap that the target user is invited to participate in\n    * @param offer Struct that defines the proposed response offer\n    */\n    function initiateSwap(uint256 swapId, Offer memory offer) external payable nonReentrant chargeAppFee whenNotPaused {\n        onlyTarget(swapId);\n        require(isEmpty(_swaps[swapId].target) == TRUEINT,\n            \"Tradescrow: swap already initiated\"\n        );\n        require(_swaps[swapId].open == TRUEINT, \"Tradescrow: Swap closed. Only user cancel enabled\");\n        requireNotEmpty(offer);\n\n        safeMultipleTransfersFrom(\n            payable(msg.sender),\n            address(this),\n            offer\n        );\n\n        for (uint256 i=0; i < offer.nfts.length; i++) {\n            _swaps[swapId].target.nfts.push(offer.nfts[i]);\n        }\n        for (uint256 i=0; i < offer.coins.length; i++) {\n            _swaps[swapId].target.coins.push(offer.coins[i]);\n        }\n        if (msg.value > fee) {\n            _swaps[swapId].target.native = msg.value - fee;\n            _native += _swaps[swapId].target.native;\n        }\n\n        emit SwapInitiated(\n            msg.sender,\n            _swaps[swapId].initiator.addr,\n            swapId,\n            offer\n        );\n    }\n\n    /**\n    * @notice Accept the proposed swap offer sent from the target\n    *\n    * @dev Step 3: Swap initiator accepts the proposed swap from the target, which transfers\n    *      all assets to their intended parties from this contract. This can only be called by\n    *      the initiator of the swap, and only when the target has proposed their offer\n    *\n    * @param swapId ID of the swap that the initiator wants to execute\n    */\n    function acceptSwap(uint256 swapId) external nonReentrant whenNotPaused {\n        onlyInitiator(swapId);\n        require(_swaps[swapId].open == TRUEINT, \"Tradescrow: Swap closed. Only user cancel enabled\");\n        requireNotEmpty(_swaps[swapId].initiator);\n        requireNotEmpty(_swaps[swapId].target);\n\n        // transfer NFTs from escrow to initiator\n        safeMultipleTransfersFrom(address(this), _swaps[swapId].initiator.addr, _swaps[swapId].target);\n\n        // transfer NFTs from escrow to second user\n        safeMultipleTransfersFrom(address(this), _swaps[swapId].target.addr, _swaps[swapId].initiator);\n\n        transferNative(_swaps[swapId].initiator, _swaps[swapId].target);\n        transferNative(_swaps[swapId].target, _swaps[swapId].initiator);\n\n        emit SwapExecuted(_swaps[swapId].initiator.addr, _swaps[swapId].target.addr, swapId);\n\n        delete _swaps[swapId];\n    }\n\n    /**\n    * @notice Cancel the incomplete swap, returning all assets to their original owners\n    * @dev Reverts all prior deposits, sending the assets back to their original owners\n    *\n    * @param swapId ID of the swap that the swap participants want to cancel\n    */\n    function cancelSwap(uint256 swapId) external nonReentrant whenNotPaused {\n        require(\n            _swaps[swapId].initiator.addr == msg.sender || _swaps[swapId].target.addr == msg.sender,\n            \"Tradescrow: Can't cancel swap, must be swap participant\"\n        );\n\n        _swaps[swapId].open = FALSEINT;\n\n        if (_swaps[swapId].initiator.addr == msg.sender) {\n            safeMultipleTransfersFrom(address(this), _swaps[swapId].initiator.addr, _swaps[swapId].initiator);\n            transferNative(_swaps[swapId].initiator, _swaps[swapId].initiator);\n            wipeOffer(_swaps[swapId].initiator);\n        } else if (_swaps[swapId].target.addr == msg.sender) {\n            safeMultipleTransfersFrom(address(this), _swaps[swapId].target.addr, _swaps[swapId].target);\n            transferNative(_swaps[swapId].target, _swaps[swapId].target);\n            wipeOffer(_swaps[swapId].target);\n        }\n\n        emit SwapCancelled(msg.sender, swapId);\n\n        if (isEmpty(_swaps[swapId].initiator) == TRUEINT && isEmpty(_swaps[swapId].target) == TRUEINT) {\n            emit SwapClosed(swapId);\n            delete _swaps[swapId];\n        }\n    }\n\n    // External Owner Functions\n\n    /**\n    * @notice Update the fee charged to each user for a swap\n    * @dev Can only be called by the contract owner\n    *\n    * @param newFee Fee in wei\n    */\n    function updateAppFee(uint newFee) external nonReentrant onlyOwner {\n        fee = newFee;\n        emit AppFeeChanged(newFee);\n    }\n\n    function pause() external nonReentrant onlyOwner {\n        _pause();\n    }\n\n    function unpause() external nonReentrant onlyOwner {\n        _unpause();\n    }\n\n    /**\n    * @notice Withdraw accrued fees from the contract to an address\n    * @dev Can only be called by the contract owner, and always leaves 1e18 native for gas\n    *\n    * @param recipient Ox address of the recipient\n    */\n    function withdrawFees(address payable recipient) external nonReentrant onlyOwner {\n        require(recipient != address(0), \"Tradescrow: transfer to the zero address\");\n\n        require(address(this).balance - _native - 1 ether >= 0, \"Tradescrow: No available fees\");\n\n        recipient.transfer(address(this).balance - _native - 1 ether);\n    }\n\n    // Internal Functions\n\n    function onlyInitiator(uint256 swapId) internal virtual {\n        require(\n            msg.sender == _swaps[swapId].initiator.addr,\n            \"Tradescrow: caller is not swap initiator\"\n        );\n    }\n\n    function onlyTarget(uint256 swapId) internal virtual {\n        require(\n            msg.sender == _swaps[swapId].target.addr,\n            \"Tradescrow: caller is not swap target\"\n        );\n    }\n\n    function requireEmpty(Offer memory offer) internal virtual {\n        require(FALSEINT == isNotEmpty(offer),\n            \"Tradescrow: Assets exist\"\n        );\n    }\n\n    function requireNotEmpty(Offer memory offer) internal virtual {\n        require(TRUEINT == isNotEmpty(offer),\n            \"Tradescrow: Can't accept offer, participant didn't add assets\"\n        );\n    }\n\n    function isNotEmpty(Offer memory offer) internal virtual returns(uint256) {\n        uint256 empty = FALSEINT;\n        if (offer.nfts.length != 0 || offer.coins.length != 0 || offer.native >= 0) {\n            empty = TRUEINT;\n        }\n        return empty;\n    }\n\n    function isEmpty(Offer memory offer) internal virtual returns(uint256) {\n        uint256 empty = FALSEINT;\n        if (offer.nfts.length == 0 && offer.coins.length == 0 && offer.native == 0) {\n            empty = TRUEINT;\n        }\n        return empty;\n    }\n\n    function wipeOffer(Offer storage offer) internal virtual {\n        delete offer.coins;\n        delete offer.nfts;\n        offer.native = 0;\n    }\n\n    function safeMultipleTransfersFrom(address from, address to, Offer memory offer) internal virtual {\n        for (uint256 i=0; i < offer.nfts.length; i++) {\n            if (offer.nfts[i].amount == 0) {\n                IERC721(offer.nfts[i].addr).safeTransferFrom(from, to, offer.nfts[i].id, \"\");\n            } else {\n                IERC1155(offer.nfts[i].addr).safeTransferFrom(from, to, offer.nfts[i].id, offer.nfts[i].amount, \"\");\n            }\n        }\n        for (uint256 i=0; i < offer.coins.length; i++) {\n            if (from == address(this)) {\n                IERC20(offer.coins[i].addr).safeTransfer(to, offer.coins[i].amount);\n            } else {\n                IERC20(offer.coins[i].addr).safeTransferFrom(from, to, offer.coins[i].amount);\n            }\n        }\n    }\n\n    function transferNative(Offer storage from, Offer storage to) internal virtual {\n        if (from.native > 0) {\n            _native -= from.native;\n            uint native = from.native;\n            from.native = 0;\n            to.addr.transfer(native);\n        }\n    }\n}"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Counters.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "IERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "IERC1155Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
              "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "ERC1155Holder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea2646970667358221220155f31d2cbac17078fd57532cef233713b16870b93f5d6ce8bf8666ef0e8c85764736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x5F BALANCE 0xD2 0xCB 0xAC OR SMOD DUP16 0xD5 PUSH22 0x32CEF233713B16870B93F5D6CE8BF8666EF0E8C85764 PUSH20 0x6F6C634300080900330000000000000000000000 ",
              "sourceMap": "451:522:5:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@onERC1155BatchReceived_449": {
                  "entryPoint": null,
                  "id": 449,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@onERC1155Received_426": {
                  "entryPoint": null,
                  "id": 426,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@supportsInterface_1361": {
                  "entryPoint": null,
                  "id": 1361,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@supportsInterface_483": {
                  "entryPoint": 197,
                  "id": 483,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 301,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 400,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
                  "entryPoint": 640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
                  "entryPoint": 810,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_bytes4": {
                  "entryPoint": 252,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 351,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4102:18",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:18",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "83:217:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "129:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "138:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "141:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "131:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "131:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "104:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "100:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "100:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "93:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "154:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "167:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "158:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "254:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "212:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "223:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "234:3:18",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "239:10:18",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "230:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "230:20:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "219:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "219:32:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "209:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "209:43:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "202:51:18"
                              },
                              "nodeType": "YulIf",
                              "src": "199:71:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "279:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "49:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "60:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "72:6:18",
                            "type": ""
                          }
                        ],
                        "src": "14:286:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "400:92:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "410:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "422:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "433:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "418:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "470:6:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "470:14:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "463:6:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "463:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "445:41:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "445:41:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "369:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "380:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "391:4:18",
                            "type": ""
                          }
                        ],
                        "src": "305:187:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "546:124:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "556:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "565:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "565:20:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "556:5:18"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "648:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "657:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "660:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "650:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "650:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "650:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "607:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "618:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "633:3:18",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "638:1:18",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "629:3:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "629:11:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "642:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "625:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "625:19:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "614:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "614:31:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "604:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "604:42:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "597:50:18"
                              },
                              "nodeType": "YulIf",
                              "src": "594:70:18"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "525:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "536:5:18",
                            "type": ""
                          }
                        ],
                        "src": "497:173:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "707:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "724:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "731:3:18",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "736:10:18",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "727:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "727:20:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "717:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "717:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "764:1:18",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "767:4:18",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "757:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "757:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "757:15:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "788:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "791:4:18",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "781:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "781:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "781:15:18"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "675:127:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "852:230:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "862:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "878:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "872:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "862:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "890:58:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "912:6:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "928:4:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "934:2:18",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "924:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "924:13:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "943:2:18",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "939:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "939:7:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "920:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "920:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "908:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "908:40:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "894:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1023:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1025:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1025:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1025:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "966:10:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "978:18:18",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "963:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "963:34:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1002:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1014:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "999:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "999:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "960:62:18"
                              },
                              "nodeType": "YulIf",
                              "src": "957:88:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1061:2:18",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1065:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1054:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1054:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1054:22:18"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "832:4:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "841:6:18",
                            "type": ""
                          }
                        ],
                        "src": "807:275:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1151:648:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1200:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1209:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1212:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1202:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1202:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1202:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1179:6:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1187:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1175:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1175:17:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1194:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1171:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1171:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1164:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1164:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1161:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1225:30:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1248:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1235:20:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1229:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1264:14:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1274:4:18",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1268:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1317:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1319:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1319:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1319:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1293:2:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1297:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1290:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1290:26:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1287:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1348:20:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1362:1:18",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1365:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1358:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1358:10:18"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1352:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1377:39:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1408:2:18"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1412:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1404:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1404:11:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1388:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1388:28:18"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1381:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1425:16:18",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1438:3:18"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1429:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1457:3:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1462:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1450:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1450:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1450:15:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1474:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1485:3:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1490:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1481:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1481:12:18"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1502:38:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1524:6:18"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1532:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1520:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1520:15:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1537:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1516:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1516:24:18"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "1506:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1568:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1577:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1580:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1570:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1570:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1570:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1555:6:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1563:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1552:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1552:15:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1549:35:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1593:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1608:6:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1616:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1604:15:18"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1597:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1684:86:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1705:3:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "1723:3:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1710:12:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1710:17:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1698:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1698:30:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1698:30:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1741:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1752:3:18"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1757:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1748:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1748:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1741:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1639:3:18"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1644:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1636:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1636:15:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1652:23:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1654:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1665:3:18"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1670:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1661:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1661:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1654:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1632:3:18",
                                "statements": []
                              },
                              "src": "1628:142:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1779:14:18",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "1788:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1779:5:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1125:6:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1133:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1141:5:18",
                            "type": ""
                          }
                        ],
                        "src": "1087:712:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1856:478:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1905:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1914:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1917:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1907:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1907:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1907:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1884:6:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1892:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1880:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1880:17:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1899:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1876:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1876:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1869:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1869:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1866:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1930:30:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1953:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1940:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1940:20:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1934:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1999:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2001:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2001:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2001:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1975:2:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1979:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1972:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1972:26:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1969:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2030:70:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2073:2:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2077:4:18",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2069:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2069:13:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2088:2:18",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2084:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2084:7:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2065:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2065:27:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2094:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2061:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2061:38:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2045:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2045:55:18"
                              },
                              "variables": [
                                {
                                  "name": "array_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2034:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2116:7:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2125:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2109:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2109:19:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2109:19:18"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2176:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2185:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2188:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2178:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2178:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2178:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2151:6:18"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2159:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2147:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2147:15:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2164:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2143:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2143:26:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2171:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2140:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2137:55:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2218:7:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2227:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2214:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2214:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2238:6:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2246:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2234:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2234:17:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2253:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2201:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2201:55:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2201:55:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2280:7:18"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2289:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2276:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2276:16:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2294:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2272:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2272:27:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2301:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2265:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2265:38:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2265:38:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2312:16:18",
                              "value": {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "2321:7:18"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2312:5:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1830:6:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1838:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1846:5:18",
                            "type": ""
                          }
                        ],
                        "src": "1804:530:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2536:746:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2583:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2592:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2595:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2585:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2585:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2585:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2557:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2566:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2553:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2553:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2578:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2549:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2549:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2546:53:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2608:39:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2637:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2618:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2618:29:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2608:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2656:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2689:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2700:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2685:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2685:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2666:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2666:38:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2656:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2713:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2744:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2755:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2740:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2740:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2727:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2727:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2717:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2768:28:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2778:18:18",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2772:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2823:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2832:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2835:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2825:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2825:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2825:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2811:6:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2819:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2808:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2808:14:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2805:34:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2848:71:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2891:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2902:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2887:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2887:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2911:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "2858:28:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2858:61:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2848:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2928:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2961:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2972:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2957:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2957:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2944:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2944:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2932:8:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3005:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3014:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3017:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3007:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3007:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3007:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2991:8:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3001:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2988:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2988:16:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2985:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3030:73:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3073:9:18"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3084:8:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3069:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3069:24:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3095:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "3040:28:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3040:63:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3030:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3112:49:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3145:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3156:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3141:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3141:19:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3128:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3128:33:18"
                              },
                              "variables": [
                                {
                                  "name": "offset_2",
                                  "nodeType": "YulTypedName",
                                  "src": "3116:8:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3190:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3199:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3202:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3192:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3192:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3192:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3176:8:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3186:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3173:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3173:16:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3170:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3215:61:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3246:9:18"
                                      },
                                      {
                                        "name": "offset_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3257:8:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3242:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3242:24:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3268:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "3225:16:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3225:51:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3215:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2470:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2481:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2493:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2501:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2509:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2517:6:18",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2525:6:18",
                            "type": ""
                          }
                        ],
                        "src": "2339:943:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3386:103:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3396:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3408:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3419:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3404:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3404:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3396:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3438:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3453:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3465:3:18",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3470:10:18",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3461:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3461:20:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3449:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3449:33:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3431:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3431:52:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3431:52:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3355:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3366:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3377:4:18",
                            "type": ""
                          }
                        ],
                        "src": "3287:202:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3641:459:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3688:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3697:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3700:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3690:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3690:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3690:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3662:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3671:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3658:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3658:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3683:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3654:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3654:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3651:53:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3713:39:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3742:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3723:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3723:29:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3713:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3761:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3794:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3805:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3790:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3790:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3771:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3771:38:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3761:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3818:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3845:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3856:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3841:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3841:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3828:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3828:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3818:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3869:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3896:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3907:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3892:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3892:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3879:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3879:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3869:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3920:47:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3951:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3962:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3947:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3947:19:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3934:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3934:33:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3924:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4010:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4019:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4022:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4012:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4012:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4012:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3982:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3990:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3979:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3979:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3976:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4035:59:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4066:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4077:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4062:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4062:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4086:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "4045:16:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4045:49:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4035:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3575:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3586:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3598:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3606:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3614:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3622:6:18",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3630:6:18",
                            "type": ""
                          }
                        ],
                        "src": "3494:606:18"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n}",
                  "id": 18,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea2646970667358221220155f31d2cbac17078fd57532cef233713b16870b93f5d6ce8bf8666ef0e8c85764736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x5F BALANCE 0xD2 0xCB 0xAC OR SMOD DUP16 0xD5 PUSH22 0x32CEF233713B16870B93F5D6CE8BF8666EF0E8C85764 PUSH20 0x6F6C634300080900330000000000000000000000 ",
              "sourceMap": "451:522:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:6;;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;387:221:6;;;;;;;;724:247:5;;;;;;:::i;:::-;-1:-1:-1;;;724:247:5;;;;;;;;;;;-1:-1:-1;;;;;;3449:33:18;;;3431:52;;3419:2;3404:18;724:247:5;3287:202:18;499:219:5;;;;;;:::i;:::-;-1:-1:-1;;;499:219:5;;;;;;;;387:221:6;489:4;-1:-1:-1;;;;;;512:49:6;;-1:-1:-1;;;512:49:6;;:89;;-1:-1:-1;;;;;;;;;;937:40:15;;;565:36:6;505:96;387:221;-1:-1:-1;;387:221:6:o;14:286:18:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:18:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:18;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:18;908:40;;978:18;963:34;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:18:o;1087:712::-;1141:5;1194:3;1187:4;1179:6;1175:17;1171:27;1161:55;;1212:1;1209;1202:12;1161:55;1248:6;1235:20;1274:4;1297:18;1293:2;1290:26;1287:52;;;1319:18;;:::i;:::-;1365:2;1362:1;1358:10;1388:28;1412:2;1408;1404:11;1388:28;:::i;:::-;1450:15;;;1520;;;1516:24;;;1481:12;;;;1552:15;;;1549:35;;;1580:1;1577;1570:12;1549:35;1616:2;1608:6;1604:15;1593:26;;1628:142;1644:6;1639:3;1636:15;1628:142;;;1710:17;;1698:30;;1661:12;;;;1748;;;;1628:142;;;1788:5;1087:712;-1:-1:-1;;;;;;;1087:712:18:o;1804:530::-;1846:5;1899:3;1892:4;1884:6;1880:17;1876:27;1866:55;;1917:1;1914;1907:12;1866:55;1953:6;1940:20;1979:18;1975:2;1972:26;1969:52;;;2001:18;;:::i;:::-;2045:55;2088:2;2069:13;;-1:-1:-1;;2065:27:18;2094:4;2061:38;2045:55;:::i;:::-;2125:2;2116:7;2109:19;2171:3;2164:4;2159:2;2151:6;2147:15;2143:26;2140:35;2137:55;;;2188:1;2185;2178:12;2137:55;2253:2;2246:4;2238:6;2234:17;2227:4;2218:7;2214:18;2201:55;2301:1;2276:16;;;2294:4;2272:27;2265:38;;;;2280:7;1804:530;-1:-1:-1;;;1804:530:18:o;2339:943::-;2493:6;2501;2509;2517;2525;2578:3;2566:9;2557:7;2553:23;2549:33;2546:53;;;2595:1;2592;2585:12;2546:53;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:38;2700:2;2689:9;2685:18;2666:38;:::i;:::-;2656:48;;2755:2;2744:9;2740:18;2727:32;2778:18;2819:2;2811:6;2808:14;2805:34;;;2835:1;2832;2825:12;2805:34;2858:61;2911:7;2902:6;2891:9;2887:22;2858:61;:::i;:::-;2848:71;;2972:2;2961:9;2957:18;2944:32;2928:48;;3001:2;2991:8;2988:16;2985:36;;;3017:1;3014;3007:12;2985:36;3040:63;3095:7;3084:8;3073:9;3069:24;3040:63;:::i;:::-;3030:73;;3156:3;3145:9;3141:19;3128:33;3112:49;;3186:2;3176:8;3173:16;3170:36;;;3202:1;3199;3192:12;3170:36;;3225:51;3268:7;3257:8;3246:9;3242:24;3225:51;:::i;:::-;3215:61;;;2339:943;;;;;;;;:::o;3494:606::-;3598:6;3606;3614;3622;3630;3683:3;3671:9;3662:7;3658:23;3654:33;3651:53;;;3700:1;3697;3690:12;3651:53;3723:29;3742:9;3723:29;:::i;:::-;3713:39;;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3761:48;;3856:2;3845:9;3841:18;3828:32;3818:42;;3907:2;3896:9;3892:18;3879:32;3869:42;;3962:3;3951:9;3947:19;3934:33;3990:18;3982:6;3979:30;3976:50;;;4022:1;4019;4012:12;3976:50;4045:49;4086:7;4077:6;4066:9;4062:22;4045:49;:::i"
            },
            "methodIdentifiers": {
              "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
              "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "ERC1155Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
              "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d350bee649aab7c68f3c42a510cb0899593916113eecd6183ed2998e542038864736f6c63430008090033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATALOAD SIGNEXTEND 0xEE PUSH5 0x9AAB7C68F3 0xC4 0x2A MLOAD 0xC 0xB0 DUP10 SWAP6 SWAP4 SWAP2 PUSH2 0x13EE 0xCD PUSH2 0x83ED 0x29 SWAP9 0xE5 TIMESTAMP SUB DUP9 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "645:3270:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:8;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d350bee649aab7c68f3c42a510cb0899593916113eecd6183ed2998e542038864736f6c63430008090033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATALOAD SIGNEXTEND 0xEE PUSH5 0x9AAB7C68F3 0xC4 0x2A MLOAD 0xC 0xB0 DUP10 SWAP6 SWAP4 SWAP2 PUSH2 0x13EE 0xCD PUSH2 0x83ED 0x29 SWAP9 0xE5 TIMESTAMP SUB DUP9 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "645:3270:8:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ERC721Holder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220066dd343f5771414317e8b4ab5cc95e59f3e3a3965231f32491ecd6627a8d84664736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH14 0xD343F5771414317E8B4AB5CC95E5 SWAP16 RETURNDATACOPY GASPRICE CODECOPY PUSH6 0x231F32491ECD PUSH7 0x27A8D84664736F PUSH13 0x63430008090033000000000000 ",
              "sourceMap": "399:391:11:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@onERC721Received_946": {
                  "entryPoint": null,
                  "id": 946,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 107,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                  "entryPoint": 157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 135,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1671:18",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:18",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:18"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:18",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:18",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:18"
                              },
                              "nodeType": "YulIf",
                              "src": "111:70:18"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:18",
                            "type": ""
                          }
                        ],
                        "src": "14:173:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "224:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "241:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:3:18",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:10:18",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "244:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "244:20:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "234:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "281:1:18",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "284:4:18",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "274:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "274:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "274:15:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "305:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "308:4:18",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "298:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "298:15:18"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "192:127:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "454:1008:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "501:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "510:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "513:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "503:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "503:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "503:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "475:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "484:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "471:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "471:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "467:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "467:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "464:53:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "526:39:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "555:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "536:29:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "574:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "607:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "618:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "603:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "603:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "584:18:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "584:38:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "631:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "658:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "669:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "654:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "654:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "641:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "641:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "682:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "713:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "724:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "709:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "709:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "696:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "696:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "686:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "737:28:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "747:18:18",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "741:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "792:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "801:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "804:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "794:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "794:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "794:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "780:6:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "788:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "777:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "777:14:18"
                              },
                              "nodeType": "YulIf",
                              "src": "774:34:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "817:32:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "831:9:18"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "827:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "827:22:18"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "821:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "897:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "906:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "909:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "899:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "899:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "899:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "876:2:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "880:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "872:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "872:13:18"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "887:7:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "861:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "861:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "858:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "922:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "945:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "932:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "932:16:18"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "926:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "971:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "973:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "973:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "973:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "963:2:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "967:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "960:10:18"
                              },
                              "nodeType": "YulIf",
                              "src": "957:36:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1002:17:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1016:2:18",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:7:18"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1006:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1028:23:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1048:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1042:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1042:9:18"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1032:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1060:71:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1082:6:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1106:2:18"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1110:4:18",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1102:3:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1102:13:18"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1117:2:18"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "1098:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1098:22:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1122:2:18",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1094:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1094:31:18"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1127:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1090:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1090:40:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1078:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1078:53:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1064:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1190:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1192:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1192:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1192:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1149:10:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1161:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1146:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1146:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1169:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1181:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1166:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1166:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1143:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1143:46:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1140:72:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1228:2:18",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1232:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1221:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1221:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1221:22:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1259:6:18"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1267:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1252:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1252:18:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1252:18:18"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1316:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1325:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1328:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1318:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1318:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1318:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1293:2:18"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1297:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1289:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1289:11:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1302:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1285:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1285:20:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1307:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1282:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1282:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1279:53:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1358:6:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1366:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1354:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1354:15:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1375:2:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1379:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1371:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1371:11:18"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1384:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1341:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1341:46:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1341:46:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1411:6:18"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1419:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1407:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1407:15:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1424:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1403:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1403:24:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1396:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1396:35:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1396:35:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1440:16:18",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1450:6:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1440:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "396:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "407:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "419:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "427:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "435:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "443:6:18",
                            "type": ""
                          }
                        ],
                        "src": "324:1138:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1566:103:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1576:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1588:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1599:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1584:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1584:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1576:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1618:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1633:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1645:3:18",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1650:10:18",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1641:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1641:20:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1629:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1629:33:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1611:52:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1611:52:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1535:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1546:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1557:4:18",
                            "type": ""
                          }
                        ],
                        "src": "1467:202:18"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
                  "id": 18,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220066dd343f5771414317e8b4ab5cc95e59f3e3a3965231f32491ecd6627a8d84664736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH14 0xD343F5771414317E8B4AB5CC95E5 SWAP16 RETURNDATACOPY GASPRICE CODECOPY PUSH6 0x231F32491ECD PUSH7 0x27A8D84664736F PUSH13 0x63430008090033000000000000 ",
              "sourceMap": "399:391:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;:::i;:::-;-1:-1:-1;;;588:200:11;;;;;;;;;;-1:-1:-1;;;;;;1629:33:18;;;1611:52;;1599:2;1584:18;588:200:11;;;;;;;14:173:18;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:1138;419:6;427;435;443;496:3;484:9;475:7;471:23;467:33;464:53;;;513:1;510;503:12;464:53;536:29;555:9;536:29;:::i;:::-;526:39;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;;669:2;658:9;654:18;641:32;631:42;;724:2;713:9;709:18;696:32;747:18;788:2;780:6;777:14;774:34;;;804:1;801;794:12;774:34;842:6;831:9;827:22;817:32;;887:7;880:4;876:2;872:13;868:27;858:55;;909:1;906;899:12;858:55;945:2;932:16;967:2;963;960:10;957:36;;;973:18;;:::i;:::-;1048:2;1042:9;1016:2;1102:13;;-1:-1:-1;;1098:22:18;;;1122:2;1094:31;1090:40;1078:53;;;1146:18;;;1166:22;;;1143:46;1140:72;;;1192:18;;:::i;:::-;1232:10;1228:2;1221:22;1267:2;1259:6;1252:18;1307:7;1302:2;1297;1293;1289:11;1285:20;1282:33;1279:53;;;1328:1;1325;1318:12;1279:53;1384:2;1379;1375;1371:11;1366:2;1358:6;1354:15;1341:46;1429:1;1424:2;1419;1411:6;1407:15;1403:24;1396:35;1450:6;1440:16;;;;;;;324:1138;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fed1c670fb2d9c9b1a71294d887b0ea0e2654cb61478a99a9bbce60cd073300e64736f6c63430008090033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xD1 0xC6 PUSH17 0xFB2D9C9B1A71294D887B0EA0E2654CB614 PUSH25 0xA99A9BBCE60CD073300E64736F6C6343000809003300000000 ",
              "sourceMap": "194:8061:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:12;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fed1c670fb2d9c9b1a71294d887b0ea0e2654cb61478a99a9bbce60cd073300e64736f6c63430008090033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xD1 0xC6 PUSH17 0xFB2D9C9B1A71294D887B0EA0E2654CB614 PUSH25 0xA99A9BBCE60CD073300E64736F6C6343000809003300000000 ",
              "sourceMap": "194:8061:12:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Counters.sol": {
        "Counters": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220933bc6304dbcd880d97963c87168b2dd2f1316baa9b071ecea11ffb974a71cb964736f6c63430008090033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EXTCODESIZE 0xC6 ADDRESS 0x4D 0xBC 0xD8 DUP1 0xD9 PUSH26 0x63C87168B2DD2F1316BAA9B071ECEA11FFB974A71CB964736F6C PUSH4 0x43000809 STOP CALLER ",
              "sourceMap": "424:971:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:14;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220933bc6304dbcd880d97963c87168b2dd2f1316baa9b071ecea11ffb974a71cb964736f6c63430008090033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EXTCODESIZE 0xC6 ADDRESS 0x4D 0xBC 0xD8 DUP1 0xD9 PUSH26 0x63C87168B2DD2F1316BAA9B071ECEA11FFB974A71CB964736F6C PUSH4 0x43000809 STOP CALLER ",
              "sourceMap": "424:971:14:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "contracts/Tradescrow.sol": {
        "Tradescrow": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialAppFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "contractOwnerAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "AppFeeChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "cancelledBy",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                }
              ],
              "name": "SwapCancelled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                }
              ],
              "name": "SwapClosed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                }
              ],
              "name": "SwapExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "native",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Nft[]",
                      "name": "nfts",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Coin[]",
                      "name": "coins",
                      "type": "tuple[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Tradescrow.Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "SwapInitiated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "native",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Nft[]",
                      "name": "nfts",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Coin[]",
                      "name": "coins",
                      "type": "tuple[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Tradescrow.Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "SwapProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                }
              ],
              "name": "acceptSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                }
              ],
              "name": "cancelSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "native",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Nft[]",
                      "name": "nfts",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Coin[]",
                      "name": "coins",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Tradescrow.Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "initiateSwap",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "native",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Nft[]",
                      "name": "nfts",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "addr",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Tradescrow.Coin[]",
                      "name": "coins",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Tradescrow.Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "name": "proposeSwap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                }
              ],
              "name": "updateAppFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_131": {
                  "entryPoint": null,
                  "id": 131,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_1518": {
                  "entryPoint": null,
                  "id": 1518,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_215": {
                  "entryPoint": null,
                  "id": 215,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_1254": {
                  "entryPoint": null,
                  "id": 1254,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_103": {
                  "entryPoint": 113,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_32": {
                  "entryPoint": null,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferOwnership_83": {
                  "entryPoint": 193,
                  "id": 83,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256t_address_payable_fromMemory": {
                  "entryPoint": 406,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1143:18",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:18",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "120:253:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "166:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "175:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "168:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "168:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "168:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "150:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "137:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "137:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "162:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "130:52:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "191:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "207:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "201:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "201:16:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "191:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "226:38:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "249:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "239:25:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "230:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "327:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "336:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "339:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "329:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "329:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "329:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "286:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "297:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "312:3:18",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "317:1:18",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "308:3:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "308:11:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "321:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "304:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "304:19:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "293:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "293:31:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "283:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "283:42:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "276:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "276:50:18"
                              },
                              "nodeType": "YulIf",
                              "src": "273:70:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "352:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "362:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "352:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "78:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "89:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "101:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "109:6:18",
                            "type": ""
                          }
                        ],
                        "src": "14:359:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "552:182:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "569:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "580:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "562:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "562:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "603:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "614:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "599:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "599:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "619:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "592:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "592:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "592:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "642:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "653:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "638:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "638:18:18"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "658:34:18",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "631:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "631:62:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "702:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "714:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "725:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "710:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "710:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "702:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "529:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "543:4:18",
                            "type": ""
                          }
                        ],
                        "src": "378:356:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "913:228:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "930:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "941:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "923:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "923:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "964:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "975:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "960:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "960:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "980:2:18",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "953:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "953:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "953:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1003:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1014:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "999:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "999:18:18"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1019:34:18",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "992:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1074:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1085:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1070:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1070:18:18"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1090:8:18",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1063:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1063:36:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1063:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1108:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1120:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1131:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1116:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1116:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1108:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "890:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "904:4:18",
                            "type": ""
                          }
                        ],
                        "src": "739:402:18"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 18,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162002dd638038062002dd6833981016040819052620000349162000196565b6200003f3362000071565b600180556002805460ff1916905560058290556200006981620000c1602090811b620017ad17901c565b5050620001d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000118565b620001938162000071565b50565b60008060408385031215620001aa57600080fd5b825160208401519092506001600160a01b0381168114620001ca57600080fd5b809150509250929050565b612bf180620001e56000396000f3fe6080604052600436106100fe5760003560e01c8063715018a611610095578063b5cbcb8811610064578063b5cbcb8814610290578063bc197c81146102b1578063ddca3f43146102dd578063f23a6e61146102f3578063f2fde38b1461031f57600080fd5b8063715018a61461022b5780637cb1774d146102405780638456cb59146102535780638da5cb5b1461026857600080fd5b80633f4ba83a116100d15780633f4ba83a146101be57806352492815146101d357806354d6a2b7146101f35780635c975abb1461021357600080fd5b806301ffc9a714610103578063150b7a0214610138578063164e68de1461017c5780631bf330041461019e575b600080fd5b34801561010f57600080fd5b5061012361011e366004612288565b61033f565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b506101636101533660046123ed565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161012f565b34801561018857600080fd5b5061019c610197366004612459565b610376565b005b3480156101aa57600080fd5b5061019c6101b9366004612476565b610507565b3480156101ca57600080fd5b5061019c610a63565b3480156101df57600080fd5b5061019c6101ee366004612476565b610ac3565b3480156101ff57600080fd5b5061019c61020e366004612476565b610b54565b34801561021f57600080fd5b5060025460ff16610123565b34801561023757600080fd5b5061019c6110dd565b61019c61024e366004612662565b611113565b34801561025f57600080fd5b5061019c6114b7565b34801561027457600080fd5b506000546040516001600160a01b03909116815260200161012f565b6102a361029e3660046126a9565b611511565b60405190815260200161012f565b3480156102bd57600080fd5b506101636102cc36600461273e565b63bc197c8160e01b95945050505050565b3480156102e957600080fd5b506102a360055481565b3480156102ff57600080fd5b5061016361030e3660046127ec565b63f23a6e6160e01b95945050505050565b34801561032b57600080fd5b5061019c61033a366004612459565b6117ad565b60006001600160e01b03198216630271189760e51b148061037057506301ffc9a760e01b6001600160e01b03198316145b92915050565b600260015414156103a25760405162461bcd60e51b815260040161039990612855565b60405180910390fd5b60026001556000546001600160a01b031633146103d15760405162461bcd60e51b81526004016103999061288c565b6001600160a01b0381166104385760405162461bcd60e51b815260206004820152602860248201527f54726164657363726f773a207472616e7366657220746f20746865207a65726f604482015267206164647265737360c01b6064820152608401610399565b6000670de0b6b3a76400006004544761045191906128d7565b61045b91906128d7565b10156104a95760405162461bcd60e51b815260206004820152601d60248201527f54726164657363726f773a204e6f20617661696c61626c6520666565730000006044820152606401610399565b806001600160a01b03166108fc670de0b6b3a7640000600454476104cd91906128d7565b6104d791906128d7565b6040518115909202916000818181858888f193505050501580156104ff573d6000803e3d6000fd5b505060018055565b6002600154141561052a5760405162461bcd60e51b815260040161039990612855565b600260015561053b60025460ff1690565b156105585760405162461bcd60e51b8152600401610399906128ee565b61056181611848565b6000818152600660205260409020600801546001146105925760405162461bcd60e51b815260040161039990612918565b6000818152600660209081526040808320815160808101835281546001600160a01b0316815260018201548185015260028201805484518187028101870186528181526106bd979396949587019490939084015b8282101561063b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016105e6565b50505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156106b0576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610668565b50505050815250506118bf565b600081815260066020818152604080842081516080810183526004820180546001600160a01b031682526005830154828601529190940180548351818602810186018552818152610766979395948701949093908401821561063b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016105e6565b6000818152600660208181526040808420805482516080810184526004830180546001600160a01b039081168352600585015483880152939096018054855181880281018801875281815261089d99309996909516979396870194909384015b8282101561081b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016107c6565b50505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610890576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610848565b505050508152505061193d565b60008181526006602090815260408083206004810154825160808101845282546001600160a01b039081168252600184015482870152600284018054865181890281018901885281815261095099309994909616979496959487019490938401821561081b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016107c6565b600081815260066020526040902061096b9060048101611c4f565b6000818152600660205260409020610987906004810190611c4f565b60008181526006602052604080822060048101549054915184936001600160a01b0392831693909216917fbad29f2bbbf6bb1e15563203bcdb0dd660c54eab078763eb66f797efa8f5e8c191a4600081815260066020526040812080546001600160a01b031916815560018101829055908181610a0760028301826121ef565b610a15600383016000612210565b50506004820180546001600160a01b0319168155600060058401819055610a3f60068501826121ef565b610a4d600383016000612210565b5050600882016000905550506001808190555050565b60026001541415610a865760405162461bcd60e51b815260040161039990612855565b60026001556000546001600160a01b03163314610ab55760405162461bcd60e51b81526004016103999061288c565b610abd611cbe565b60018055565b60026001541415610ae65760405162461bcd60e51b815260040161039990612855565b60026001556000546001600160a01b03163314610b155760405162461bcd60e51b81526004016103999061288c565b60058190556040518181527fe854185167cff7d85f6ce2ae7d2940249c4a78ae54e270a5f7dddf8e5d7cc4589060200160405180910390a15060018055565b60026001541415610b775760405162461bcd60e51b815260040161039990612855565b6002600155610b8860025460ff1690565b15610ba55760405162461bcd60e51b8152600401610399906128ee565b6000818152600660205260409020546001600160a01b0316331480610be357506000818152600660205260409020600401546001600160a01b031633145b610c555760405162461bcd60e51b815260206004820152603760248201527f54726164657363726f773a2043616e27742063616e63656c20737761702c206d60448201527f7573742062652073776170207061727469636970616e740000000000000000006064820152608401610399565b600081815260066020526040902060026008820155546001600160a01b0316331415610d5c576000818152600660209081526040808320805482516080810184526001600160a01b039091168082526001830154828601526002830180548551818802810188018752818152610d289830989497959695870194919392918401821561081b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016107c6565b6000818152600660205260409020610d409080611c4f565b6000818152600660205260409020610d5790611d51565b610e66565b6000818152600660205260409020600401546001600160a01b0316331415610e6657600081815260066020818152604080842060048101805483516080810185526001600160a01b039091168082526005840154828701529290950180548451818702810187018652818152610e3198309895979596949594870194919392918401821561081b576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016107c6565b6000818152600660205260409020610e4c9060040180611c4f565b6000818152600660205260409020610e6690600401611d51565b604051819033907f85562d2d9b6fe46899f9b6ed410d0330551d861f63395b58c411a9d8159ce08790600090a36000818152600660209081526040808320815160808101835281546001600160a01b031681526001828101548286015260028301805485518188028101880187528181529297610fbc97949687019484015b82821015610f3a576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101610ee5565b50505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610faf576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610f67565b5050505081525050611d77565b1480156110735750600081815260066020818152604080842081516080810183526004820180546001600160a01b031682526005830154828601529190940180548351818602810186018552818152600197611071979694958701949193929184018215610f3a576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101610ee5565b145b156110d65760405181907fd00350bcac47bd6aa8c7905e0b67f2de5cd9766526dc50203bbfb229bf6d17a790600090a2600081815260066020526040812080546001600160a01b031916815560018101829055908181610a0760028301826121ef565b5060018055565b6000546001600160a01b031633146111075760405162461bcd60e51b81526004016103999061288c565b6111116000611daf565b565b600260015414156111365760405162461bcd60e51b815260040161039990612855565b600260015560055434101561115d5760405162461bcd60e51b815260040161039990612969565b60025460ff16156111805760405162461bcd60e51b8152600401610399906128ee565b61118982611dff565b600082815260066020818152604080842081516080810183526004820180546001600160a01b031682526005830154828601529190940180548351818602810186018552818152600197611236979694958701949193929184018215610f3a576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101610ee5565b1461128e5760405162461bcd60e51b815260206004820152602260248201527f54726164657363726f773a207377617020616c726561647920696e6974696174604482015261195960f21b6064820152608401610399565b6000828152600660205260409020600801546001146112bf5760405162461bcd60e51b815260040161039990612918565b6112c8816118bf565b6112d333308361193d565b60005b81604001515181101561137e576006600084815260200190815260200160002060040160020182604001518281518110611312576113126129df565b602090810291909101810151825460018082018555600094855293839020825160039092020180546001600160a01b0319166001600160a01b03909216919091178155918101519282019290925560409091015160029091015580611376816129f5565b9150506112d6565b5060005b81606001515181101561141557600083815260066020526040902060608301518051600790920191839081106113ba576113ba6129df565b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b039092169190911781559101519101558061140d816129f5565b915050611382565b506005543411156114595760055461142d90346128d7565b600083815260066020526040812060050182905560048054909190611453908490612a10565b90915550505b6000828152600660205260409081902054905183916001600160a01b03169033907f9290cd7656e70519b1c9efcc328a9e9e7c9122292708c3c57e1f1491e99f2511906114a7908690612a77565b60405180910390a4505060018055565b600260015414156114da5760405162461bcd60e51b815260040161039990612855565b60026001556000546001600160a01b031633146115095760405162461bcd60e51b81526004016103999061288c565b610abd611e76565b6000600260015414156115365760405162461bcd60e51b815260040161039990612855565b600260015560055434101561155d5760405162461bcd60e51b815260040161039990612969565b60025460ff16156115805760405162461bcd60e51b8152600401610399906128ee565b611589826118bf565b611597600380546001019055565b6115a233308461193d565b6000600660006115b160035490565b8152602081019190915260400160009081206001600882015580546001600160a01b0319163317815591505b836040015151811015611673578160000160020184604001518281518110611607576116076129df565b602090810291909101810151825460018082018555600094855293839020825160039092020180546001600160a01b0319166001600160a01b0390921691909117815591810151928201929092556040909101516002909101558061166b816129f5565b9150506115dd565b5060005b8360600151518110156116fc5781600001600301846060015182815181106116a1576116a16129df565b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151910155806116f4816129f5565b915050611677565b506005543411156117335760055461171490346128d7565b600182018190556004805460009061172d908490612a10565b90915550505b6004810180546001600160a01b0319166001600160a01b038616179055600354846001600160a01b0316336001600160a01b03167fe81763bf4aba65d65f664f69edeb190a5d5bb77d7c98e2e1a0e39a1b04c5db37866040516117969190612a77565b60405180910390a460035460018055949350505050565b6000546001600160a01b031633146117d75760405162461bcd60e51b81526004016103999061288c565b6001600160a01b03811661183c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610399565b61184581611daf565b50565b6000818152600660205260409020546001600160a01b031633146118455760405162461bcd60e51b815260206004820152602860248201527f54726164657363726f773a2063616c6c6572206973206e6f74207377617020696044820152673734ba34b0ba37b960c11b6064820152608401610399565b6118c881611ece565b6001146118455760405162461bcd60e51b815260206004820152603d60248201527f54726164657363726f773a2043616e277420616363657074206f666665722c2060448201527f7061727469636970616e74206469646e277420616464206173736574730000006064820152608401610399565b60005b816040015151811015611b4e5781604001518181518110611963576119636129df565b60200260200101516020015160001415611a49578160400151818151811061198d5761198d6129df565b6020026020010151600001516001600160a01b031663b88d4fde8585856040015185815181106119bf576119bf6129df565b602090810291909101015160409081015190516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152608060648201526000608482015260a401600060405180830381600087803b158015611a2c57600080fd5b505af1158015611a40573d6000803e3d6000fd5b50505050611b3c565b81604001518181518110611a5f57611a5f6129df565b6020026020010151600001516001600160a01b031663f242432a858585604001518581518110611a9157611a916129df565b60200260200101516040015186604001518681518110611ab357611ab36129df565b60209081029190910181015101516040516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260a06084820152600060a482015260c401600060405180830381600087803b158015611b2357600080fd5b505af1158015611b37573d6000803e3d6000fd5b505050505b80611b46816129f5565b915050611940565b5060005b816060015151811015611c49576001600160a01b038416301415611bd557611bd08383606001518381518110611b8a57611b8a6129df565b60200260200101516020015184606001518481518110611bac57611bac6129df565b6020026020010151600001516001600160a01b0316611efa9092919063ffffffff16565b611c37565b611c37848484606001518481518110611bf057611bf06129df565b60200260200101516020015185606001518581518110611c1257611c126129df565b6020026020010151600001516001600160a01b0316611f62909392919063ffffffff16565b80611c41816129f5565b915050611b52565b50505050565b600182015415611cba57816001015460046000828254611c6f91906128d7565b9091555050600182018054600091829055825460405191926001600160a01b039091169183156108fc0291849190818181858888f19350505050158015611c49573d6000803e3d6000fd5b5050565b60025460ff16611d075760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610399565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611d5f600382016000612210565b611d6d6002820160006121ef565b6000600190910155565b604081015151600090600290158015611d935750606083015151155b8015611da157506020830151155b156103705750600192915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600660205260409020600401546001600160a01b031633146118455760405162461bcd60e51b815260206004820152602560248201527f54726164657363726f773a2063616c6c6572206973206e6f7420737761702074604482015264185c99d95d60da1b6064820152608401610399565b60025460ff1615611e995760405162461bcd60e51b8152600401610399906128ee565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d343390565b604081015151600090600290151580611eeb575060608301515115155b80611da1575050600192915050565b6040516001600160a01b038316602482015260448101829052611f5d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f9a565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611c499085906323b872dd60e01b90608401611f26565b6000611fef826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661206c9092919063ffffffff16565b805190915015611f5d578080602001905181019061200d9190612b1e565b611f5d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610399565b606061207b8484600085612085565b90505b9392505050565b6060824710156120e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610399565b6001600160a01b0385163b61213d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610399565b600080866001600160a01b031685876040516121599190612b6c565b60006040518083038185875af1925050503d8060008114612196576040519150601f19603f3d011682016040523d82523d6000602084013e61219b565b606091505b50915091506121ab8282866121b6565b979650505050505050565b606083156121c557508161207e565b8251156121d55782518084602001fd5b8160405162461bcd60e51b81526004016103999190612b88565b50805460008255600302906000526020600020908101906118459190612231565b50805460008255600202906000526020600020908101906118459190612262565b5b8082111561225e5780546001600160a01b03191681556000600182018190556002820155600301612232565b5090565b5b8082111561225e5780546001600160a01b031916815560006001820155600201612263565b60006020828403121561229a57600080fd5b81356001600160e01b03198116811461207e57600080fd5b6001600160a01b038116811461184557600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612300576123006122c7565b60405290565b6040516080810167ffffffffffffffff81118282101715612300576123006122c7565b6040516060810167ffffffffffffffff81118282101715612300576123006122c7565b604051601f8201601f1916810167ffffffffffffffff81118282101715612375576123756122c7565b604052919050565b600082601f83011261238e57600080fd5b813567ffffffffffffffff8111156123a8576123a86122c7565b6123bb601f8201601f191660200161234c565b8181528460208386010111156123d057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561240357600080fd5b843561240e816122b2565b9350602085013561241e816122b2565b925060408501359150606085013567ffffffffffffffff81111561244157600080fd5b61244d8782880161237d565b91505092959194509250565b60006020828403121561246b57600080fd5b813561207e816122b2565b60006020828403121561248857600080fd5b5035919050565b600067ffffffffffffffff8211156124a9576124a96122c7565b5060051b60200190565b600082601f8301126124c457600080fd5b813560206124d96124d48361248f565b61234c565b82815260069290921b840181019181810190868411156124f857600080fd5b8286015b8481101561254057604081890312156125155760008081fd5b61251d6122dd565b8135612528816122b2565b815281850135858201528352918301916040016124fc565b509695505050505050565b60006080828403121561255d57600080fd5b612565612306565b90508135612572816122b2565b81526020828101358183015260408084013567ffffffffffffffff8082111561259a57600080fd5b818601915086601f8301126125ae57600080fd5b81356125bc6124d48261248f565b8181526060918202840186019186820191908a8411156125db57600080fd5b948701945b8386101561262c5780868c0312156125f85760008081fd5b612600612329565b863561260b816122b2565b815286890135898201528787013588820152835294850194918701916125e0565b81878a0152808a013597508488111561264457600080fd5b6126508b898c016124b3565b818a0152505050505050505092915050565b6000806040838503121561267557600080fd5b82359150602083013567ffffffffffffffff81111561269357600080fd5b61269f8582860161254b565b9150509250929050565b600080604083850312156126bc57600080fd5b82356126c7816122b2565b9150602083013567ffffffffffffffff81111561269357600080fd5b600082601f8301126126f457600080fd5b813560206127046124d48361248f565b82815260059290921b8401810191818101908684111561272357600080fd5b8286015b848110156125405780358352918301918301612727565b600080600080600060a0868803121561275657600080fd5b8535612761816122b2565b94506020860135612771816122b2565b9350604086013567ffffffffffffffff8082111561278e57600080fd5b61279a89838a016126e3565b945060608801359150808211156127b057600080fd5b6127bc89838a016126e3565b935060808801359150808211156127d257600080fd5b506127df8882890161237d565b9150509295509295909350565b600080600080600060a0868803121561280457600080fd5b853561280f816122b2565b9450602086013561281f816122b2565b93506040860135925060608601359150608086013567ffffffffffffffff81111561284957600080fd5b6127df8882890161237d565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156128e9576128e96128c1565b500390565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526031908201527f54726164657363726f773a205377617020636c6f7365642e204f6e6c79207573604082015270195c8818d85b98d95b08195b98589b1959607a1b606082015260800190565b60208082526050908201527f54726164657363726f773a2053656e7420616d6f756e74206e6565647320746f60408201527f2062652067726561746572207468616e206f7220657175616c20746f2074686560608201526f206170706c69636174696f6e2066656560801b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a0957612a096128c1565b5060010190565b60008219821115612a2357612a236128c1565b500190565b600081518084526020808501945080840160005b83811015612a6c57815180516001600160a01b031688528301518388015260409096019590820190600101612a3c565b509495945050505050565b6000602080835260a0830160018060a01b0380865116838601528286015160408181880152808801519150606060808189015284835180875260c08a0191508785019650600094505b80851015612af3578651805187168352888101518984015284015184830152958701956001949094019390820190612ac0565b5089820151898203601f190160808b01529650612b108188612a28565b9a9950505050505050505050565b600060208284031215612b3057600080fd5b8151801515811461207e57600080fd5b60005b83811015612b5b578181015183820152602001612b43565b83811115611c495750506000910152565b60008251612b7e818460208701612b40565b9190910192915050565b6020815260008251806020840152612ba7816040850160208701612b40565b601f01601f1916919091016040019291505056fea26469706673582212203e629806437385f17314e6ea9494adf16d2ef5a766483d7b8142a8ccfa27401664736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DD6 CODESIZE SUB DUP1 PUSH3 0x2DD6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x196 JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x71 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH3 0x69 DUP2 PUSH3 0xC1 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x17AD OR SWAP1 SHR JUMP JUMPDEST POP POP PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x188 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x118 JUMP JUMPDEST PUSH3 0x193 DUP2 PUSH3 0x71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF1 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB5CBCB88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB5CBCB88 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x7CB1774D EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x52492815 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x54D6A2B7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x164E68DE EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x1BF33004 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x23ED JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0xA63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x19C PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x1113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x14B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x273E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x27EC JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x370 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A207472616E7366657220746F20746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD SELFBALANCE PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A204E6F20617661696C61626C652066656573000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD SELFBALANCE PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x53B PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x561 DUP2 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH2 0x6BD SWAP8 SWAP4 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5E6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x668 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH2 0x766 SWAP8 SWAP4 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x5 DUP6 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP4 SWAP1 SWAP7 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE PUSH2 0x89D SWAP10 ADDRESS SWAP10 SWAP7 SWAP1 SWAP6 AND SWAP8 SWAP4 SWAP7 DUP8 ADD SWAP5 SWAP1 SWAP4 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x848 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP3 DUP8 ADD MSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD DUP7 MLOAD DUP2 DUP10 MUL DUP2 ADD DUP10 ADD DUP9 MSTORE DUP2 DUP2 MSTORE PUSH2 0x950 SWAP10 ADDRESS SWAP10 SWAP5 SWAP1 SWAP7 AND SWAP8 SWAP5 SWAP7 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP4 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x96B SWAP1 PUSH1 0x4 DUP2 ADD PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x987 SWAP1 PUSH1 0x4 DUP2 ADD SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH32 0xBAD29F2BBBF6BB1E15563203BCDB0DD660C54EAB078763EB66F797EFA8F5E8C1 SWAP2 LOG4 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 DUP2 DUP2 PUSH2 0xA07 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0xA15 PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST POP POP PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x5 DUP5 ADD DUP2 SWAP1 SSTORE PUSH2 0xA3F PUSH1 0x6 DUP6 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0xA4D PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST POP POP PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0xABD PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xE854185167CFF7D85F6CE2AE7D2940249C4A78AE54E270A5F7DDDF8E5D7CC458 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xB88 PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xBE3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2043616E27742063616E63656C20737761702C206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7573742062652073776170207061727469636970616E74000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 PUSH1 0x8 DUP3 ADD SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE PUSH2 0xD28 SWAP9 ADDRESS SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD40 SWAP1 DUP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD57 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xE66 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x5 DUP5 ADD SLOAD DUP3 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP6 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH2 0xE31 SWAP9 ADDRESS SWAP9 SWAP6 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE4C SWAP1 PUSH1 0x4 ADD DUP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE66 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0x85562D2D9B6FE46899F9B6ED410D0330551D861F63395B58C411A9D8159CE087 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP8 PUSH2 0xFBC SWAP8 SWAP5 SWAP7 DUP8 ADD SWAP5 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xF67 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x1D77 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1073 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 SWAP8 PUSH2 0x1071 SWAP8 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD00350BCAC47BD6AA8C7905E0B67F2DE5CD9766526DC50203BBFB229BF6D17A7 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 DUP2 DUP2 PUSH2 0xA07 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0x1111 PUSH1 0x0 PUSH2 0x1DAF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x1189 DUP3 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 SWAP8 PUSH2 0x1236 SWAP8 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A207377617020616C726561647920696E6974696174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH2 0x12C8 DUP2 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x12D3 CALLER ADDRESS DUP4 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x137E JUMPI PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x2 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1312 JUMPI PUSH2 0x1312 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x1376 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12D6 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x7 SWAP1 SWAP3 ADD SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x13BA JUMPI PUSH2 0x13BA PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x140D DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST POP PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x5 SLOAD PUSH2 0x142D SWAP1 CALLVALUE PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1453 SWAP1 DUP5 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x9290CD7656E70519B1C9EFCC328A9E9E7C9122292708C3C57E1F1491E99F2511 SWAP1 PUSH2 0x14A7 SWAP1 DUP7 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0xABD PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x1589 DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15A2 CALLER ADDRESS DUP5 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x15B1 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x8 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1673 JUMPI DUP2 PUSH1 0x0 ADD PUSH1 0x2 ADD DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1607 JUMPI PUSH2 0x1607 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x166B DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DD JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x16FC JUMPI DUP2 PUSH1 0x0 ADD PUSH1 0x3 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16A1 JUMPI PUSH2 0x16A1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x16F4 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1677 JUMP JUMPDEST POP PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x1733 JUMPI PUSH1 0x5 SLOAD PUSH2 0x1714 SWAP1 CALLVALUE PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x172D SWAP1 DUP5 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE81763BF4ABA65D65F664F69EDEB190A5D5BB77D7C98E2E1A0E39A1B04C5DB37 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x1DAF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2063616C6C6572206973206E6F7420737761702069 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3734BA34B0BA37B9 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2043616E277420616363657074206F666665722C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7061727469636970616E74206469646E27742061646420617373657473000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1B4E JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1963 JUMPI PUSH2 0x1963 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1A49 JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE DUP6 DUP6 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B3C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A5F JUMPI PUSH2 0x1A5F PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP6 DUP6 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1A91 JUMPI PUSH2 0x1A91 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1AB3 JUMPI PUSH2 0x1AB3 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH2 0x1B46 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1940 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD0 DUP4 DUP4 PUSH1 0x60 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B8A JUMPI PUSH2 0x1B8A PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH2 0x1BAC PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EFA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x1C37 DUP5 DUP5 DUP5 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BF0 JUMPI PUSH2 0x1BF0 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C12 JUMPI PUSH2 0x1C12 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F62 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x1C41 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD ISZERO PUSH2 0x1CBA JUMPI DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1D5F PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI POP PUSH1 0x60 DUP4 ADD MLOAD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DA1 JUMPI POP PUSH1 0x20 DUP4 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x370 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2063616C6C6572206973206E6F7420737761702074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185C99D95D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D34 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x1EEB JUMPI POP PUSH1 0x60 DUP4 ADD MLOAD MLOAD ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x1DA1 JUMPI POP POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1F5D SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1F9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C49 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F5D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x200D SWAP2 SWAP1 PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x1F5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x207B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2159 SWAP2 SWAP1 PUSH2 0x2B6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2196 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x219B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21AB DUP3 DUP3 DUP7 PUSH2 0x21B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x21C5 JUMPI POP DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x21D5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x3 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225E JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 ADD PUSH2 0x2232 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225E JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x229A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2375 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A8 JUMPI PUSH2 0x23A8 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x23BB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x234C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x23D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x240E DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x241E DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244D DUP8 DUP3 DUP9 ADD PUSH2 0x237D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x207E DUP2 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24A9 JUMPI PUSH2 0x24A9 PUSH2 0x22C7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x24D9 PUSH2 0x24D4 DUP4 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x234C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2540 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x251D PUSH2 0x22DD JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2528 DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP6 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x24FC JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2565 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x2572 DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x259A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BC PUSH2 0x24D4 DUP3 PUSH2 0x248F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x60 SWAP2 DUP3 MUL DUP5 ADD DUP7 ADD SWAP2 DUP7 DUP3 ADD SWAP2 SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP8 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x262C JUMPI DUP1 DUP7 DUP13 SUB SLT ISZERO PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2600 PUSH2 0x2329 JUMP JUMPDEST DUP7 CALLDATALOAD PUSH2 0x260B DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP8 DUP8 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE DUP4 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH2 0x25E0 JUMP JUMPDEST DUP2 DUP8 DUP11 ADD MSTORE DUP1 DUP11 ADD CALLDATALOAD SWAP8 POP DUP5 DUP9 GT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2650 DUP12 DUP10 DUP13 ADD PUSH2 0x24B3 JUMP JUMPDEST DUP2 DUP11 ADD MSTORE POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269F DUP6 DUP3 DUP7 ADD PUSH2 0x254B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x26C7 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2704 PUSH2 0x24D4 DUP4 PUSH2 0x248F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2540 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2761 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2771 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x278E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279A DUP10 DUP4 DUP11 ADD PUSH2 0x26E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27BC DUP10 DUP4 DUP11 ADD PUSH2 0x26E3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27DF DUP9 DUP3 DUP10 ADD PUSH2 0x237D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x280F DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x281F DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27DF DUP9 DUP3 DUP10 ADD PUSH2 0x237D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x28C1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A205377617020636C6F7365642E204F6E6C79207573 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x195C8818D85B98D95B08195B98589B1959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x50 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2053656E7420616D6F756E74206E6565647320746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2062652067726561746572207468616E206F7220657175616C20746F20746865 PUSH1 0x60 DUP3 ADD MSTORE PUSH16 0x206170706C69636174696F6E20666565 PUSH1 0x80 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A09 PUSH2 0x28C1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x28C1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A6C JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A3C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xA0 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP7 MLOAD AND DUP4 DUP7 ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP2 DUP2 DUP9 ADD MSTORE DUP1 DUP9 ADD MLOAD SWAP2 POP PUSH1 0x60 PUSH1 0x80 DUP2 DUP10 ADD MSTORE DUP5 DUP4 MLOAD DUP1 DUP8 MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 POP DUP8 DUP6 ADD SWAP7 POP PUSH1 0x0 SWAP5 POP JUMPDEST DUP1 DUP6 LT ISZERO PUSH2 0x2AF3 JUMPI DUP7 MLOAD DUP1 MLOAD DUP8 AND DUP4 MSTORE DUP9 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE DUP5 ADD MLOAD DUP5 DUP4 ADD MSTORE SWAP6 DUP8 ADD SWAP6 PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST POP DUP10 DUP3 ADD MLOAD DUP10 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP12 ADD MSTORE SWAP7 POP PUSH2 0x2B10 DUP2 DUP9 PUSH2 0x2A28 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B43 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B7E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2B40 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2BA7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH3 0x980643 PUSH20 0x85F17314E6EA9494ADF16D2EF5A766483D7B8142 0xA8 0xCC STATICCALL 0x27 BLOCKHASH AND PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "680:12048:17:-:0;;;2542:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:13;921:18:0;:32::i;:::-;1701:1:2;1806:22;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;2625:3:17;:19;;;2654:45;2678:20;2654:23;;;;;;;:45;;:::i;:::-;2542:164;;680:12048;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;580:2:18;1240:68:0;;;562:21:18;;;599:18;;;592:30;658:34;638:18;;;631:62;710:18;;1240:68:0;;;;;;;;;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;941:2:18;1998:73:0::1;::::0;::::1;923:21:18::0;980:2;960:18;;;953:30;1019:34;999:18;;;992:62;-1:-1:-1;;;1070:18:18;;;1063:36;1116:19;;1998:73:0::1;739:402:18::0;1998:73:0::1;2081:28;2100:8:::0;2081:18:::1;:28::i;:::-;1918:198:::0;:::o;14:359:18:-;101:6;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;201:16;;260:2;245:18;;239:25;201:16;;-1:-1:-1;;;;;;293:31:18;;283:42;;273:70;;339:1;336;329:12;273:70;362:5;352:15;;;14:359;;;;;:::o;739:402::-;680:12048:17;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_callOptionalReturn_785": {
                  "entryPoint": 8090,
                  "id": 785,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1254": {
                  "entryPoint": null,
                  "id": 1254,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_pause_179": {
                  "entryPoint": 7798,
                  "id": 179,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transferOwnership_103": {
                  "entryPoint": 7599,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_unpause_195": {
                  "entryPoint": 7358,
                  "id": 195,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@acceptSwap_1956": {
                  "entryPoint": 1287,
                  "id": 1956,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@cancelSwap_2117": {
                  "entryPoint": 2900,
                  "id": 2117,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@current_1282": {
                  "entryPoint": null,
                  "id": 1282,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@fee_1411": {
                  "entryPoint": null,
                  "id": 1411,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@functionCallWithValue_1106": {
                  "entryPoint": 8325,
                  "id": 1106,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@functionCall_1036": {
                  "entryPoint": 8300,
                  "id": 1036,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@increment_1296": {
                  "entryPoint": null,
                  "id": 1296,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@initiateSwap_1844": {
                  "entryPoint": 4371,
                  "id": 1844,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@isContract_965": {
                  "entryPoint": null,
                  "id": 965,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isEmpty_2350": {
                  "entryPoint": 7543,
                  "id": 2350,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isNotEmpty_2313": {
                  "entryPoint": 7886,
                  "id": 2313,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@onERC1155BatchReceived_449": {
                  "entryPoint": null,
                  "id": 449,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@onERC1155Received_426": {
                  "entryPoint": null,
                  "id": 426,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@onERC721Received_946": {
                  "entryPoint": null,
                  "id": 946,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@onlyInitiator_2226": {
                  "entryPoint": 6216,
                  "id": 2226,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@onlyTarget_2244": {
                  "entryPoint": 7679,
                  "id": 2244,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_32": {
                  "entryPoint": null,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pause_2147": {
                  "entryPoint": 5303,
                  "id": 2147,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@paused_140": {
                  "entryPoint": null,
                  "id": 140,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@proposeSwap_1696": {
                  "entryPoint": 5393,
                  "id": 1696,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@renounceOwnership_60": {
                  "entryPoint": 4317,
                  "id": 60,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@requireNotEmpty_2276": {
                  "entryPoint": 6335,
                  "id": 2276,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@safeMultipleTransfersFrom_2503": {
                  "entryPoint": 6461,
                  "id": 2503,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@safeTransferFrom_619": {
                  "entryPoint": 8034,
                  "id": 619,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@safeTransfer_593": {
                  "entryPoint": 7930,
                  "id": 593,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@supportsInterface_1361": {
                  "entryPoint": null,
                  "id": 1361,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@supportsInterface_483": {
                  "entryPoint": 831,
                  "id": 483,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@transferNative_2543": {
                  "entryPoint": 7247,
                  "id": 2543,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transferOwnership_83": {
                  "entryPoint": 6061,
                  "id": 83,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@unpause_2158": {
                  "entryPoint": 2659,
                  "id": 2158,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@updateAppFee_2136": {
                  "entryPoint": 2755,
                  "id": 2136,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@verifyCallResult_1241": {
                  "entryPoint": 8630,
                  "id": 1241,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@wipeOffer_2371": {
                  "entryPoint": 7505,
                  "id": 2371,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@withdrawFees_2208": {
                  "entryPoint": 886,
                  "id": 2208,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_array_struct_Coin_dyn": {
                  "entryPoint": 9395,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 9955,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 9085,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Offer": {
                  "entryPoint": 9547,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payable": {
                  "entryPoint": 9305,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payablet_struct$_Offer_$1447_memory_ptr": {
                  "entryPoint": 9897,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
                  "entryPoint": 10046,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                  "entryPoint": 9197,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
                  "entryPoint": 10220,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 11038,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes4": {
                  "entryPoint": 8840,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 9334,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_struct$_Offer_$1447_memory_ptr": {
                  "entryPoint": 9826,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_array_struct_Coin_dyn": {
                  "entryPoint": 10792,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 11116,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 11144,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0b65f9cb588e2917ca9b5cb347e64214aa74344276b9de610f58bc3a5161f6e5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5e4a875764ffe42712c8e053158628b37f0a9b37947ceaf3df1d80f7ef40d3ee__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10478,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_73e49f9bbdacf029dca4aed3f3de7982c7ef80d5f20adf41d37dd6f012988125__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_7653f136e737ca43daea4992f5fd38430bc3a18da68880da7c93fedef8758fe5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_7931cdccd8d6c18f9143ecf32834dc315736a14c8ea589a453b1c5a095df45f1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10380,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_99ca17aed01c53af5d12bf5d5c41fd90829c88bb1398cb9a3296efec15437cd4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_99f42558b586dc72ca995d95dbefffd69a3cdea04598bdf09f3743cad77d39ae__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10601,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c270a08588dfe6b1b7768983935475cdfbee552f6421bc094aaf3aec5e3b72dc__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10520,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10325,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_Offer_$1447_memory_ptr__to_t_struct$_Offer_$1447_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10871,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 9036,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_3538": {
                  "entryPoint": 8925,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_3539": {
                  "entryPoint": 8966,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_3540": {
                  "entryPoint": 9001,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_Nft_dyn": {
                  "entryPoint": 9359,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 10768,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 10455,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 11072,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 10741,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 10433,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 10719,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 8903,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 8882,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:23028:18",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:18",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "83:217:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "129:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "138:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "141:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "131:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "131:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "104:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "100:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "100:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "93:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "154:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "167:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "158:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "254:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "212:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "223:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "234:3:18",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "239:10:18",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "230:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "230:20:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "219:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "219:32:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "209:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "209:43:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "202:51:18"
                              },
                              "nodeType": "YulIf",
                              "src": "199:71:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "279:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "49:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "60:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "72:6:18",
                            "type": ""
                          }
                        ],
                        "src": "14:286:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "400:92:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "410:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "422:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "433:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "418:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "470:6:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "470:14:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "463:6:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "463:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "445:41:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "445:41:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "369:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "380:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "391:4:18",
                            "type": ""
                          }
                        ],
                        "src": "305:187:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "542:86:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "606:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "615:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "618:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "608:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "608:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "608:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "565:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "576:5:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "591:3:18",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "596:1:18",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "587:3:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "587:11:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "600:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "583:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "583:19:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "572:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "572:31:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:42:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "555:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "555:50:18"
                              },
                              "nodeType": "YulIf",
                              "src": "552:70:18"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "531:5:18",
                            "type": ""
                          }
                        ],
                        "src": "497:131:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "665:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "682:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "689:3:18",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "694:10:18",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "685:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "685:20:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "675:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "675:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "675:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "722:1:18",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "725:4:18",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "715:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "715:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "715:15:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "746:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "749:4:18",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "739:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "739:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "739:15:18"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "633:127:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "811:211:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "821:21:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "837:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "831:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "831:11:18"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "851:35:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "873:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "881:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "869:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "869:17:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "855:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "961:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "963:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "963:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "963:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "904:10:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "916:18:18",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "901:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "901:34:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "940:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "937:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "937:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "898:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "898:62:18"
                              },
                              "nodeType": "YulIf",
                              "src": "895:88:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "999:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1005:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:24:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "992:24:18"
                            }
                          ]
                        },
                        "name": "allocate_memory_3538",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "800:6:18",
                            "type": ""
                          }
                        ],
                        "src": "765:257:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1073:207:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1083:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1099:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1093:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1093:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1111:35:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1133:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1141:4:18",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1129:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1129:17:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1115:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1221:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1223:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1223:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1223:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1164:10:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1176:18:18",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1161:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1161:34:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1200:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1212:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1197:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1197:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1158:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1158:62:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1155:88:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1259:2:18",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1263:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1252:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1252:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1252:22:18"
                            }
                          ]
                        },
                        "name": "allocate_memory_3539",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1062:6:18",
                            "type": ""
                          }
                        ],
                        "src": "1027:253:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1331:207:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1341:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1357:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1351:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1341:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1369:35:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1391:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1399:4:18",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1387:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1387:17:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1373:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1479:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1481:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1481:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1481:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1422:10:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1434:18:18",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1419:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1419:34:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1458:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1470:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1455:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1455:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1416:62:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1413:88:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1517:2:18",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1521:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1510:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1510:22:18"
                            }
                          ]
                        },
                        "name": "allocate_memory_3540",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1320:6:18",
                            "type": ""
                          }
                        ],
                        "src": "1285:253:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1588:230:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1598:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1614:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1608:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1608:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1598:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1626:58:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1648:6:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "1664:4:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1670:2:18",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1660:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1660:13:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1679:2:18",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "1675:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1675:7:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1656:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1656:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1644:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1644:40:18"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1630:10:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1759:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1761:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1761:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1761:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1702:10:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1714:18:18",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1699:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1699:34:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1738:10:18"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1750:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1735:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1735:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:62:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1693:88:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1797:2:18",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1801:10:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1790:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1790:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1790:22:18"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1568:4:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1577:6:18",
                            "type": ""
                          }
                        ],
                        "src": "1543:275:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1875:478:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1924:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1933:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1936:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1926:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1926:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1926:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1903:6:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1911:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1899:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1899:17:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1918:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1895:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1895:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1888:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1888:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1885:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1949:30:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1972:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1959:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1959:20:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1953:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2018:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2020:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2020:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2020:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1994:2:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1998:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1991:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1991:26:18"
                              },
                              "nodeType": "YulIf",
                              "src": "1988:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2049:70:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2092:2:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2096:4:18",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2088:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2088:13:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2107:2:18",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2103:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2103:7:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2084:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2084:27:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2113:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2080:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2080:38:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2064:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2064:55:18"
                              },
                              "variables": [
                                {
                                  "name": "array_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2053:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2135:7:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2144:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2128:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2128:19:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2128:19:18"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2195:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2204:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2207:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2197:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2197:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2197:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2170:6:18"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2178:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2166:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2166:15:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2183:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2162:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2162:26:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2190:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2159:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2159:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2156:55:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2237:7:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2246:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2233:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2233:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2257:6:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2265:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2253:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2253:17:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2272:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:55:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2220:55:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2299:7:18"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2308:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2295:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2295:16:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2313:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2291:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2291:27:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2320:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2284:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2284:38:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2284:38:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2331:16:18",
                              "value": {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "2340:7:18"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2331:5:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1849:6:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1857:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1865:5:18",
                            "type": ""
                          }
                        ],
                        "src": "1823:530:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2488:535:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2535:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2544:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2547:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2537:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2537:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2537:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2509:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2518:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2505:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2505:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2530:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2501:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2501:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2498:53:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2560:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2586:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2573:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2573:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2564:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2630:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2605:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2605:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2605:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2645:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2655:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2645:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2669:47:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2701:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2712:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2697:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2697:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2684:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2684:32:18"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2673:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2750:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2725:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2725:33:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2725:33:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2767:17:18",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2777:7:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2767:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2793:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2820:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2831:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2816:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2816:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2803:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2803:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2793:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2844:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2875:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2886:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2871:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2871:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2858:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2858:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2848:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2933:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2942:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2945:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2935:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2935:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2935:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2905:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2913:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2902:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2902:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "2899:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2958:59:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2989:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3000:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2985:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2985:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3009:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "2968:16:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2968:49:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2958:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2430:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2441:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2453:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2461:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2469:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2477:6:18",
                            "type": ""
                          }
                        ],
                        "src": "2358:665:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3127:103:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3137:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3149:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3160:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3145:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3145:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3137:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3179:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3194:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3206:3:18",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3211:10:18",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3202:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3202:20:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3190:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3190:33:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3172:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3172:52:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3172:52:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3096:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3107:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3118:4:18",
                            "type": ""
                          }
                        ],
                        "src": "3028:202:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3313:177:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3359:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3368:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3371:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3361:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3361:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3361:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3334:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3343:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3330:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3330:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3355:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3326:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3326:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3323:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3384:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3410:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3397:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3397:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3388:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3454:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3429:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3429:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3429:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3469:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3479:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3469:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3279:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3290:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3302:6:18",
                            "type": ""
                          }
                        ],
                        "src": "3235:255:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3565:110:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3611:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3620:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3623:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3613:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3613:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3613:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3586:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3595:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3582:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3582:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3607:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3578:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3578:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3575:52:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3636:33:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3659:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3646:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3646:23:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3636:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3531:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3542:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3554:6:18",
                            "type": ""
                          }
                        ],
                        "src": "3495:180:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3752:114:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3796:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3798:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3798:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3798:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3768:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3776:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3765:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3765:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3762:56:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3827:33:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3843:1:18",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3846:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3839:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3839:14:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3855:4:18",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3835:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3835:25:18"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "3827:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_array_struct_Nft_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3732:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "3743:4:18",
                            "type": ""
                          }
                        ],
                        "src": "3680:186:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3939:955:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3988:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3997:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4000:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3990:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3990:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3990:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3967:6:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3975:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3963:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3963:17:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3982:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3959:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3959:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3952:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3952:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "3949:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4013:30:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4036:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4023:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4023:20:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4017:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4052:14:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4062:4:18",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4056:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4075:74:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4145:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_struct_Nft_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "4102:42:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4102:46:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4086:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4086:63:18"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "4079:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4158:16:18",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "4171:3:18"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4162:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "4190:3:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4195:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4183:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4183:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4183:15:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4207:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "4218:3:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4223:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4214:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4214:12:18"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4207:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4235:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4257:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4269:1:18",
                                            "type": "",
                                            "value": "6"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "4272:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "4265:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4265:10:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4253:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4253:23:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4278:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4249:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4249:32:18"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "4239:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4309:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4318:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4321:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4311:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4311:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4311:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4296:6:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "4304:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4293:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4293:15:18"
                              },
                              "nodeType": "YulIf",
                              "src": "4290:35:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4334:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4349:6:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4357:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4345:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4345:15:18"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "4338:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4427:438:18",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "4481:74:18",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "4499:11:18",
                                          "value": {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4509:1:18",
                                            "type": "",
                                            "value": "0"
                                          },
                                          "variables": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulTypedName",
                                              "src": "4503:2:18",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "4534:2:18"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "4538:2:18"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "4527:6:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4527:14:18"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "4527:14:18"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "4452:3:18"
                                            },
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "4457:3:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sub",
                                            "nodeType": "YulIdentifier",
                                            "src": "4448:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4448:13:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4463:4:18",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "slt",
                                        "nodeType": "YulIdentifier",
                                        "src": "4444:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4444:24:18"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "4441:114:18"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4568:35:18",
                                    "value": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "allocate_memory_3538",
                                        "nodeType": "YulIdentifier",
                                        "src": "4581:20:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4581:22:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "4572:5:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4616:32:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "4644:3:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4631:12:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4631:17:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulTypedName",
                                        "src": "4620:7:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "4686:7:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "4661:24:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4661:33:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4661:33:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "4714:5:18"
                                        },
                                        {
                                          "name": "value_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "4721:7:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4707:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4707:22:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4707:22:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "4753:5:18"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "4760:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4749:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4749:14:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4782:3:18"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4787:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4778:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4778:12:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4765:12:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4765:26:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4742:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4742:50:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4742:50:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "4812:3:18"
                                        },
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "4817:5:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4805:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4805:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4805:18:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4836:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "4847:3:18"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "4852:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4843:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4843:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "4836:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "4380:3:18"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4385:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4377:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4377:15:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4393:25:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4395:21:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "4406:3:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4411:4:18",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4402:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4402:14:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "4395:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4373:3:18",
                                "statements": []
                              },
                              "src": "4369:496:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4874:14:18",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "4883:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "4874:5:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_struct_Coin_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3913:6:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3921:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3929:5:18",
                            "type": ""
                          }
                        ],
                        "src": "3871:1023:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4961:1724:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5005:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5014:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5017:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5007:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5007:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5007:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "4982:3:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4987:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4978:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4978:19:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4999:4:18",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4974:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4974:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "4971:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5030:31:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_memory_3539",
                                  "nodeType": "YulIdentifier",
                                  "src": "5039:20:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5039:22:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5030:5:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5070:38:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5098:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5085:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5085:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5074:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5142:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5117:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5117:33:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5117:33:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5166:5:18"
                                  },
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5173:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5159:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5159:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5159:22:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5190:12:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5200:2:18",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5194:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5222:5:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5229:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5218:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5218:14:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5251:9:18"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "5262:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5247:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5247:18:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5234:12:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5234:32:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5211:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5211:56:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5211:56:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5276:12:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5286:2:18",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5280:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5297:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5328:9:18"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5339:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5324:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5324:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5311:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5311:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5301:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5352:28:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5362:18:18",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5356:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5407:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5416:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5419:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5409:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5409:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5409:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5395:6:18"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5403:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5392:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5392:14:18"
                              },
                              "nodeType": "YulIf",
                              "src": "5389:34:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5432:32:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5446:9:18"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5457:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5442:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5442:22:18"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "5436:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5508:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5517:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5520:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5510:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5510:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5510:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "5491:2:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5495:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5487:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5487:13:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "5502:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5483:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5483:23:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5476:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5476:31:18"
                              },
                              "nodeType": "YulIf",
                              "src": "5473:51:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5533:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5556:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5543:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5543:16:18"
                              },
                              "variables": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulTypedName",
                                  "src": "5537:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5568:74:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "5638:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_struct_Nft_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "5595:42:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5595:46:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5579:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5579:63:18"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "5572:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5651:16:18",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "5664:3:18"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5655:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "5683:3:18"
                                  },
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "5688:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5676:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5676:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5676:15:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5700:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "5711:3:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5716:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5707:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5707:12:18"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5700:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5728:14:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5738:4:18",
                                "type": "",
                                "value": "0x60"
                              },
                              "variables": [
                                {
                                  "name": "_6",
                                  "nodeType": "YulTypedName",
                                  "src": "5732:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5751:43:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "5773:2:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "_5",
                                            "nodeType": "YulIdentifier",
                                            "src": "5781:2:18"
                                          },
                                          {
                                            "name": "_6",
                                            "nodeType": "YulIdentifier",
                                            "src": "5785:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "5777:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5777:11:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5769:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5769:20:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5791:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5765:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5765:29:18"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "5755:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5822:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5831:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5834:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5824:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5824:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5824:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5809:6:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "5817:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5806:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5806:15:18"
                              },
                              "nodeType": "YulIf",
                              "src": "5803:35:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5847:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5862:2:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5866:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5858:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5858:11:18"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "5851:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5934:509:18",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "5986:74:18",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "6004:11:18",
                                          "value": {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6014:1:18",
                                            "type": "",
                                            "value": "0"
                                          },
                                          "variables": [
                                            {
                                              "name": "_7",
                                              "nodeType": "YulTypedName",
                                              "src": "6008:2:18",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "_7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6039:2:18"
                                              },
                                              {
                                                "name": "_7",
                                                "nodeType": "YulIdentifier",
                                                "src": "6043:2:18"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "6032:6:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6032:14:18"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6032:14:18"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "5959:3:18"
                                            },
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "5964:3:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sub",
                                            "nodeType": "YulIdentifier",
                                            "src": "5955:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5955:13:18"
                                        },
                                        {
                                          "name": "_6",
                                          "nodeType": "YulIdentifier",
                                          "src": "5970:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "slt",
                                        "nodeType": "YulIdentifier",
                                        "src": "5951:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5951:22:18"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "5948:112:18"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6073:37:18",
                                    "value": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "allocate_memory_3540",
                                        "nodeType": "YulIdentifier",
                                        "src": "6088:20:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6088:22:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "value_2",
                                        "nodeType": "YulTypedName",
                                        "src": "6077:7:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6123:32:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "6151:3:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6138:12:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6138:17:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "value_3",
                                        "nodeType": "YulTypedName",
                                        "src": "6127:7:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "6193:7:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "6168:24:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6168:33:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6168:33:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "6221:7:18"
                                        },
                                        {
                                          "name": "value_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "6230:7:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6214:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6214:24:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6214:24:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "6262:7:18"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "6271:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6258:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6258:16:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6293:3:18"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6298:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "6289:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6289:12:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6276:12:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6276:26:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6251:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6251:52:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6251:52:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "6327:7:18"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "6336:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6323:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6323:16:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6358:3:18"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6363:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "6354:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6354:12:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6341:12:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6341:26:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6316:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6316:52:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6316:52:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6388:3:18"
                                        },
                                        {
                                          "name": "value_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "6393:7:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6381:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6381:20:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6381:20:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6414:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6425:3:18"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6430:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6421:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6421:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "6414:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "5889:3:18"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5894:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5886:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5886:15:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5902:23:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5904:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "5915:3:18"
                                        },
                                        {
                                          "name": "_6",
                                          "nodeType": "YulIdentifier",
                                          "src": "5920:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5911:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5911:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "5904:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5882:3:18",
                                "statements": []
                              },
                              "src": "5878:565:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6463:5:18"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "6470:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6459:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6459:14:18"
                                  },
                                  {
                                    "name": "dst_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6475:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6452:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6452:29:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6452:29:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6490:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6523:9:18"
                                      },
                                      {
                                        "name": "_6",
                                        "nodeType": "YulIdentifier",
                                        "src": "6534:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6519:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6519:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6506:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6506:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6494:8:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6567:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6576:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6579:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6569:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6569:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6569:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6553:8:18"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "6563:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6550:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6550:16:18"
                              },
                              "nodeType": "YulIf",
                              "src": "6547:36:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6603:5:18"
                                      },
                                      {
                                        "name": "_6",
                                        "nodeType": "YulIdentifier",
                                        "src": "6610:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6599:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6599:14:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6652:9:18"
                                          },
                                          {
                                            "name": "offset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "6663:8:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6648:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6648:24:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "6674:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_array_struct_Coin_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "6615:32:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6615:63:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6592:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6592:87:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6592:87:18"
                            }
                          ]
                        },
                        "name": "abi_decode_struct_Offer",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4932:9:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4943:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4951:5:18",
                            "type": ""
                          }
                        ],
                        "src": "4899:1786:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6800:299:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6846:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6855:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6858:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6848:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6848:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6848:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6821:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6830:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6817:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6817:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6842:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6813:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6813:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "6810:52:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6871:33:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6894:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6881:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6881:23:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6871:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6913:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6944:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6955:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6940:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6940:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6927:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6927:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6917:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7002:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7011:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7014:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7004:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7004:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7004:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6974:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6982:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6971:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6971:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "6968:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7027:66:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7065:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7076:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7061:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7061:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7085:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_struct_Offer",
                                  "nodeType": "YulIdentifier",
                                  "src": "7037:23:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7037:56:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7027:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_struct$_Offer_$1447_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6758:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6769:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6781:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6789:6:18",
                            "type": ""
                          }
                        ],
                        "src": "6690:409:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7205:102:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7215:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7227:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7238:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7223:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7223:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7215:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7257:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7272:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7288:3:18",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7293:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "7284:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7284:11:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7297:1:18",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "7280:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7280:19:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7268:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7268:32:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7250:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7250:51:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7250:51:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7174:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7185:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7196:4:18",
                            "type": ""
                          }
                        ],
                        "src": "7104:203:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7430:366:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7476:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7485:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7488:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7478:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7478:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7478:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7451:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7460:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7447:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7447:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7472:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7443:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7443:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "7440:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7501:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7527:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7514:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7514:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "7505:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7571:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "7546:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7546:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7546:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7586:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7596:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7586:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7610:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7641:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7652:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7637:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7637:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7624:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7624:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7614:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7699:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7708:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7711:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7701:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7701:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7701:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7671:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7679:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7668:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7668:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "7665:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7724:66:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7762:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7773:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7758:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7758:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7782:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_struct_Offer",
                                  "nodeType": "YulIdentifier",
                                  "src": "7734:23:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7734:56:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7724:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_struct$_Offer_$1447_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7388:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7399:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7411:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7419:6:18",
                            "type": ""
                          }
                        ],
                        "src": "7312:484:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7902:76:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7912:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7924:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7935:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7920:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7920:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7912:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7954:9:18"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7965:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7947:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7947:25:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7947:25:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7871:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7882:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7893:4:18",
                            "type": ""
                          }
                        ],
                        "src": "7801:177:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8047:601:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8096:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8105:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8108:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8098:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8098:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8098:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8075:6:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8083:4:18",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8071:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8071:17:18"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "8090:3:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8067:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8067:27:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8060:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8060:35:18"
                              },
                              "nodeType": "YulIf",
                              "src": "8057:55:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8121:30:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8144:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8131:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8131:20:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8125:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8160:14:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8170:4:18",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "8164:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8183:74:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8253:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_struct_Nft_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "8210:42:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8210:46:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8194:15:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8194:63:18"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "8187:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8266:16:18",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "8279:3:18"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8270:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8298:3:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8303:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8291:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8291:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8291:15:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8315:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8326:3:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8331:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8322:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8322:12:18"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8315:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8343:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8365:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8377:1:18",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "8380:2:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "8373:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8373:10:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8361:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8361:23:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8386:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8357:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8357:32:18"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "8347:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8417:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8426:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8429:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8419:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8419:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8419:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8404:6:18"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "8412:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8401:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8401:15:18"
                              },
                              "nodeType": "YulIf",
                              "src": "8398:35:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8442:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8457:6:18"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8465:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8453:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8453:15:18"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "8446:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8533:86:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "8554:3:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "8572:3:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "8559:12:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8559:17:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8547:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8547:30:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8547:30:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8590:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "8601:3:18"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "8606:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8597:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8597:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "8590:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8488:3:18"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8493:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8485:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8485:15:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "8501:23:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8503:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "8514:3:18"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "8519:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8510:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8510:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "8503:3:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "8481:3:18",
                                "statements": []
                              },
                              "src": "8477:142:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8628:14:18",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "8637:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "8628:5:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8021:6:18",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8029:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "8037:5:18",
                            "type": ""
                          }
                        ],
                        "src": "7983:665:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8850:874:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8897:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8906:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8909:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8899:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8899:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8899:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8871:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8880:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8867:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8867:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8892:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8863:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8863:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "8860:53:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8922:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8948:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8935:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8935:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "8926:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8992:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "8967:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8967:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8967:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9007:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9017:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "9007:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9031:47:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9063:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9074:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9059:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9059:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9046:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9046:32:18"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9035:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9112:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9087:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9087:33:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9087:33:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9129:17:18",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "9139:7:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9129:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9155:46:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9186:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9197:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9182:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9182:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9169:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9169:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9159:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9210:28:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9220:18:18",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9214:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9265:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9274:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9277:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9267:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9267:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9267:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9253:6:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9261:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9250:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9250:14:18"
                              },
                              "nodeType": "YulIf",
                              "src": "9247:34:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9290:71:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9333:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9344:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9329:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9329:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9353:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "9300:28:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9300:61:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9290:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9370:48:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9403:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9414:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9399:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9399:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9386:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9386:32:18"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9374:8:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9447:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9456:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9459:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9449:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9449:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9449:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9433:8:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9443:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9430:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9430:16:18"
                              },
                              "nodeType": "YulIf",
                              "src": "9427:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9472:73:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9515:9:18"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9526:8:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9511:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9511:24:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9537:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "9482:28:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9482:63:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "9472:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9554:49:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9587:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9598:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9583:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9583:19:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9570:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9570:33:18"
                              },
                              "variables": [
                                {
                                  "name": "offset_2",
                                  "nodeType": "YulTypedName",
                                  "src": "9558:8:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9632:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9641:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9644:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9634:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9634:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9634:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9618:8:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9628:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9615:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9615:16:18"
                              },
                              "nodeType": "YulIf",
                              "src": "9612:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9657:61:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9688:9:18"
                                      },
                                      {
                                        "name": "offset_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9699:8:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9684:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9684:24:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9710:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "9667:16:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9667:51:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "9657:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8784:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8795:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8807:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8815:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8823:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8831:6:18",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "8839:6:18",
                            "type": ""
                          }
                        ],
                        "src": "8653:1071:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9876:587:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9923:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9932:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9935:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9925:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9925:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9925:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9897:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9906:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9893:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9893:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9918:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9889:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9889:33:18"
                              },
                              "nodeType": "YulIf",
                              "src": "9886:53:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9948:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9974:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9961:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9961:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "9952:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10018:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9993:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9993:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9993:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10033:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10043:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10033:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10057:47:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10089:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10100:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10085:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10085:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10072:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10072:32:18"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10061:7:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10138:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "10113:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10113:33:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10113:33:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10155:17:18",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "10165:7:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10155:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10181:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10208:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10219:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10204:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10204:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10191:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10191:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "10181:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10232:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10259:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10270:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10255:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10255:18:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10242:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10242:32:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "10232:6:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10283:47:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10314:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10325:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10310:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10310:19:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10297:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10297:33:18"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "10287:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10373:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10382:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10385:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10375:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10375:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10375:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "10345:6:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10353:18:18",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10342:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10342:30:18"
                              },
                              "nodeType": "YulIf",
                              "src": "10339:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10398:59:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10429:9:18"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10440:6:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10425:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10425:22:18"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10449:7:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "10408:16:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10408:49:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "10398:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9810:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9821:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9833:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9841:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9849:6:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9857:6:18",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "9865:6:18",
                            "type": ""
                          }
                        ],
                        "src": "9729:734:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10538:177:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10584:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10593:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10596:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10586:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10586:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10586:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10559:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10568:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10555:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10555:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10580:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10551:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10551:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "10548:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10609:36:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10635:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10622:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10622:23:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "10613:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10679:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "10654:24:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10654:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10654:31:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10694:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10704:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10694:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10504:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "10515:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10527:6:18",
                            "type": ""
                          }
                        ],
                        "src": "10468:247:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10894:181:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10911:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10922:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10904:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10904:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10904:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10945:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10956:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10941:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10941:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10961:2:18",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10934:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10934:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10934:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10984:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10995:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10980:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10980:18:18"
                                  },
                                  {
                                    "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11000:33:18",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10973:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10973:61:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10973:61:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11043:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11055:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11066:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11051:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11051:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11043:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10871:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10885:4:18",
                            "type": ""
                          }
                        ],
                        "src": "10720:355:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11254:182:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11271:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11282:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11264:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11264:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11264:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11305:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11316:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11301:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11301:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11321:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11294:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11294:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11294:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11344:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11355:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11340:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11340:18:18"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11360:34:18",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11333:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11333:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11333:62:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11404:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11416:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11427:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11412:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11412:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11404:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11231:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11245:4:18",
                            "type": ""
                          }
                        ],
                        "src": "11080:356:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11615:230:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11632:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11643:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11625:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11625:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11625:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11666:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11677:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11662:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11662:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11682:2:18",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11655:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11655:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11655:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11705:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11716:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11701:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11701:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a207472616e7366657220746f20746865207a65726f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11721:34:18",
                                    "type": "",
                                    "value": "Tradescrow: transfer to the zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11694:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11694:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11694:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11776:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11787:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11772:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11772:18:18"
                                  },
                                  {
                                    "hexValue": "2061646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11792:10:18",
                                    "type": "",
                                    "value": " address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11765:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11765:38:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11765:38:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11812:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11824:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11835:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11820:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11820:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11812:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5e4a875764ffe42712c8e053158628b37f0a9b37947ceaf3df1d80f7ef40d3ee__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11592:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11606:4:18",
                            "type": ""
                          }
                        ],
                        "src": "11441:404:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11882:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11899:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11906:3:18",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11911:10:18",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11902:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11902:20:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11892:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11892:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11892:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11939:1:18",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11942:4:18",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11932:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11932:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11932:15:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11963:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11966:4:18",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11956:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11956:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11956:15:18"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "11850:127:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12031:76:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12053:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12055:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12055:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12055:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12047:1:18"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12050:1:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12044:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12044:8:18"
                              },
                              "nodeType": "YulIf",
                              "src": "12041:34:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12084:17:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12096:1:18"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12099:1:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12092:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12092:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "12084:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12013:1:18",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12016:1:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "12022:4:18",
                            "type": ""
                          }
                        ],
                        "src": "11982:125:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12286:179:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12303:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12314:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12296:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12296:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12296:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12337:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12348:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12333:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12333:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12353:2:18",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12326:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12326:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12326:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12376:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12387:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12372:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12372:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a204e6f20617661696c61626c652066656573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12392:31:18",
                                    "type": "",
                                    "value": "Tradescrow: No available fees"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12365:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12365:59:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12365:59:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12433:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12445:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12456:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12441:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12441:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12433:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c270a08588dfe6b1b7768983935475cdfbee552f6421bc094aaf3aec5e3b72dc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12263:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12277:4:18",
                            "type": ""
                          }
                        ],
                        "src": "12112:353:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12644:166:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12661:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12672:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12654:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12654:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12654:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12695:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12706:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12691:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12691:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12711:2:18",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12684:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12684:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12684:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12734:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12745:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12730:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12730:18:18"
                                  },
                                  {
                                    "hexValue": "5061757361626c653a20706175736564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12750:18:18",
                                    "type": "",
                                    "value": "Pausable: paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12723:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12723:46:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12723:46:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12778:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12790:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12801:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12786:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12786:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12778:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12621:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12635:4:18",
                            "type": ""
                          }
                        ],
                        "src": "12470:340:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12989:239:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13006:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13017:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12999:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12999:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12999:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13040:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13051:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13036:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13036:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13056:2:18",
                                    "type": "",
                                    "value": "49"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13029:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13029:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13029:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13079:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13090:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13075:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13075:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a205377617020636c6f7365642e204f6e6c79207573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13095:34:18",
                                    "type": "",
                                    "value": "Tradescrow: Swap closed. Only us"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13068:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13068:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13068:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13150:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13161:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13146:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13146:18:18"
                                  },
                                  {
                                    "hexValue": "65722063616e63656c20656e61626c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13166:19:18",
                                    "type": "",
                                    "value": "er cancel enabled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13139:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13139:47:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13139:47:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13195:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13207:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13218:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13203:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13203:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13195:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12966:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12980:4:18",
                            "type": ""
                          }
                        ],
                        "src": "12815:413:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13407:245:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13424:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13435:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13417:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13417:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13417:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13458:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13469:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13454:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13454:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13474:2:18",
                                    "type": "",
                                    "value": "55"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13447:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13447:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13447:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13497:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13508:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13493:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13493:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a2043616e27742063616e63656c20737761702c206d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13513:34:18",
                                    "type": "",
                                    "value": "Tradescrow: Can't cancel swap, m"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13486:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13486:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13486:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13568:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13579:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13564:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13564:18:18"
                                  },
                                  {
                                    "hexValue": "7573742062652073776170207061727469636970616e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13584:25:18",
                                    "type": "",
                                    "value": "ust be swap participant"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13557:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13557:53:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13557:53:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13619:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13631:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13642:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13627:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13627:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13619:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_99ca17aed01c53af5d12bf5d5c41fd90829c88bb1398cb9a3296efec15437cd4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13384:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13398:4:18",
                            "type": ""
                          }
                        ],
                        "src": "13233:419:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13831:310:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13848:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13859:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13841:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13841:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13841:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13882:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13893:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13878:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13878:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13898:2:18",
                                    "type": "",
                                    "value": "80"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13871:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13871:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13871:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13921:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13932:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13917:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13917:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a2053656e7420616d6f756e74206e6565647320746f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13937:34:18",
                                    "type": "",
                                    "value": "Tradescrow: Sent amount needs to"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13910:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13910:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13910:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13992:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14003:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13988:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13988:18:18"
                                  },
                                  {
                                    "hexValue": "2062652067726561746572207468616e206f7220657175616c20746f20746865",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14008:34:18",
                                    "type": "",
                                    "value": " be greater than or equal to the"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13981:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13981:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13981:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14063:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14074:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14059:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14059:19:18"
                                  },
                                  {
                                    "hexValue": "206170706c69636174696f6e20666565",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14080:18:18",
                                    "type": "",
                                    "value": " application fee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14052:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14052:47:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14052:47:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14108:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14120:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14131:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14116:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14116:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14108:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_99f42558b586dc72ca995d95dbefffd69a3cdea04598bdf09f3743cad77d39ae__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13808:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13822:4:18",
                            "type": ""
                          }
                        ],
                        "src": "13657:484:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14320:224:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14337:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14348:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14330:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14330:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14330:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14371:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14382:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14367:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14367:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14387:2:18",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14360:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14360:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14360:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14410:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14421:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14406:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14406:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a207377617020616c726561647920696e6974696174",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14426:34:18",
                                    "type": "",
                                    "value": "Tradescrow: swap already initiat"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14399:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14399:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14399:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14481:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14492:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14477:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14477:18:18"
                                  },
                                  {
                                    "hexValue": "6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14497:4:18",
                                    "type": "",
                                    "value": "ed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14470:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14470:32:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14470:32:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14511:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14523:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14534:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14519:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14519:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14511:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_73e49f9bbdacf029dca4aed3f3de7982c7ef80d5f20adf41d37dd6f012988125__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14297:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14311:4:18",
                            "type": ""
                          }
                        ],
                        "src": "14146:398:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14581:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14598:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14605:3:18",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14610:10:18",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14601:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14601:20:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14591:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14591:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14591:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14638:1:18",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14641:4:18",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14631:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14631:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14631:15:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14662:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14665:4:18",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14655:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14655:15:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14655:15:18"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14549:127:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14728:88:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14759:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14761:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14761:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14761:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14744:5:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14755:1:18",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14751:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14751:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "14741:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14741:17:18"
                              },
                              "nodeType": "YulIf",
                              "src": "14738:43:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14790:20:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14801:5:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14808:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14797:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14797:13:18"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "14790:3:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14710:5:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "14720:3:18",
                            "type": ""
                          }
                        ],
                        "src": "14681:135:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14869:80:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14896:22:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14898:16:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14898:18:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14898:18:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14885:1:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "14892:1:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14888:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14888:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14882:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14882:13:18"
                              },
                              "nodeType": "YulIf",
                              "src": "14879:39:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14927:16:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14938:1:18"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14941:1:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14934:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14934:9:18"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "14927:3:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14852:1:18",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14855:1:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "14861:3:18",
                            "type": ""
                          }
                        ],
                        "src": "14821:128:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15019:487:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15029:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15049:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15043:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15043:12:18"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "15033:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15071:3:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15076:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15064:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15064:19:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15064:19:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15092:14:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15102:4:18",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15096:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15115:19:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15126:3:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15131:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15122:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15122:12:18"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15115:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15143:28:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15161:5:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15168:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15157:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15157:14:18"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15147:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15180:10:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15189:1:18",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "15184:1:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15248:233:18",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "15262:23:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15278:6:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "15272:5:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15272:13:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "15266:2:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "15305:3:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15320:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "15314:5:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15314:9:18"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15333:3:18",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "15338:1:18",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15329:3:18"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15329:11:18"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "15342:1:18",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "15325:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15325:19:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "15310:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15310:35:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15298:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15298:48:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15298:48:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "15370:3:18"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "15375:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15366:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15366:12:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15390:2:18"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15394:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "15386:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15386:11:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "15380:5:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15380:18:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15359:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15359:40:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15359:40:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15412:21:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "15423:3:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15428:4:18",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15419:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15419:14:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "15412:3:18"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15446:25:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15460:6:18"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "15468:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15456:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15456:15:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15446:6:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "15210:1:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15213:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15207:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15207:13:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "15221:18:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15223:14:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "15232:1:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15235:1:18",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15228:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15228:9:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "15223:1:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "15203:3:18",
                                "statements": []
                              },
                              "src": "15199:282:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15490:10:18",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15497:3:18"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15490:3:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_struct_Coin_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14996:5:18",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15003:3:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15011:3:18",
                            "type": ""
                          }
                        ],
                        "src": "14954:552:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15658:1128:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15668:12:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15678:2:18",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15672:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15696:9:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15707:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15689:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15689:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15689:21:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15719:33:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15737:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15748:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15733:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15733:19:18"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15723:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15761:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15779:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15784:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15775:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15775:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15788:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15771:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15771:19:18"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "15765:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15810:9:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "15821:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15806:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15806:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "15836:6:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "15830:5:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15830:13:18"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "15845:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "15826:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15826:22:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15799:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15799:50:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15799:50:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15858:32:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15878:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "15886:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15874:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15874:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15868:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15868:22:18"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "15862:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15899:12:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15909:2:18",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "15903:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15931:9:18"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "15942:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15927:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15927:18:18"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "15947:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15920:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15920:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15920:30:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15959:42:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15989:6:18"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "15997:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15985:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15985:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15979:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15979:22:18"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "15963:12:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16010:12:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16020:2:18",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulTypedName",
                                  "src": "16014:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16042:9:18"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "16053:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16038:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16038:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16058:4:18",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16031:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16031:32:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16031:32:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16072:17:18",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "16083:6:18"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "16076:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16098:33:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16118:12:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16112:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16112:19:18"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "16102:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16147:6:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16155:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16140:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16140:22:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16140:22:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16171:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16182:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16193:3:18",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16178:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16178:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16171:3:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16206:35:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16224:12:18"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16238:2:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16220:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16220:21:18"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "16210:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16250:10:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16259:1:18",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "16254:1:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16318:267:18",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "16332:23:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16348:6:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "16342:5:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16342:13:18"
                                    },
                                    "variables": [
                                      {
                                        "name": "_6",
                                        "nodeType": "YulTypedName",
                                        "src": "16336:2:18",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "16375:3:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_6",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16390:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "16384:5:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16384:9:18"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "16395:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "16380:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16380:18:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16368:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16368:31:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16368:31:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "16423:3:18"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "16428:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "16419:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16419:12:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_6",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16443:2:18"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16447:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "16439:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16439:11:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "16433:5:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16433:18:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16412:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16412:40:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16412:40:18"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "16476:3:18"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "16481:2:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "16472:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16472:12:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_6",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16496:2:18"
                                                },
                                                {
                                                  "name": "_4",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16500:2:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "16492:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16492:11:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "16486:5:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16486:18:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16465:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16465:40:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16465:40:18"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16518:19:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "16529:3:18"
                                        },
                                        {
                                          "name": "_5",
                                          "nodeType": "YulIdentifier",
                                          "src": "16534:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16525:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16525:12:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "16518:3:18"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16550:25:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16564:6:18"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "16572:2:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16560:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16560:15:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16550:6:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "16280:1:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16283:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "16277:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16277:13:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "16291:18:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16293:14:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "16302:1:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16305:1:18",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16298:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16298:9:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "16293:1:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "16273:3:18",
                                "statements": []
                              },
                              "src": "16269:316:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16594:44:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16626:6:18"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "16634:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16622:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16622:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16616:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16616:22:18"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "16598:14:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16658:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16669:4:18",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16654:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16654:20:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16684:3:18"
                                          },
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "16689:9:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "16680:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16680:19:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16705:2:18",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "16701:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16701:7:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16676:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16676:33:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16647:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16647:63:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16647:63:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16719:61:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16760:14:18"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16776:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_struct_Coin_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "16727:32:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16727:53:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16719:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Offer_$1447_memory_ptr__to_t_struct$_Offer_$1447_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15627:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15638:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15649:4:18",
                            "type": ""
                          }
                        ],
                        "src": "15511:1275:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16965:228:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16982:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16993:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16975:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16975:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16975:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17016:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17027:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17012:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17012:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17032:2:18",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17005:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17005:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17005:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17055:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17066:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17051:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17051:18:18"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17071:34:18",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17044:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17044:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17044:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17126:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17137:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17122:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17122:18:18"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17142:8:18",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17115:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17115:36:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17115:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17160:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17172:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17183:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17168:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17168:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17160:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16942:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16956:4:18",
                            "type": ""
                          }
                        ],
                        "src": "16791:402:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17372:230:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17389:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17400:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17382:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17382:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17382:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17423:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17434:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17419:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17419:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17439:2:18",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17412:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17412:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17412:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17462:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17473:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17458:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17458:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a2063616c6c6572206973206e6f7420737761702069",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17478:34:18",
                                    "type": "",
                                    "value": "Tradescrow: caller is not swap i"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17451:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17451:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17451:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17533:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17544:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17529:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17529:18:18"
                                  },
                                  {
                                    "hexValue": "6e69746961746f72",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17549:10:18",
                                    "type": "",
                                    "value": "nitiator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17522:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17522:38:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17522:38:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17569:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17581:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17592:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17577:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17577:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17569:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7931cdccd8d6c18f9143ecf32834dc315736a14c8ea589a453b1c5a095df45f1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17349:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17363:4:18",
                            "type": ""
                          }
                        ],
                        "src": "17198:404:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17781:251:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17798:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17809:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17791:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17791:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17791:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17832:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17843:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17828:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17828:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17848:2:18",
                                    "type": "",
                                    "value": "61"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17821:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17821:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17821:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17871:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17882:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17867:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17867:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a2043616e277420616363657074206f666665722c20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17887:34:18",
                                    "type": "",
                                    "value": "Tradescrow: Can't accept offer, "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17860:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17860:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17860:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17942:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17953:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17938:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17938:18:18"
                                  },
                                  {
                                    "hexValue": "7061727469636970616e74206469646e27742061646420617373657473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17958:31:18",
                                    "type": "",
                                    "value": "participant didn't add assets"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17931:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17931:59:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17931:59:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17999:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18011:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18022:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18007:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18007:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17999:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0b65f9cb588e2917ca9b5cb347e64214aa74344276b9de610f58bc3a5161f6e5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17758:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17772:4:18",
                            "type": ""
                          }
                        ],
                        "src": "17607:425:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18294:298:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18304:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18322:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18327:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "18318:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18318:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18331:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18314:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18314:19:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "18308:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18349:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "18364:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "18372:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "18360:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18360:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18342:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18342:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18342:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18396:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18407:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18392:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18392:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "18416:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "18424:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "18412:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18412:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18385:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18385:43:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18385:43:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18448:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18459:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18444:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18444:18:18"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "18464:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18437:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18437:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18437:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18491:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18502:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18487:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18487:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18507:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18480:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18480:31:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18480:31:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18531:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18542:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18527:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18527:19:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18548:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18520:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18520:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18520:30:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18559:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18571:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18582:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18567:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18567:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18559:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18247:9:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "18258:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18266:6:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18274:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18285:4:18",
                            "type": ""
                          }
                        ],
                        "src": "18037:555:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18882:342:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18892:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18910:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18915:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "18906:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18906:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18919:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18902:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18902:19:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "18896:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18937:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "18952:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "18960:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "18948:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18948:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18930:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18930:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18930:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18984:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18995:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18980:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18980:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "19004:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "19012:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "19000:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19000:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18973:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18973:43:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18973:43:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19036:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19047:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19032:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19032:18:18"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "19052:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19025:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19025:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19025:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19079:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19090:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19075:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19075:18:18"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "19095:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19068:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19068:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19068:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19122:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19133:3:18",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19118:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19118:19:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19139:3:18",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19111:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19111:32:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19111:32:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19163:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19174:3:18",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19159:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19159:19:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19180:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19152:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19152:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19152:30:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19191:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19203:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19214:3:18",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19199:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19199:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19191:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18827:9:18",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "18838:6:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "18846:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18854:6:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18862:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18873:4:18",
                            "type": ""
                          }
                        ],
                        "src": "18597:627:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19403:170:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19420:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19431:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19413:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19413:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19413:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19454:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19465:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19450:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19450:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19470:2:18",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19443:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19443:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19443:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19493:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19504:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19489:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19489:18:18"
                                  },
                                  {
                                    "hexValue": "5061757361626c653a206e6f7420706175736564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19509:22:18",
                                    "type": "",
                                    "value": "Pausable: not paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19482:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19482:50:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19482:50:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19541:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19553:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19564:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19549:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19549:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19541:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19380:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19394:4:18",
                            "type": ""
                          }
                        ],
                        "src": "19229:344:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19752:227:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19769:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19780:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19762:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19762:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19762:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19803:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19814:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19799:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19799:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19819:2:18",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19792:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19792:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19792:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19842:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19853:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19838:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19838:18:18"
                                  },
                                  {
                                    "hexValue": "54726164657363726f773a2063616c6c6572206973206e6f7420737761702074",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19858:34:18",
                                    "type": "",
                                    "value": "Tradescrow: caller is not swap t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19831:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19831:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19831:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19913:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19924:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19909:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19909:18:18"
                                  },
                                  {
                                    "hexValue": "6172676574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19929:7:18",
                                    "type": "",
                                    "value": "arget"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19902:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19902:35:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19902:35:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19946:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19958:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19969:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19954:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19954:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19946:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7653f136e737ca43daea4992f5fd38430bc3a18da68880da7c93fedef8758fe5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19729:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19743:4:18",
                            "type": ""
                          }
                        ],
                        "src": "19578:401:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20113:145:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20123:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20135:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20146:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20131:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20131:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20123:4:18"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20165:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "20180:6:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "20196:3:18",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "20201:1:18",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "20192:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20192:11:18"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "20205:1:18",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "20188:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20188:19:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20176:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20176:32:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20158:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20158:51:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20158:51:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20229:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20240:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20225:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20225:18:18"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20245:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20218:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20218:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20218:34:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20074:9:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20085:6:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20093:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20104:4:18",
                            "type": ""
                          }
                        ],
                        "src": "19984:274:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20420:218:18",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20430:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20442:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20453:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20438:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20438:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20430:4:18"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20465:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20483:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20488:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "20479:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20479:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20492:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20475:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20475:19:18"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "20469:2:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20510:9:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "20525:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "20533:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20521:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20521:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20503:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20503:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20503:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20557:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20568:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20553:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20553:18:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "20577:6:18"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "20585:2:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20573:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20573:15:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20546:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20546:43:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20546:43:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20609:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20620:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20605:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20605:18:18"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "20625:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20598:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20598:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20598:34:18"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20373:9:18",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "20384:6:18",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20392:6:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20400:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20411:4:18",
                            "type": ""
                          }
                        ],
                        "src": "20263:375:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20721:199:18",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20767:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20776:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20779:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20769:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20769:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20769:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "20742:7:18"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20751:9:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20738:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20738:23:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20763:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20734:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20734:32:18"
                              },
                              "nodeType": "YulIf",
                              "src": "20731:52:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20792:29:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20811:9:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20805:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20805:16:18"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "20796:5:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20874:16:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20883:1:18",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20886:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20876:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20876:12:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20876:12:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20843:5:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "20864:5:18"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "20857:6:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20857:13:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "20850:6:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20850:21:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "20840:2:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20840:32:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20833:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20833:40:18"
                              },
                              "nodeType": "YulIf",
                              "src": "20830:60:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20899:15:18",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20909:5:18"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "20899:6:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20687:9:18",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "20698:7:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20710:6:18",
                            "type": ""
                          }
                        ],
                        "src": "20643:277:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21099:232:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21116:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21127:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21109:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21109:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21109:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21150:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21161:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21146:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21146:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21166:2:18",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21139:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21139:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21139:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21189:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21200:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21185:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21185:18:18"
                                  },
                                  {
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21205:34:18",
                                    "type": "",
                                    "value": "SafeERC20: ERC20 operation did n"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21178:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21178:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21178:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21260:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21271:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21256:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21256:18:18"
                                  },
                                  {
                                    "hexValue": "6f742073756363656564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21276:12:18",
                                    "type": "",
                                    "value": "ot succeed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21249:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21249:40:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21249:40:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21298:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21310:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21321:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21306:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21306:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21298:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21076:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21090:4:18",
                            "type": ""
                          }
                        ],
                        "src": "20925:406:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21510:228:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21527:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21538:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21520:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21520:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21520:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21561:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21572:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21557:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21557:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21577:2:18",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21550:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21550:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21550:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21600:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21611:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21596:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21596:18:18"
                                  },
                                  {
                                    "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21616:34:18",
                                    "type": "",
                                    "value": "Address: insufficient balance fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21589:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21589:62:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21589:62:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21671:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21682:2:18",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21667:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21667:18:18"
                                  },
                                  {
                                    "hexValue": "722063616c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21687:8:18",
                                    "type": "",
                                    "value": "r call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21660:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21660:36:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21660:36:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21705:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21717:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21728:3:18",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21713:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21713:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21705:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21487:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21501:4:18",
                            "type": ""
                          }
                        ],
                        "src": "21336:402:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21917:179:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21934:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21945:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21927:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21927:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21927:21:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21968:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21979:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21964:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21964:18:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21984:2:18",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21957:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21957:30:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21957:30:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22007:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22018:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22003:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22003:18:18"
                                  },
                                  {
                                    "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22023:31:18",
                                    "type": "",
                                    "value": "Address: call to non-contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21996:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21996:59:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21996:59:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22064:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22076:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22087:2:18",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22072:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22072:18:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22064:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21894:9:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21908:4:18",
                            "type": ""
                          }
                        ],
                        "src": "21743:353:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22154:205:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22164:10:18",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22173:1:18",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "22168:1:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22233:63:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "22258:3:18"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "22263:1:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "22254:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22254:11:18"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "22277:3:18"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "22282:1:18"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "22273:3:18"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "22273:11:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "22267:5:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22267:18:18"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22247:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22247:39:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22247:39:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "22194:1:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22197:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22191:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22191:13:18"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "22205:19:18",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "22207:15:18",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "22216:1:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22219:2:18",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "22212:3:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22212:10:18"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "22207:1:18"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "22187:3:18",
                                "statements": []
                              },
                              "src": "22183:113:18"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22322:31:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "22335:3:18"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "22340:6:18"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "22331:3:18"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22331:16:18"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22349:1:18",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "22324:6:18"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22324:27:18"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22324:27:18"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "22311:1:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22314:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22308:2:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22308:13:18"
                              },
                              "nodeType": "YulIf",
                              "src": "22305:48:18"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "22132:3:18",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "22137:3:18",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "22142:6:18",
                            "type": ""
                          }
                        ],
                        "src": "22101:258:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22501:137:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22511:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22531:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "22525:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22525:13:18"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "22515:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "22573:6:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22581:4:18",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22569:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22569:17:18"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22588:3:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22593:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "22547:21:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22547:53:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22547:53:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22609:23:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22620:3:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22625:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22616:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22616:16:18"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "22609:3:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22477:3:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22482:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22493:3:18",
                            "type": ""
                          }
                        ],
                        "src": "22364:274:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22764:262:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22781:9:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22792:2:18",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22774:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22774:21:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22774:21:18"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22804:27:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22824:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "22818:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22818:13:18"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "22808:6:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22851:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22862:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22847:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22847:18:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22867:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22840:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22840:34:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22840:34:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "22909:6:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22917:2:18",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22905:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22905:15:18"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22926:9:18"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22937:2:18",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22922:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22922:18:18"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22942:6:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "22883:21:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22883:66:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22883:66:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22958:62:18",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22974:9:18"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "22993:6:18"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "23001:2:18",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "22989:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "22989:15:18"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "23010:2:18",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "23006:3:18"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "23006:7:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "22985:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22985:29:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22970:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22970:45:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23017:2:18",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22966:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22966:54:18"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22958:4:18"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22733:9:18",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22744:6:18",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22755:4:18",
                            "type": ""
                          }
                        ],
                        "src": "22643:383:18"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3538() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory_3539() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3540() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function array_allocation_size_array_struct_Nft_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_struct_Coin_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_struct_Nft_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(6, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n            if slt(sub(end, src), 0x40)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            let value := allocate_memory_3538()\n            let value_1 := calldataload(src)\n            validator_revert_address(value_1)\n            mstore(value, value_1)\n            mstore(add(value, _2), calldataload(add(src, _2)))\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_struct_Offer(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n        value := allocate_memory_3539()\n        let value_1 := calldataload(headStart)\n        validator_revert_address(value_1)\n        mstore(value, value_1)\n        let _1 := 32\n        mstore(add(value, _1), calldataload(add(headStart, _1)))\n        let _2 := 64\n        let offset := calldataload(add(headStart, _2))\n        let _3 := 0xffffffffffffffff\n        if gt(offset, _3) { revert(0, 0) }\n        let _4 := add(headStart, offset)\n        if iszero(slt(add(_4, 0x1f), end)) { revert(0, 0) }\n        let _5 := calldataload(_4)\n        let dst := allocate_memory(array_allocation_size_array_struct_Nft_dyn(_5))\n        let dst_1 := dst\n        mstore(dst, _5)\n        dst := add(dst, _1)\n        let _6 := 0x60\n        let srcEnd := add(add(_4, mul(_5, _6)), _1)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(_4, _1)\n        for { } lt(src, srcEnd) { src := add(src, _6) }\n        {\n            if slt(sub(end, src), _6)\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            let value_2 := allocate_memory_3540()\n            let value_3 := calldataload(src)\n            validator_revert_address(value_3)\n            mstore(value_2, value_3)\n            mstore(add(value_2, _1), calldataload(add(src, _1)))\n            mstore(add(value_2, _2), calldataload(add(src, _2)))\n            mstore(dst, value_2)\n            dst := add(dst, _1)\n        }\n        mstore(add(value, _2), dst_1)\n        let offset_1 := calldataload(add(headStart, _6))\n        if gt(offset_1, _3) { revert(0, 0) }\n        mstore(add(value, _6), abi_decode_array_struct_Coin_dyn(add(headStart, offset_1), end))\n    }\n    function abi_decode_tuple_t_uint256t_struct$_Offer_$1447_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_struct_Offer(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payablet_struct$_Offer_$1447_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_struct_Offer(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_struct_Nft_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e4a875764ffe42712c8e053158628b37f0a9b37947ceaf3df1d80f7ef40d3ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Tradescrow: transfer to the zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c270a08588dfe6b1b7768983935475cdfbee552f6421bc094aaf3aec5e3b72dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Tradescrow: No available fees\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Tradescrow: Swap closed. Only us\")\n        mstore(add(headStart, 96), \"er cancel enabled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99ca17aed01c53af5d12bf5d5c41fd90829c88bb1398cb9a3296efec15437cd4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Tradescrow: Can't cancel swap, m\")\n        mstore(add(headStart, 96), \"ust be swap participant\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99f42558b586dc72ca995d95dbefffd69a3cdea04598bdf09f3743cad77d39ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"Tradescrow: Sent amount needs to\")\n        mstore(add(headStart, 96), \" be greater than or equal to the\")\n        mstore(add(headStart, 128), \" application fee\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_73e49f9bbdacf029dca4aed3f3de7982c7ef80d5f20adf41d37dd6f012988125__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Tradescrow: swap already initiat\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_array_struct_Coin_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            mstore(pos, and(mload(_2), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_2, _1)))\n            pos := add(pos, 0x40)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_struct$_Offer_$1447_memory_ptr__to_t_struct$_Offer_$1447_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let tail_1 := add(headStart, 160)\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, _1), and(mload(value0), _2))\n        let _3 := mload(add(value0, _1))\n        let _4 := 64\n        mstore(add(headStart, _4), _3)\n        let memberValue0 := mload(add(value0, _4))\n        let _5 := 96\n        mstore(add(headStart, _5), 0x80)\n        let pos := tail_1\n        let length := mload(memberValue0)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(memberValue0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _6 := mload(srcPtr)\n            mstore(pos, and(mload(_6), _2))\n            mstore(add(pos, _1), mload(add(_6, _1)))\n            mstore(add(pos, _4), mload(add(_6, _4)))\n            pos := add(pos, _5)\n            srcPtr := add(srcPtr, _1)\n        }\n        let memberValue0_1 := mload(add(value0, _5))\n        mstore(add(headStart, 0x80), add(sub(pos, headStart), not(31)))\n        tail := abi_encode_array_struct_Coin_dyn(memberValue0_1, pos)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7931cdccd8d6c18f9143ecf32834dc315736a14c8ea589a453b1c5a095df45f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Tradescrow: caller is not swap i\")\n        mstore(add(headStart, 96), \"nitiator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0b65f9cb588e2917ca9b5cb347e64214aa74344276b9de610f58bc3a5161f6e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Tradescrow: Can't accept offer, \")\n        mstore(add(headStart, 96), \"participant didn't add assets\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7653f136e737ca43daea4992f5fd38430bc3a18da68880da7c93fedef8758fe5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Tradescrow: caller is not swap t\")\n        mstore(add(headStart, 96), \"arget\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
                  "id": 18,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB5CBCB88 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB5CBCB88 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x7CB1774D EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x52492815 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x54D6A2B7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x164E68DE EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x1BF33004 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x23ED JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0xA63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x2476 JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x19C PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x1113 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x14B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x273E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x27EC JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x370 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A207472616E7366657220746F20746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD SELFBALANCE PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A204E6F20617661696C61626C652066656573000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD SELFBALANCE PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x53B PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x561 DUP2 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH2 0x6BD SWAP8 SWAP4 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5E6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x668 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH2 0x766 SWAP8 SWAP4 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x5 DUP6 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP4 SWAP1 SWAP7 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE PUSH2 0x89D SWAP10 ADDRESS SWAP10 SWAP7 SWAP1 SWAP6 AND SWAP8 SWAP4 SWAP7 DUP8 ADD SWAP5 SWAP1 SWAP4 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x848 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP5 ADD SLOAD DUP3 DUP8 ADD MSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD DUP7 MLOAD DUP2 DUP10 MUL DUP2 ADD DUP10 ADD DUP9 MSTORE DUP2 DUP2 MSTORE PUSH2 0x950 SWAP10 ADDRESS SWAP10 SWAP5 SWAP1 SWAP7 AND SWAP8 SWAP5 SWAP7 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP4 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x96B SWAP1 PUSH1 0x4 DUP2 ADD PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x987 SWAP1 PUSH1 0x4 DUP2 ADD SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 MLOAD DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH32 0xBAD29F2BBBF6BB1E15563203BCDB0DD660C54EAB078763EB66F797EFA8F5E8C1 SWAP2 LOG4 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 DUP2 DUP2 PUSH2 0xA07 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0xA15 PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST POP POP PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x5 DUP5 ADD DUP2 SWAP1 SSTORE PUSH2 0xA3F PUSH1 0x6 DUP6 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST PUSH2 0xA4D PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST POP POP PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0xABD PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xE854185167CFF7D85F6CE2AE7D2940249C4A78AE54E270A5F7DDDF8E5D7CC458 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xB88 PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xBE3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2043616E27742063616E63656C20737761702C206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7573742062652073776170207061727469636970616E74000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 PUSH1 0x8 DUP3 ADD SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE PUSH2 0xD28 SWAP9 ADDRESS SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD40 SWAP1 DUP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD57 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xE66 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP1 DUP3 MSTORE PUSH1 0x5 DUP5 ADD SLOAD DUP3 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP6 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH2 0xE31 SWAP9 ADDRESS SWAP9 SWAP6 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP5 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE4C SWAP1 PUSH1 0x4 ADD DUP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE66 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0x85562D2D9B6FE46899F9B6ED410D0330551D861F63395B58C411A9D8159CE087 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP8 PUSH2 0xFBC SWAP8 SWAP5 SWAP7 DUP8 ADD SWAP5 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xF67 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP PUSH2 0x1D77 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1073 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 SWAP8 PUSH2 0x1071 SWAP8 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD00350BCAC47BD6AA8C7905E0B67F2DE5CD9766526DC50203BBFB229BF6D17A7 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 DUP2 DUP2 PUSH2 0xA07 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x21EF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0x1111 PUSH1 0x0 PUSH2 0x1DAF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x1189 DUP3 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD DUP3 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP6 MSTORE DUP2 DUP2 MSTORE PUSH1 0x1 SWAP8 PUSH2 0x1236 SWAP8 SWAP7 SWAP5 SWAP6 DUP8 ADD SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 DUP5 ADD DUP3 ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xEE5 JUMP JUMPDEST EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A207377617020616C726561647920696E6974696174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH2 0x12C8 DUP2 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x12D3 CALLER ADDRESS DUP4 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x137E JUMPI PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x2 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1312 JUMPI PUSH2 0x1312 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x1376 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12D6 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x7 SWAP1 SWAP3 ADD SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x13BA JUMPI PUSH2 0x13BA PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x140D DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1382 JUMP JUMPDEST POP PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x5 SLOAD PUSH2 0x142D SWAP1 CALLVALUE PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1453 SWAP1 DUP5 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x9290CD7656E70519B1C9EFCC328A9E9E7C9122292708C3C57E1F1491E99F2511 SWAP1 PUSH2 0x14A7 SWAP1 DUP7 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH2 0xABD PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x155D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH2 0x1589 DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x15A2 CALLER ADDRESS DUP5 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x15B1 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x8 DUP3 ADD SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1673 JUMPI DUP2 PUSH1 0x0 ADD PUSH1 0x2 ADD DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1607 JUMPI PUSH2 0x1607 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 DUP2 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP1 PUSH2 0x166B DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DD JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x16FC JUMPI DUP2 PUSH1 0x0 ADD PUSH1 0x3 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16A1 JUMPI PUSH2 0x16A1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x16F4 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1677 JUMP JUMPDEST POP PUSH1 0x5 SLOAD CALLVALUE GT ISZERO PUSH2 0x1733 JUMPI PUSH1 0x5 SLOAD PUSH2 0x1714 SWAP1 CALLVALUE PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x172D SWAP1 DUP5 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE81763BF4ABA65D65F664F69EDEB190A5D5BB77D7C98E2E1A0E39A1B04C5DB37 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x183C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x1DAF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2063616C6C6572206973206E6F7420737761702069 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3734BA34B0BA37B9 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2043616E277420616363657074206F666665722C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7061727469636970616E74206469646E27742061646420617373657473000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1B4E JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1963 JUMPI PUSH2 0x1963 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1A49 JUMPI DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE DUP6 DUP6 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B3C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A5F JUMPI PUSH2 0x1A5F PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP6 DUP6 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1A91 JUMPI PUSH2 0x1A91 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1AB3 JUMPI PUSH2 0x1AB3 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH2 0x1B46 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1940 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD0 DUP4 DUP4 PUSH1 0x60 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B8A JUMPI PUSH2 0x1B8A PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH2 0x1BAC PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EFA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x1C37 DUP5 DUP5 DUP5 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BF0 JUMPI PUSH2 0x1BF0 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C12 JUMPI PUSH2 0x1C12 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F62 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x1C41 DUP2 PUSH2 0x29F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD ISZERO PUSH2 0x1CBA JUMPI DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1D5F PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2210 JUMP JUMPDEST PUSH2 0x1D6D PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI POP PUSH1 0x60 DUP4 ADD MLOAD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DA1 JUMPI POP PUSH1 0x20 DUP4 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x370 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2063616C6C6572206973206E6F7420737761702074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185C99D95D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D34 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x1EEB JUMPI POP PUSH1 0x60 DUP4 ADD MLOAD MLOAD ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x1DA1 JUMPI POP POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1F5D SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1F9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C49 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1F5D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x200D SWAP2 SWAP1 PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x1F5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x207B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2159 SWAP2 SWAP1 PUSH2 0x2B6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2196 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x219B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21AB DUP3 DUP3 DUP7 PUSH2 0x21B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x21C5 JUMPI POP DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x21D5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x2B88 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x3 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2231 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225E JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 ADD PUSH2 0x2232 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x225E JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x229A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2300 JUMPI PUSH2 0x2300 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2375 JUMPI PUSH2 0x2375 PUSH2 0x22C7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A8 JUMPI PUSH2 0x23A8 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x23BB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x234C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x23D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x240E DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x241E DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244D DUP8 DUP3 DUP9 ADD PUSH2 0x237D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x246B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x207E DUP2 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24A9 JUMPI PUSH2 0x24A9 PUSH2 0x22C7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x24D9 PUSH2 0x24D4 DUP4 PUSH2 0x248F JUMP JUMPDEST PUSH2 0x234C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2540 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x251D PUSH2 0x22DD JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2528 DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP6 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x24FC JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2565 PUSH2 0x2306 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x2572 DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x259A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BC PUSH2 0x24D4 DUP3 PUSH2 0x248F JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x60 SWAP2 DUP3 MUL DUP5 ADD DUP7 ADD SWAP2 DUP7 DUP3 ADD SWAP2 SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP8 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x262C JUMPI DUP1 DUP7 DUP13 SUB SLT ISZERO PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2600 PUSH2 0x2329 JUMP JUMPDEST DUP7 CALLDATALOAD PUSH2 0x260B DUP2 PUSH2 0x22B2 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP8 DUP8 ADD CALLDATALOAD DUP9 DUP3 ADD MSTORE DUP4 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH2 0x25E0 JUMP JUMPDEST DUP2 DUP8 DUP11 ADD MSTORE DUP1 DUP11 ADD CALLDATALOAD SWAP8 POP DUP5 DUP9 GT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2650 DUP12 DUP10 DUP13 ADD PUSH2 0x24B3 JUMP JUMPDEST DUP2 DUP11 ADD MSTORE POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269F DUP6 DUP3 DUP7 ADD PUSH2 0x254B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x26C7 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2704 PUSH2 0x24D4 DUP4 PUSH2 0x248F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2540 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2761 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2771 DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x278E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279A DUP10 DUP4 DUP11 ADD PUSH2 0x26E3 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27BC DUP10 DUP4 DUP11 ADD PUSH2 0x26E3 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27DF DUP9 DUP3 DUP10 ADD PUSH2 0x237D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x280F DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x281F DUP2 PUSH2 0x22B2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27DF DUP9 DUP3 DUP10 ADD PUSH2 0x237D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x28C1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A205377617020636C6F7365642E204F6E6C79207573 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x195C8818D85B98D95B08195B98589B1959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x50 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726164657363726F773A2053656E7420616D6F756E74206E6565647320746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x2062652067726561746572207468616E206F7220657175616C20746F20746865 PUSH1 0x60 DUP3 ADD MSTORE PUSH16 0x206170706C69636174696F6E20666565 PUSH1 0x80 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A09 PUSH2 0x28C1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x28C1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A6C JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A3C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xA0 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP7 MLOAD AND DUP4 DUP7 ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP2 DUP2 DUP9 ADD MSTORE DUP1 DUP9 ADD MLOAD SWAP2 POP PUSH1 0x60 PUSH1 0x80 DUP2 DUP10 ADD MSTORE DUP5 DUP4 MLOAD DUP1 DUP8 MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 POP DUP8 DUP6 ADD SWAP7 POP PUSH1 0x0 SWAP5 POP JUMPDEST DUP1 DUP6 LT ISZERO PUSH2 0x2AF3 JUMPI DUP7 MLOAD DUP1 MLOAD DUP8 AND DUP4 MSTORE DUP9 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE DUP5 ADD MLOAD DUP5 DUP4 ADD MSTORE SWAP6 DUP8 ADD SWAP6 PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST POP DUP10 DUP3 ADD MLOAD DUP10 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP12 ADD MSTORE SWAP7 POP PUSH2 0x2B10 DUP2 DUP9 PUSH2 0x2A28 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B43 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B7E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2B40 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2BA7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH3 0x980643 PUSH20 0x85F17314E6EA9494ADF16D2EF5A766483D7B8142 0xA8 0xCC STATICCALL 0x27 BLOCKHASH AND PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "680:12048:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:6;;;;;;;;;;-1:-1:-1;387:221:6;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;387:221:6;;;;;;;;588:200:11;;;;;;;;;;-1:-1:-1;588:200:11;;;;;:::i;:::-;-1:-1:-1;;;588:200:11;;;;;;;;;;-1:-1:-1;;;;;;3190:33:18;;;3172:52;;3160:2;3145:18;588:200:11;3028:202:18;9818:345:17;;;;;;;;;;-1:-1:-1;9818:345:17;;;;;:::i;:::-;;:::i;:::-;;6750:897;;;;;;;;;;-1:-1:-1;6750:897:17;;;;;:::i;:::-;;:::i;9503:78::-;;;;;;;;;;;;;:::i;9285:132::-;;;;;;;;;;-1:-1:-1;9285:132:17;;;;;:::i;:::-;;:::i;7927:1154::-;;;;;;;;;;-1:-1:-1;7927:1154:17;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;1668:101:0;;;;;;;;;;;;;:::i;5221:1083:17:-;;;;;;:::i;:::-;;:::i;9423:74::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;7250:51:18;;7238:2;7223:18;1036:85:0;7104:203:18;3536:976:17;;;;;;:::i;:::-;;:::i;:::-;;;7947:25:18;;;7935:2;7920:18;3536:976:17;7801:177:18;724:247:5;;;;;;;;;;-1:-1:-1;724:247:5;;;;;:::i;:::-;-1:-1:-1;;;724:247:5;;;;;;;;1087:18:17;;;;;;;;;;;;;;;;499:219:5;;;;;;;;;;-1:-1:-1;499:219:5;;;;;:::i;:::-;-1:-1:-1;;;499:219:5;;;;;;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;387:221:6:-;489:4;-1:-1:-1;;;;;;512:49:6;;-1:-1:-1;;;512:49:6;;:89;;-1:-1:-1;;;;;;;;;;937:40:15;;;565:36:6;505:96;387:221;-1:-1:-1;;387:221:6:o;9818:345:17:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0::1;1240:68;;;;-1:-1:-1::0;;;1240:68:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9917:23:17;::::2;9909:76;;;::::0;-1:-1:-1;;;9909:76:17;;11643:2:18;9909:76:17::2;::::0;::::2;11625:21:18::0;11682:2;11662:18;;;11655:30;11721:34;11701:18;;;11694:62;-1:-1:-1;;;11772:18:18;;;11765:38;11820:19;;9909:76:17::2;11441:404:18::0;9909:76:17::2;10049:1;10038:7;10028;;10004:21;:31;;;;:::i;:::-;:41;;;;:::i;:::-;:46;;9996:88;;;::::0;-1:-1:-1;;;9996:88:17;;12314:2:18;9996:88:17::2;::::0;::::2;12296:21:18::0;12353:2;12333:18;;;12326:30;12392:31;12372:18;;;12365:59;12441:18;;9996:88:17::2;12112:353:18::0;9996:88:17::2;10095:9;-1:-1:-1::0;;;;;10095:18:17::2;:61;10148:7;10138;;10114:21;:31;;;;:::i;:::-;:41;;;;:::i;:::-;10095:61;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1701:1:2;2628:22;;9818:345:17:o;6750:897::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;1412:8:1::1;1168:7:::0;;;;;1098:84;1412:8:::1;1411:9;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;6832:21:17::2;6846:6;6832:13;:21::i;:::-;6871:14;::::0;;;:6:::2;:14;::::0;;;;:19:::2;;::::0;1210:1:::2;6871:30;6863:92;;;;-1:-1:-1::0;;;6863:92:17::2;;;;;;;:::i;:::-;6981:14;::::0;;;:6:::2;:14;::::0;;;;;;;6965:41;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;6965:41:17::2;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;;;6981:14;;6965:41;;;;;6981:14;6965:41;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;6965:41:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;6965:41:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;::::2;;;;;;;;;;::::0;::::2;:15;:41::i;:::-;7032:14;::::0;;;:6:::2;:14;::::0;;;;;;;7016:38;;::::2;::::0;::::2;::::0;;7032:21:::2;::::0;::::2;7016:38:::0;;-1:-1:-1;;;;;7016:38:17::2;::::0;;;;;;;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;7032:21;;7016:38;;;;;;7032:14;7016:38;::::2;::::0;;::::2;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;7016:38:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;7156:14;::::0;;;:6:::2;:14;::::0;;;;;;;:29;;7115:94;;::::2;::::0;::::2;::::0;;7187:21:::2;::::0;::::2;7115:94:::0;;-1:-1:-1;;;;;7115:94:17;;::::2;::::0;;;;;;;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;7149:4:::2;::::0;7156:29;;;::::2;::::0;7115:94;;;;;;;;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;7115:94:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;7115:94:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;::::2;;;;;;;;;;::::0;::::2;:25;:94::i;:::-;7313:14;::::0;;;:6:::2;:14;::::0;;;;;;;:21:::2;::::0;::::2;:26:::0;7272:94;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;7272:94:17;;::::2;::::0;;7313:26;7272:94;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;7306:4:::2;::::0;7313:26;;;::::2;::::0;7272:94;;7313:14;7272:94;;;;;;;::::2;::::0;;::::2;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;7272:94:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;7392:14;::::0;;;:6:::2;:14;::::0;;;;7377:63:::2;::::0;7418:21:::2;::::0;::::2;7377:14;:63::i;:::-;7465:14;::::0;;;:6:::2;:14;::::0;;;;7450:63:::2;::::0;7465:21:::2;::::0;::::2;::::0;7450:14:::2;:63::i;:::-;7573:14;::::0;;;:6:::2;:14;::::0;;;;;:21:::2;::::0;::::2;:26:::0;7542:29;;7529:79;;7601:6;;-1:-1:-1;;;;;7573:26:17;;::::2;::::0;7542:29;;::::2;::::0;7529:79:::2;::::0;::::2;7626:14;::::0;;;:6:::2;:14;::::0;;;;7619:21;;-1:-1:-1;;;;;;7619:21:17::2;::::0;;;;::::2;::::0;;;7626:14;;;7619:21:::2;;::::0;::::2;7626:14:::0;7619:21:::2;:::i;:::-;;;::::0;::::2;;;:::i;:::-;-1:-1:-1::0;;7619:21:17::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;7619:21:17::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;;;::::2;:::i;:::-;;;::::0;::::2;;;:::i;:::-;;;;;;;;;;;1701:1:2::0;2628:7;:22;;;;6750:897:17;:::o;9503:78::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0::1;1240:68;;;;-1:-1:-1::0;;;1240:68:0::1;;;;;;;:::i;:::-;9564:10:17::2;:8;:10::i;:::-;1701:1:2::0;2628:22;;9503:78:17:o;9285:132::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0::1;1240:68;;;;-1:-1:-1::0;;;1240:68:0::1;;;;;;;:::i;:::-;9362:3:17::2;:12:::0;;;9389:21:::2;::::0;7947:25:18;;;9389:21:17::2;::::0;7935:2:18;7920:18;9389:21:17::2;;;;;;;-1:-1:-1::0;1701:1:2;2628:22;;9285:132:17:o;7927:1154::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;1412:8:1::1;1168:7:::0;;;;;1098:84;1412:8:::1;1411:9;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;8030:14:17::2;::::0;;;:6:::2;:14;::::0;;;;:29;-1:-1:-1;;;;;8030:29:17::2;8063:10;8030:43;::::0;:87:::2;;-1:-1:-1::0;8077:14:17::2;::::0;;;:6:::2;:14;::::0;;;;:21:::2;;:26:::0;-1:-1:-1;;;;;8077:26:17::2;8107:10;8077:40;8030:87;8009:189;;;::::0;-1:-1:-1;;;8009:189:17;;13435:2:18;8009:189:17::2;::::0;::::2;13417:21:18::0;13474:2;13454:18;;;13447:30;13513:34;13493:18;;;13486:62;13584:25;13564:18;;;13557:53;13627:19;;8009:189:17::2;13233:419:18::0;8009:189:17::2;8209:14;::::0;;;:6:::2;:14;::::0;;;;1253:1:::2;8209:19;::::0;::::2;:30:::0;8254:29;-1:-1:-1;;;;;8254:29:17::2;8287:10;8254:43;8250:588;;;8354:14;::::0;;;:6:::2;:14;::::0;;;;;;;:29;;8313:97;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;8354:29:17;;::::2;8313:97:::0;;;8354:29;8313:97;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;8347:4:::2;::::0;8354:29;;8313:97;;8354:14;8313:97;;;;;;;;::::2;::::0;;::::2;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8313:97:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;8439:14;::::0;;;:6:::2;:14;::::0;;;;8424:66:::2;::::0;8439:14;8424::::2;:66::i;:::-;8514:14;::::0;;;:6:::2;:14;::::0;;;;8504:35:::2;::::0;:9:::2;:35::i;:::-;8250:588;;;8560:14;::::0;;;:6:::2;:14;::::0;;;;:21:::2;;:26:::0;-1:-1:-1;;;;;8560:26:17::2;8590:10;8560:40;8556:282;;;8657:14;::::0;;;:6:::2;:14;::::0;;;;;;;:21:::2;::::0;::::2;:26:::0;;8616:91;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;8657:26:17;;::::2;8616:91:::0;;;;;;;;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;8650:4:::2;::::0;8657:26;;8616:91;;8657:21;;8616:91;;;;;;;;;::::2;::::0;;::::2;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8616:91:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;8736:14;::::0;;;:6:::2;:14;::::0;;;;8721:60:::2;::::0;8736:21:::2;;::::0;8721:14:::2;:60::i;:::-;8805:14;::::0;;;:6:::2;:14;::::0;;;;8795:32:::2;::::0;8805:21:::2;;8795:9;:32::i;:::-;8853:33;::::0;8879:6;;8867:10:::2;::::0;8853:33:::2;::::0;;;::::2;8909:14;::::0;;;:6:::2;:14;::::0;;;;;;;8901:33;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;8901:33:17::2;::::0;;1210:1:::2;8901:33:::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;1210:1;;8901:33:::2;::::0;;;;;;;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8901:33:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8901:33:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;::::2;;;;;;;;;;::::0;::::2;:7;:33::i;:::-;:44;:89;;;;-1:-1:-1::0;8957:14:17::2;::::0;;;:6:::2;:14;::::0;;;;;;;8949:30;;::::2;::::0;::::2;::::0;;8957:21:::2;::::0;::::2;8949:30:::0;;-1:-1:-1;;;;;8949:30:17::2;::::0;;;;;;;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;;;;;;1210:1:::2;::::0;8949:30:::2;::::0;;8957:21;;8949:30;;;;;;;;::::2;::::0;;::::2;;;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;8949:30:17::2;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;;;;:41;8901:89;8897:178;;;9011:18;::::0;9022:6;;9011:18:::2;::::0;;;::::2;9050:14;::::0;;;:6:::2;:14;::::0;;;;9043:21;;-1:-1:-1;;;;;;9043:21:17::2;::::0;;;;::::2;::::0;;;9050:14;;;9043:21:::2;;::::0;::::2;9050:14:::0;9043:21:::2;:::i;8897:178::-;-1:-1:-1::0;1701:1:2;2628:22;;7927:1154:17:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5221:1083:17:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;2838:3:17::1;::::0;2825:9:::1;:16;;2804:143;;;;-1:-1:-1::0;;;2804:143:17::1;;;;;;;:::i;:::-;1168:7:1::0;;;;1411:9:::2;1403:38;;;;-1:-1:-1::0;;;1403:38:1::2;;;;;;;:::i;:::-;5346:18:17::3;5357:6;5346:10;:18::i;:::-;5390:14;::::0;;;:6:::3;:14;::::0;;;;;;;5382:30;;::::3;::::0;::::3;::::0;;5390:21:::3;::::0;::::3;5382:30:::0;;-1:-1:-1;;;;;5382:30:17::3;::::0;;;;;;;;::::3;::::0;;;;;;;;;;;::::3;::::0;;;;;;;;;1210:1:::3;::::0;5382:30:::3;::::0;;5390:21;;5382:30;;;;;;;;::::3;::::0;;::::3;;;::::0;;;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;;-1:-1:-1;;;;;5382:30:17::3;::::0;;;;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;;;;;;;;;;;::::3;::::0;::::3;;;;:41;5374:109;;;::::0;-1:-1:-1;;;5374:109:17;;14348:2:18;5374:109:17::3;::::0;::::3;14330:21:18::0;14387:2;14367:18;;;14360:30;14426:34;14406:18;;;14399:62;-1:-1:-1;;;14477:18:18;;;14470:32;14519:19;;5374:109:17::3;14146:398:18::0;5374:109:17::3;5501:14;::::0;;;:6:::3;:14;::::0;;;;:19:::3;;::::0;1210:1:::3;5501:30;5493:92;;;;-1:-1:-1::0;;;5493:92:17::3;;;;;;;:::i;:::-;5595:22;5611:5;5595:15;:22::i;:::-;5628:114;5675:10;5708:4;5727:5;5628:25;:114::i;:::-;5758:9;5753:117;5775:5;:10;;;:17;5771:1;:21;5753:117;;;5813:6;:14;5820:6;5813:14;;;;;;;;;;;:21;;:26;;5845:5;:10;;;5856:1;5845:13;;;;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;5813:46;;::::3;::::0;;::::3;::::0;;-1:-1:-1;5813:46:17;;;;;;;;;::::3;::::0;;::::3;;::::0;;-1:-1:-1;;;;;;5813:46:17::3;-1:-1:-1::0;;;;;5813:46:17;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;5794:3;::::3;::::0;::::3;:::i;:::-;;;;5753:117;;;;5884:9;5879:120;5901:5;:11;;;:18;5897:1;:22;5879:120;;;5940:14;::::0;;;:6:::3;:14;::::0;;;;5973:11:::3;::::0;::::3;::::0;:14;;5940:27;;;;;5985:1;;5973:14;::::3;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;5940:48;;::::3;::::0;;::::3;::::0;;-1:-1:-1;5940:48:17;;;;;;;;;::::3;::::0;;::::3;;::::0;;-1:-1:-1;;;;;;5940:48:17::3;-1:-1:-1::0;;;;;5940:48:17;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;::::0;5921:3;::::3;::::0;::::3;:::i;:::-;;;;5879:120;;;;6024:3;;6012:9;:15;6008:145;;;6086:3;::::0;6074:15:::3;::::0;:9:::3;:15;:::i;:::-;6043:14;::::0;;;:6:::3;:14;::::0;;;;:28;;:46;;;:21:::3;6103:39:::0;;6043:21;;:14;6103:39:::3;::::0;6043:46;;6103:39:::3;:::i;:::-;::::0;;;-1:-1:-1;;6008:145:17::3;6219:14;::::0;;;:6:::3;:14;::::0;;;;;;:29;6168:129;;6262:6;;-1:-1:-1;;;;;6219:29:17::3;::::0;6195:10:::3;::::0;6168:129:::3;::::0;::::3;::::0;6282:5;;6168:129:::3;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:2;2628:22;;5221:1083:17:o;9423:74::-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0::1;1240:68;;;;-1:-1:-1::0;;;1240:68:0::1;;;;;;;:::i;:::-;9482:8:17::2;:6;:8::i;3536:976::-:0;3670:7;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;2838:3:17::1;::::0;2825:9:::1;:16;;2804:143;;;;-1:-1:-1::0;;;2804:143:17::1;;;;;;;:::i;:::-;1168:7:1::0;;;;1411:9:::2;1403:38;;;;-1:-1:-1::0;;;1403:38:1::2;;;;;;;:::i;:::-;3689:22:17::3;3705:5;3689:15;:22::i;:::-;3721:25;:13;1032:19:14::0;;1050:1;1032:19;;;945:123;3721:25:17::3;3757:68;3791:10;3812:4;3819:5;3757:25;:68::i;:::-;3836:17;3856:6;:31;3863:23;:13;918:14:14::0;;827:112;3863:23:17::3;3856:31:::0;;::::3;::::0;::::3;::::0;;;;;;-1:-1:-1;3856:31:17;;;1210:1:::3;3898:9;::::0;::::3;:19:::0;3927:41;;-1:-1:-1;;;;;;3927:41:17::3;3957:10;3927:41;::::0;;3856:31;-1:-1:-1;3978:110:17::3;4000:5;:10;;;:17;3996:1;:21;3978:110;;;4038:4;:14;;:19;;4063:5;:10;;;4074:1;4063:13;;;;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;4038:39;;::::3;::::0;;::::3;::::0;;-1:-1:-1;4038:39:17;;;;;;;;;::::3;::::0;;::::3;;::::0;;-1:-1:-1;;;;;;4038:39:17::3;-1:-1:-1::0;;;;;4038:39:17;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;4019:3;::::3;::::0;::::3;:::i;:::-;;;;3978:110;;;;4102:9;4097:113;4119:5;:11;;;:18;4115:1;:22;4097:113;;;4158:4;:14;;:20;;4184:5;:11;;;4196:1;4184:14;;;;;;;;:::i;:::-;;::::0;;::::3;::::0;;;;;;;4158:41;;::::3;::::0;;::::3;::::0;;-1:-1:-1;4158:41:17;;;;;;;;;::::3;::::0;;::::3;;::::0;;-1:-1:-1;;;;;;4158:41:17::3;-1:-1:-1::0;;;;;4158:41:17;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;::::0;4139:3;::::3;::::0;::::3;:::i;:::-;;;;4097:113;;;;4235:3;;4223:9;:15;4219:131;;;4290:3;::::0;4278:15:::3;::::0;:9:::3;:15;:::i;:::-;4254:21;::::0;::::3;:39:::0;;;4307:7:::3;:32:::0;;4254:14:::3;::::0;4307:32:::3;::::0;4254:39;;4307:32:::3;:::i;:::-;::::0;;;-1:-1:-1;;4219:131:17::3;4359:11;::::0;::::3;:25:::0;;-1:-1:-1;;;;;;4359:25:17::3;-1:-1:-1::0;;;;;4359:25:17;::::3;;::::0;;4433:13:::3;918:14:14::0;4425:6:17::3;-1:-1:-1::0;;;;;4400:64:17::3;4413:10;-1:-1:-1::0;;;;;4400:64:17::3;;4458:5;4400:64;;;;;;:::i;:::-;;;;;;;;4482:13;918:14:14::0;1701:1:2;2628:22;;4475:30:17;3536:976;-1:-1:-1;;;;3536:976:17:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:13;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;16993:2:18;1998:73:0::1;::::0;::::1;16975:21:18::0;17032:2;17012:18;;;17005:30;17071:34;17051:18;;;17044:62;-1:-1:-1;;;17122:18:18;;;17115:36;17168:19;;1998:73:0::1;16791:402:18::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10196:203:17:-;10297:14;;;;:6;:14;;;;;:29;-1:-1:-1;;;;;10297:29:17;10283:10;:43;10262:130;;;;-1:-1:-1;;;10262:130:17;;17400:2:18;10262:130:17;;;17382:21:18;17439:2;17419:18;;;17412:30;17478:34;17458:18;;;17451:62;-1:-1:-1;;;17529:18:18;;;17522:38;17577:19;;10262:130:17;17198:404:18;10774:202:17;10865:17;10876:5;10865:10;:17::i;:::-;1210:1;10854:28;10846:123;;;;-1:-1:-1;;;10846:123:17;;17809:2:18;10846:123:17;;;17791:21:18;17848:2;17828:18;;;17821:30;17887:34;17867:18;;;17860:62;17958:31;17938:18;;;17931:59;18007:19;;10846:123:17;17607:425:18;11666:785:17;11779:9;11774:348;11796:5;:10;;;:17;11792:1;:21;11774:348;;;11838:5;:10;;;11849:1;11838:13;;;;;;;;:::i;:::-;;;;;;;:20;;;11862:1;11838:25;11834:278;;;11891:5;:10;;;11902:1;11891:13;;;;;;;;:::i;:::-;;;;;;;:18;;;-1:-1:-1;;;;;11883:44:17;;11928:4;11934:2;11938:5;:10;;;11949:1;11938:13;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;;;11883:76;;-1:-1:-1;;;;;;11883:76:17;;;;;;;-1:-1:-1;;;;;18360:15:18;;;11883:76:17;;;18342:34:18;18412:15;;;;18392:18;;;18385:43;18444:18;;;18437:34;18507:3;18487:18;;;18480:31;-1:-1:-1;18527:19:18;;;18520:30;18567:19;;11883:76:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:278;;;12007:5;:10;;;12018:1;12007:13;;;;;;;;:::i;:::-;;;;;;;:18;;;-1:-1:-1;;;;;11998:45:17;;12044:4;12050:2;12054:5;:10;;;12065:1;12054:13;;;;;;;;:::i;:::-;;;;;;;:16;;;12072:5;:10;;;12083:1;12072:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;11998:99;;-1:-1:-1;;;;;;11998:99:17;;;;;;;-1:-1:-1;;;;;18948:15:18;;;11998:99:17;;;18930:34:18;19000:15;;;;18980:18;;;18973:43;19032:18;;;19025:34;19075:18;;;19068:34;18910:3;19118:19;;;19111:32;-1:-1:-1;19159:19:18;;;19152:30;19199:19;;11998:99:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:278;11815:3;;;;:::i;:::-;;;;11774:348;;;;12136:9;12131:314;12153:5;:11;;;:18;12149:1;:22;12131:314;;;-1:-1:-1;;;;;12196:21:17;;12212:4;12196:21;12192:243;;;12237:67;12278:2;12282:5;:11;;;12294:1;12282:14;;;;;;;;:::i;:::-;;;;;;;:21;;;12244:5;:11;;;12256:1;12244:14;;;;;;;;:::i;:::-;;;;;;;:19;;;-1:-1:-1;;;;;12237:40:17;;;:67;;;;;:::i;:::-;12192:243;;;12343:77;12388:4;12394:2;12398:5;:11;;;12410:1;12398:14;;;;;;;;:::i;:::-;;;;;;;:21;;;12350:5;:11;;;12362:1;12350:14;;;;;;;;:::i;:::-;;;;;;;:19;;;-1:-1:-1;;;;;12343:44:17;;;:77;;;;;;:::i;:::-;12173:3;;;;:::i;:::-;;;;12131:314;;;;11666:785;;;:::o;12457:269::-;12550:11;;;;:15;12546:174;;12592:4;:11;;;12581:7;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;12631:11:17;;;;;12617;12656:15;;;;12685:7;;:24;;12631:11;;-1:-1:-1;;;;;12685:7:17;;;;:24;;;;;12631:11;;12685:24;;12617:11;12685:24;12631:11;12685:7;:24;;;;;;;;;;;;;;;;;;;12546:174;12457:269;;:::o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;19431:2:18;1669:41:1;;;19413:21:18;19470:2;19450:18;;;19443:30;-1:-1:-1;;;19489:18:18;;;19482:50;19549:18;;1669:41:1;19229:344:18;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:13::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;7268:32:18;;;7250:51;;7238:2;7223:18;2198:22:1::1;;;;;;;2110:117::o:0;11515:145:17:-;11582:18;11589:11;;;;11582:18;:::i;:::-;11610:17;11617:10;;;;11610:17;:::i;:::-;11652:1;11637:12;;;;:16;11515:145::o;11250:259::-;11369:10;;;;:17;11312:7;;1253:1;;11369:22;:49;;;;-1:-1:-1;11395:11:17;;;;:18;:23;11369:49;:70;;;;-1:-1:-1;11422:12:17;;;;:17;11369:70;11365:116;;;-1:-1:-1;1210:1:17;11497:5;11250:259;-1:-1:-1;;11250:259:17:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;10405:194:17:-;10503:14;;;;:6;:14;;;;;:21;;:26;-1:-1:-1;;;;;10503:26:17;10489:10;:40;10468:124;;;;-1:-1:-1;;;10468:124:17;;19780:2:18;10468:124:17;;;19762:21:18;19819:2;19799:18;;;19792:30;19858:34;19838:18;;;19831:62;-1:-1:-1;;;19909:18:18;;;19902:35;19954:19;;10468:124:17;19578:401:18;1863:115:1;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:13::0;;640:96;10982:262:17;11104:10;;;;:17;11047:7;;1253:1;;11104:22;;;:49;;-1:-1:-1;11130:11:17;;;;:18;:23;;11104:49;:70;;;-1:-1:-1;;1210:1:17;11232:5;10982:262;-1:-1:-1;;10982:262:17:o;701:205:8:-;840:58;;-1:-1:-1;;;;;20176:32:18;;840:58:8;;;20158:51:18;20225:18;;;20218:34;;;813:86:8;;833:5;;-1:-1:-1;;;863:23:8;20131:18:18;;840:58:8;;;;-1:-1:-1;;840:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:8;-1:-1:-1;;;;;;840:58:8;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;912:241::-;1077:68;;-1:-1:-1;;;;;20521:15:18;;;1077:68:8;;;20503:34:18;20573:15;;20553:18;;;20546:43;20605:18;;;20598:34;;;1050:96:8;;1070:5;;-1:-1:-1;;;1100:27:8;20438:18:18;;1077:68:8;20263:375:18;3207:706:8;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:8;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:8;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:8;;21127:2:18;3811:85:8;;;21109:21:18;21166:2;21146:18;;;21139:30;21205:34;21185:18;;;21178:62;-1:-1:-1;;;21256:18:18;;;21249:40;21306:19;;3811:85:8;20925:406:18;3861:223:12;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:12;;21538:2:18;5137:81:12;;;21520:21:18;21577:2;21557:18;;;21550:30;21616:34;21596:18;;;21589:62;-1:-1:-1;;;21667:18:18;;;21660:36;21713:19;;5137:81:12;21336:402:18;5137:81:12;-1:-1:-1;;;;;1465:19:12;;;5228:60;;;;-1:-1:-1;;;5228:60:12;;21945:2:18;5228:60:12;;;21927:21:18;21984:2;21964:18;;;21957:30;22023:31;22003:18;;;21996:59;22072:18;;5228:60:12;21743:353:18;5228:60:12;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:12;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:12:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:12;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:12;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:18;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:18;;562:42;;552:70;;618:1;615;608:12;633:127;694:10;689:3;685:20;682:1;675:31;725:4;722:1;715:15;749:4;746:1;739:15;765:257;837:4;831:11;;;869:17;;916:18;901:34;;937:22;;;898:62;895:88;;;963:18;;:::i;:::-;999:4;992:24;765:257;:::o;1027:253::-;1099:2;1093:9;1141:4;1129:17;;1176:18;1161:34;;1197:22;;;1158:62;1155:88;;;1223:18;;:::i;1285:253::-;1357:2;1351:9;1399:4;1387:17;;1434:18;1419:34;;1455:22;;;1416:62;1413:88;;;1481:18;;:::i;1543:275::-;1614:2;1608:9;1679:2;1660:13;;-1:-1:-1;;1656:27:18;1644:40;;1714:18;1699:34;;1735:22;;;1696:62;1693:88;;;1761:18;;:::i;:::-;1797:2;1790:22;1543:275;;-1:-1:-1;1543:275:18:o;1823:530::-;1865:5;1918:3;1911:4;1903:6;1899:17;1895:27;1885:55;;1936:1;1933;1926:12;1885:55;1972:6;1959:20;1998:18;1994:2;1991:26;1988:52;;;2020:18;;:::i;:::-;2064:55;2107:2;2088:13;;-1:-1:-1;;2084:27:18;2113:4;2080:38;2064:55;:::i;:::-;2144:2;2135:7;2128:19;2190:3;2183:4;2178:2;2170:6;2166:15;2162:26;2159:35;2156:55;;;2207:1;2204;2197:12;2156:55;2272:2;2265:4;2257:6;2253:17;2246:4;2237:7;2233:18;2220:55;2320:1;2295:16;;;2313:4;2291:27;2284:38;;;;2299:7;1823:530;-1:-1:-1;;;1823:530:18:o;2358:665::-;2453:6;2461;2469;2477;2530:3;2518:9;2509:7;2505:23;2501:33;2498:53;;;2547:1;2544;2537:12;2498:53;2586:9;2573:23;2605:31;2630:5;2605:31;:::i;:::-;2655:5;-1:-1:-1;2712:2:18;2697:18;;2684:32;2725:33;2684:32;2725:33;:::i;:::-;2777:7;-1:-1:-1;2831:2:18;2816:18;;2803:32;;-1:-1:-1;2886:2:18;2871:18;;2858:32;2913:18;2902:30;;2899:50;;;2945:1;2942;2935:12;2899:50;2968:49;3009:7;3000:6;2989:9;2985:22;2968:49;:::i;:::-;2958:59;;;2358:665;;;;;;;:::o;3235:255::-;3302:6;3355:2;3343:9;3334:7;3330:23;3326:32;3323:52;;;3371:1;3368;3361:12;3323:52;3410:9;3397:23;3429:31;3454:5;3429:31;:::i;3495:180::-;3554:6;3607:2;3595:9;3586:7;3582:23;3578:32;3575:52;;;3623:1;3620;3613:12;3575:52;-1:-1:-1;3646:23:18;;3495:180;-1:-1:-1;3495:180:18:o;3680:186::-;3743:4;3776:18;3768:6;3765:30;3762:56;;;3798:18;;:::i;:::-;-1:-1:-1;3843:1:18;3839:14;3855:4;3835:25;;3680:186::o;3871:1023::-;3929:5;3982:3;3975:4;3967:6;3963:17;3959:27;3949:55;;4000:1;3997;3990:12;3949:55;4036:6;4023:20;4062:4;4086:63;4102:46;4145:2;4102:46;:::i;:::-;4086:63;:::i;:::-;4183:15;;;4269:1;4265:10;;;;4253:23;;4249:32;;;4214:12;;;;4293:15;;;4290:35;;;4321:1;4318;4311:12;4290:35;4357:2;4349:6;4345:15;4369:496;4385:6;4380:3;4377:15;4369:496;;;4463:4;4457:3;4452;4448:13;4444:24;4441:114;;;4509:1;4538:2;4534;4527:14;4441:114;4581:22;;:::i;:::-;4644:3;4631:17;4661:33;4686:7;4661:33;:::i;:::-;4707:22;;4778:12;;;4765:26;4749:14;;;4742:50;4805:18;;4843:12;;;;4411:4;4402:14;4369:496;;;-1:-1:-1;4883:5:18;3871:1023;-1:-1:-1;;;;;;3871:1023:18:o;4899:1786::-;4951:5;4999:4;4987:9;4982:3;4978:19;4974:30;4971:50;;;5017:1;5014;5007:12;4971:50;5039:22;;:::i;:::-;5030:31;;5098:9;5085:23;5117:33;5142:7;5117:33;:::i;:::-;5159:22;;5200:2;5247:18;;;5234:32;5218:14;;;5211:56;5286:2;5324:18;;;5311:32;5362:18;5392:14;;;5389:34;;;5419:1;5416;5409:12;5389:34;5457:6;5446:9;5442:22;5432:32;;5502:3;5495:4;5491:2;5487:13;5483:23;5473:51;;5520:1;5517;5510:12;5473:51;5556:2;5543:16;5579:63;5595:46;5638:2;5595:46;:::i;5579:63::-;5676:15;;;5738:4;5777:11;;;5769:20;;5765:29;;;5707:12;;;;5664:3;5806:15;;;5803:35;;;5834:1;5831;5824:12;5803:35;5858:11;;;;5878:565;5894:6;5889:3;5886:15;5878:565;;;5970:2;5964:3;5959;5955:13;5951:22;5948:112;;;6014:1;6043:2;6039;6032:14;5948:112;6088:22;;:::i;:::-;6151:3;6138:17;6168:33;6193:7;6168:33;:::i;:::-;6214:24;;6289:12;;;6276:26;6258:16;;;6251:52;6354:12;;;6341:26;6323:16;;;6316:52;6381:20;;5911:12;;;;6421;;;;5878:565;;;6475:5;6470:2;6463:5;6459:14;6452:29;6534:2;6523:9;6519:18;6506:32;6490:48;;6563:2;6553:8;6550:16;6547:36;;;6579:1;6576;6569:12;6547:36;6615:63;6674:3;6663:8;6652:9;6648:24;6615:63;:::i;:::-;6610:2;6603:5;6599:14;6592:87;;;;;;;;;4899:1786;;;;:::o;6690:409::-;6781:6;6789;6842:2;6830:9;6821:7;6817:23;6813:32;6810:52;;;6858:1;6855;6848:12;6810:52;6894:9;6881:23;6871:33;;6955:2;6944:9;6940:18;6927:32;6982:18;6974:6;6971:30;6968:50;;;7014:1;7011;7004:12;6968:50;7037:56;7085:7;7076:6;7065:9;7061:22;7037:56;:::i;:::-;7027:66;;;6690:409;;;;;:::o;7312:484::-;7411:6;7419;7472:2;7460:9;7451:7;7447:23;7443:32;7440:52;;;7488:1;7485;7478:12;7440:52;7527:9;7514:23;7546:31;7571:5;7546:31;:::i;:::-;7596:5;-1:-1:-1;7652:2:18;7637:18;;7624:32;7679:18;7668:30;;7665:50;;;7711:1;7708;7701:12;7983:665;8037:5;8090:3;8083:4;8075:6;8071:17;8067:27;8057:55;;8108:1;8105;8098:12;8057:55;8144:6;8131:20;8170:4;8194:63;8210:46;8253:2;8210:46;:::i;8194:63::-;8291:15;;;8377:1;8373:10;;;;8361:23;;8357:32;;;8322:12;;;;8401:15;;;8398:35;;;8429:1;8426;8419:12;8398:35;8465:2;8457:6;8453:15;8477:142;8493:6;8488:3;8485:15;8477:142;;;8559:17;;8547:30;;8597:12;;;;8510;;8477:142;;8653:1071;8807:6;8815;8823;8831;8839;8892:3;8880:9;8871:7;8867:23;8863:33;8860:53;;;8909:1;8906;8899:12;8860:53;8948:9;8935:23;8967:31;8992:5;8967:31;:::i;:::-;9017:5;-1:-1:-1;9074:2:18;9059:18;;9046:32;9087:33;9046:32;9087:33;:::i;:::-;9139:7;-1:-1:-1;9197:2:18;9182:18;;9169:32;9220:18;9250:14;;;9247:34;;;9277:1;9274;9267:12;9247:34;9300:61;9353:7;9344:6;9333:9;9329:22;9300:61;:::i;:::-;9290:71;;9414:2;9403:9;9399:18;9386:32;9370:48;;9443:2;9433:8;9430:16;9427:36;;;9459:1;9456;9449:12;9427:36;9482:63;9537:7;9526:8;9515:9;9511:24;9482:63;:::i;:::-;9472:73;;9598:3;9587:9;9583:19;9570:33;9554:49;;9628:2;9618:8;9615:16;9612:36;;;9644:1;9641;9634:12;9612:36;;9667:51;9710:7;9699:8;9688:9;9684:24;9667:51;:::i;:::-;9657:61;;;8653:1071;;;;;;;;:::o;9729:734::-;9833:6;9841;9849;9857;9865;9918:3;9906:9;9897:7;9893:23;9889:33;9886:53;;;9935:1;9932;9925:12;9886:53;9974:9;9961:23;9993:31;10018:5;9993:31;:::i;:::-;10043:5;-1:-1:-1;10100:2:18;10085:18;;10072:32;10113:33;10072:32;10113:33;:::i;:::-;10165:7;-1:-1:-1;10219:2:18;10204:18;;10191:32;;-1:-1:-1;10270:2:18;10255:18;;10242:32;;-1:-1:-1;10325:3:18;10310:19;;10297:33;10353:18;10342:30;;10339:50;;;10385:1;10382;10375:12;10339:50;10408:49;10449:7;10440:6;10429:9;10425:22;10408:49;:::i;10720:355::-;10922:2;10904:21;;;10961:2;10941:18;;;10934:30;11000:33;10995:2;10980:18;;10973:61;11066:2;11051:18;;10720:355::o;11080:356::-;11282:2;11264:21;;;11301:18;;;11294:30;11360:34;11355:2;11340:18;;11333:62;11427:2;11412:18;;11080:356::o;11850:127::-;11911:10;11906:3;11902:20;11899:1;11892:31;11942:4;11939:1;11932:15;11966:4;11963:1;11956:15;11982:125;12022:4;12050:1;12047;12044:8;12041:34;;;12055:18;;:::i;:::-;-1:-1:-1;12092:9:18;;11982:125::o;12470:340::-;12672:2;12654:21;;;12711:2;12691:18;;;12684:30;-1:-1:-1;;;12745:2:18;12730:18;;12723:46;12801:2;12786:18;;12470:340::o;12815:413::-;13017:2;12999:21;;;13056:2;13036:18;;;13029:30;13095:34;13090:2;13075:18;;13068:62;-1:-1:-1;;;13161:2:18;13146:18;;13139:47;13218:3;13203:19;;12815:413::o;13657:484::-;13859:2;13841:21;;;13898:2;13878:18;;;13871:30;13937:34;13932:2;13917:18;;13910:62;14008:34;14003:2;13988:18;;13981:62;-1:-1:-1;;;14074:3:18;14059:19;;14052:47;14131:3;14116:19;;13657:484::o;14549:127::-;14610:10;14605:3;14601:20;14598:1;14591:31;14641:4;14638:1;14631:15;14665:4;14662:1;14655:15;14681:135;14720:3;-1:-1:-1;;14741:17:18;;14738:43;;;14761:18;;:::i;:::-;-1:-1:-1;14808:1:18;14797:13;;14681:135::o;14821:128::-;14861:3;14892:1;14888:6;14885:1;14882:13;14879:39;;;14898:18;;:::i;:::-;-1:-1:-1;14934:9:18;;14821:128::o;14954:552::-;15011:3;15049:5;15043:12;15076:6;15071:3;15064:19;15102:4;15131:2;15126:3;15122:12;15115:19;;15168:2;15161:5;15157:14;15189:1;15199:282;15213:6;15210:1;15207:13;15199:282;;;15272:13;;15314:9;;-1:-1:-1;;;;;15310:35:18;15298:48;;15386:11;;15380:18;15366:12;;;15359:40;15428:4;15419:14;;;;15456:15;;;;15342:1;15228:9;15199:282;;;-1:-1:-1;15497:3:18;;14954:552;-1:-1:-1;;;;;14954:552:18:o;15511:1275::-;15649:4;15678:2;15707;15696:9;15689:21;15748:3;15737:9;15733:19;15788:1;15784;15779:3;15775:11;15771:19;15845:2;15836:6;15830:13;15826:22;15821:2;15810:9;15806:18;15799:50;15886:2;15878:6;15874:15;15868:22;15909:2;15947;15942;15931:9;15927:18;15920:30;15997:2;15989:6;15985:15;15979:22;15959:42;;16020:2;16058:4;16053:2;16042:9;16038:18;16031:32;16083:6;16118:12;16112:19;16155:6;16147;16140:22;16193:3;16182:9;16178:19;16171:26;;16238:2;16224:12;16220:21;16206:35;;16259:1;16250:10;;16269:316;16283:6;16280:1;16277:13;16269:316;;;16342:13;;16384:9;;16380:18;;16368:31;;16439:11;;;16433:18;16419:12;;;16412:40;16492:11;;16486:18;16472:12;;;16465:40;16560:15;;;;16305:1;16298:9;;;;;16525:12;;;;16269:316;;;-1:-1:-1;16622:15:18;;;16616:22;16680:19;;;-1:-1:-1;;16676:33:18;16669:4;16654:20;;16647:63;16616:22;-1:-1:-1;16727:53:18;16684:3;16616:22;16727:53;:::i;:::-;16719:61;15511:1275;-1:-1:-1;;;;;;;;;;15511:1275:18:o;20643:277::-;20710:6;20763:2;20751:9;20742:7;20738:23;20734:32;20731:52;;;20779:1;20776;20769:12;20731:52;20811:9;20805:16;20864:5;20857:13;20850:21;20843:5;20840:32;20830:60;;20886:1;20883;20876:12;22101:258;22173:1;22183:113;22197:6;22194:1;22191:13;22183:113;;;22273:11;;;22267:18;22254:11;;;22247:39;22219:2;22212:10;22183:113;;;22314:6;22311:1;22308:13;22305:48;;;-1:-1:-1;;22349:1:18;22331:16;;22324:27;22101:258::o;22364:274::-;22493:3;22531:6;22525:13;22547:53;22593:6;22588:3;22581:4;22573:6;22569:17;22547:53;:::i;:::-;22616:16;;;;;22364:274;-1:-1:-1;;22364:274:18:o;22643:383::-;22792:2;22781:9;22774:21;22755:4;22824:6;22818:13;22867:6;22862:2;22851:9;22847:18;22840:34;22883:66;22942:6;22937:2;22926:9;22922:18;22917:2;22909:6;22905:15;22883:66;:::i;:::-;23010:2;22989:15;-1:-1:-1;;22985:29:18;22970:45;;;;23017:2;22966:54;;22643:383;-1:-1:-1;;22643:383:18:o"
            },
            "methodIdentifiers": {
              "acceptSwap(uint256)": "1bf33004",
              "cancelSwap(uint256)": "54d6a2b7",
              "fee()": "ddca3f43",
              "initiateSwap(uint256,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))": "7cb1774d",
              "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
              "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "proposeSwap(address,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))": "b5cbcb88",
              "renounceOwnership()": "715018a6",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a",
              "updateAppFee(uint256)": "52492815",
              "withdrawFees(address)": "164e68de"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialAppFee\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"contractOwnerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"AppFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cancelledBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"}],\"name\":\"SwapCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"}],\"name\":\"SwapClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"native\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Nft[]\",\"name\":\"nfts\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Coin[]\",\"name\":\"coins\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Tradescrow.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"native\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Nft[]\",\"name\":\"nfts\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Coin[]\",\"name\":\"coins\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Tradescrow.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"SwapProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"}],\"name\":\"acceptSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"}],\"name\":\"cancelSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"native\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Nft[]\",\"name\":\"nfts\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Coin[]\",\"name\":\"coins\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Tradescrow.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"initiateSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"native\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Nft[]\",\"name\":\"nfts\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Tradescrow.Coin[]\",\"name\":\"coins\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Tradescrow.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"proposeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateAppFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@DirtyCajunRice\",\"kind\":\"dev\",\"methods\":{\"acceptSwap(uint256)\":{\"details\":\"Step 3: Swap initiator accepts the proposed swap from the target, which transfers      all assets to their intended parties from this contract. This can only be called by      the initiator of the swap, and only when the target has proposed their offer\",\"params\":{\"swapId\":\"ID of the swap that the initiator wants to execute\"}},\"cancelSwap(uint256)\":{\"details\":\"Reverts all prior deposits, sending the assets back to their original owners\",\"params\":{\"swapId\":\"ID of the swap that the swap participants want to cancel\"}},\"initiateSwap(uint256,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))\":{\"details\":\"Step 2: Proposed user agrees to the the assets offered from the initiating      party by responding with their offer that contains any combination of      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed      assets are transferred to this contract and kept there until the swap is either      accepted or cancelled. This can only be called by a user with a pending swap.\",\"params\":{\"offer\":\"Struct that defines the proposed response offer\",\"swapId\":\"ID of the swap that the target user is invited to participate in\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proposeSwap(address,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))\":{\"details\":\"Step 1: User proposes a swap to another address that contains any combination of      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed      assets are transferred to this contract and kept there until the swap is either      accepted or cancelled.\",\"params\":{\"offer\":\"Struct that defines the proposed offer\",\"target\":\"Address that the initiating user wants to trade with\"},\"returns\":{\"_0\":\"swapId ID of the new swap\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAppFee(uint256)\":{\"details\":\"Can only be called by the contract owner\",\"params\":{\"newFee\":\"Fee in wei\"}},\"withdrawFees(address)\":{\"details\":\"Can only be called by the contract owner, and always leaves 1e18 native for gas\",\"params\":{\"recipient\":\"Ox address of the recipient\"}}},\"title\":\"Trade & Escrow v1.2.1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSwap(uint256)\":{\"notice\":\"Accept the proposed swap offer sent from the target\"},\"cancelSwap(uint256)\":{\"notice\":\"Cancel the incomplete swap, returning all assets to their original owners\"},\"initiateSwap(uint256,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))\":{\"notice\":\"Initiate a response offer to a swap proposed to you and pay the app fee\"},\"proposeSwap(address,(address,uint256,(address,uint256,uint256)[],(address,uint256)[]))\":{\"notice\":\"Propose a new swap and pay the app fee\"},\"updateAppFee(uint256)\":{\"notice\":\"Update the fee charged to each user for a swap\"},\"withdrawFees(address)\":{\"notice\":\"Withdraw accrued fees from the contract to an address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tradescrow.sol\":\"Tradescrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Tradescrow.sol\":{\"keccak256\":\"0xf007de1b3809db38dc28010fdac40fab69f6b3a42d3fa6b1d55541e557ea7f03\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317829258072e13178b8bede7a111c381a467337b1dda3ad1fc117c626ae52bf\",\"dweb:/ipfs/QmT6k2Tdv8ozWsnL8bLZHiFCzSNfKYjQna3g5rUMQZytRi\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1264
            ],
            "Ownable": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 1265,
              "src": "112:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1264,
                    "src": "668:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "144:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104,
                1264
              ],
              "name": "Ownable",
              "nameLocation": "657:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "698:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "682:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "717:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "754:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "738:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "785:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "769:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:57:0"
                  },
                  "src": "711:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "911:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1254,
                                "src": "940:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "940:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "921:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "908:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:0:0"
                  },
                  "scope": 104,
                  "src": "897:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1091:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1101:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "966:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1045:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1082:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1081:9:0"
                  },
                  "scope": 104,
                  "src": "1036:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1230:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1248:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1248:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1254,
                                  "src": "1259:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1259:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1248:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1318:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1127:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nameLocation": "1218:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:0"
                  },
                  "src": "1209:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1759:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1751:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1751:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1332:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1712:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1712:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1677:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1694:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:0:0"
                  },
                  "scope": 104,
                  "src": "1668:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1988:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "2006:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2026:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2018:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2018:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2018:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2006:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1998:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2100:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2081:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2081:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1775:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1978:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1978:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1927:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1953:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1945:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1988:0:0"
                  },
                  "scope": 104,
                  "src": "1918:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2333:124:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2351:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2343:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2343:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2362:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2343:25:0"
                      },
                      {
                        "expression": {
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 93,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 94,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2387:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2378:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2378:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2431:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 97,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2410:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "EmitStatement",
                        "src": "2405:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "2122:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2279:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2306:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2298:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2297:18:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2333:0:0"
                  },
                  "scope": 104,
                  "src": "2270:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "639:1820:0",
              "usedErrors": []
            }
          ],
          "src": "87:2373:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1264
            ],
            "Pausable": [
              196
            ]
          },
          "id": 197,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 106,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "90:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 107,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 197,
              "sourceUnit": 1265,
              "src": "115:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 109,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1264,
                    "src": "617:7:1"
                  },
                  "id": 110,
                  "nodeType": "InheritanceSpecifier",
                  "src": "617:7:1"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 108,
                "nodeType": "StructuredDocumentation",
                "src": "147:439:1",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 196,
              "linearizedBaseContracts": [
                196,
                1264
              ],
              "name": "Pausable",
              "nameLocation": "605:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 111,
                    "nodeType": "StructuredDocumentation",
                    "src": "631:73:1",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "id": 115,
                  "name": "Paused",
                  "nameLocation": "715:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "730:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "722:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "721:17:1"
                  },
                  "src": "709:30:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 116,
                    "nodeType": "StructuredDocumentation",
                    "src": "745:70:1",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "id": 120,
                  "name": "Unpaused",
                  "nameLocation": "826:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "843:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "835:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "835:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "834:17:1"
                  },
                  "src": "820:32:1"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "871:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "858:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "971:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 126,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "981:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "991:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "981:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "981:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 123,
                    "nodeType": "StructuredDocumentation",
                    "src": "885:67:1",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 131,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "968:2:1"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "971:0:1"
                  },
                  "scope": 196,
                  "src": "957:46:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "1151:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 137,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1168:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 136,
                        "id": 138,
                        "nodeType": "Return",
                        "src": "1161:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 132,
                    "nodeType": "StructuredDocumentation",
                    "src": "1009:84:1",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 140,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1107:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1113:2:1"
                  },
                  "returnParameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "1145:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1144:6:1"
                  },
                  "scope": 196,
                  "src": "1098:84:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "1393:66:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1411:9:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 144,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "1412:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1412:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1422:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1403:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1403:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "1403:38:1"
                      },
                      {
                        "id": 150,
                        "nodeType": "PlaceholderStatement",
                        "src": "1451:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 141,
                    "nodeType": "StructuredDocumentation",
                    "src": "1188:175:1",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 152,
                  "name": "whenNotPaused",
                  "nameLocation": "1377:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1390:2:1"
                  },
                  "src": "1368:91:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1659:69:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 156,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "1677:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1677:8:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1687:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1669:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1669:41:1"
                      },
                      {
                        "id": 161,
                        "nodeType": "PlaceholderStatement",
                        "src": "1720:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "1465:167:1",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 163,
                  "name": "whenPaused",
                  "nameLocation": "1646:10:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1656:2:1"
                  },
                  "src": "1637:91:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "1912:66:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 169,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1922:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1932:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1922:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1922:14:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 174,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1254,
                                "src": "1958:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1958:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 173,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1951:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1951:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 177,
                        "nodeType": "EmitStatement",
                        "src": "1946:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 164,
                    "nodeType": "StructuredDocumentation",
                    "src": "1734:124:1",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 179,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 167,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 166,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "1898:13:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1898:13:1"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "1872:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1878:2:1"
                  },
                  "returnParameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1912:0:1"
                  },
                  "scope": 196,
                  "src": "1863:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "2158:69:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 185,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "2168:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2178:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2168:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "2168:15:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 190,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1254,
                                "src": "2207:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2207:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 189,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "2198:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2198:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "EmitStatement",
                        "src": "2193:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 180,
                    "nodeType": "StructuredDocumentation",
                    "src": "1984:121:1",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 195,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 183,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 182,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 163,
                        "src": "2147:10:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2147:10:1"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2119:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2127:2:1"
                  },
                  "returnParameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2158:0:1"
                  },
                  "scope": 196,
                  "src": "2110:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 197,
              "src": "587:1642:1",
              "usedErrors": []
            }
          ],
          "src": "90:2140:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              236
            ]
          },
          "id": 237,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 198,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "97:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 199,
                "nodeType": "StructuredDocumentation",
                "src": "122:750:2",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 236,
              "linearizedBaseContracts": [
                236
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "891:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 202,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1686:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1661:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1701:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 205,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1733:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1708:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1744:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1768:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1752:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "1796:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 210,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "1806:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 211,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "1816:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1806:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "1806:22:2"
                      }
                    ]
                  },
                  "id": 215,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:2"
                  },
                  "returnParameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:0:2"
                  },
                  "scope": 236,
                  "src": "1782:53:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "2236:421:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 219,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "2325:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 220,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "2336:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2325:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2346:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 218,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2317:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "2317:63:2"
                      },
                      {
                        "expression": {
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 225,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2455:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 226,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2465:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2455:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 228,
                        "nodeType": "ExpressionStatement",
                        "src": "2455:18:2"
                      },
                      {
                        "id": 229,
                        "nodeType": "PlaceholderStatement",
                        "src": "2484:1:2"
                      },
                      {
                        "expression": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 230,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2628:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 231,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "2638:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2628:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "2628:22:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "1841:366:2",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 235,
                  "name": "nonReentrant",
                  "nameLocation": "2221:12:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2233:2:2"
                  },
                  "src": "2212:445:2",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 237,
              "src": "873:1786:2",
              "usedErrors": []
            }
          ],
          "src": "97:2563:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              358
            ],
            "IERC165": [
              1374
            ]
          },
          "id": 359,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 238,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "95:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 239,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 359,
              "sourceUnit": 1375,
              "src": "120:47:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 241,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1374,
                    "src": "357:7:3"
                  },
                  "id": 242,
                  "nodeType": "InheritanceSpecifier",
                  "src": "357:7:3"
                }
              ],
              "canonicalName": "IERC1155",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 240,
                "nodeType": "StructuredDocumentation",
                "src": "169:165:3",
                "text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
              },
              "fullyImplemented": false,
              "id": 358,
              "linearizedBaseContracts": [
                358,
                1374
              ],
              "name": "IERC1155",
              "nameLocation": "345:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "371:121:3",
                    "text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
                  },
                  "id": 255,
                  "name": "TransferSingle",
                  "nameLocation": "503:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "534:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "518:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "518:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "560:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "544:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "544:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "582:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "566:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 251,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "594:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "586:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 253,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "606:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "598:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "517:95:3"
                  },
                  "src": "497:116:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 256,
                    "nodeType": "StructuredDocumentation",
                    "src": "619:144:3",
                    "text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
                  },
                  "id": 270,
                  "name": "TransferBatch",
                  "nameLocation": "774:13:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "813:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "797:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "847:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "831:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "831:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 262,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "877:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "861:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "899:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "889:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 263,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "889:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 264,
                          "nodeType": "ArrayTypeName",
                          "src": "889:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "922:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "912:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 266,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "912:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 267,
                          "nodeType": "ArrayTypeName",
                          "src": "912:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:147:3"
                  },
                  "src": "768:167:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 271,
                    "nodeType": "StructuredDocumentation",
                    "src": "941:147:3",
                    "text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
                  },
                  "id": 279,
                  "name": "ApprovalForAll",
                  "nameLocation": "1099:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 273,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1130:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "1114:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 275,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1155:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "1139:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "1170:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "1165:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1165:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:66:3"
                  },
                  "src": "1093:87:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "1186:343:3",
                    "text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
                  },
                  "id": 286,
                  "name": "URI",
                  "nameLocation": "1540:3:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1551:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1544:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1544:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 284,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1574:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "1558:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1558:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1543:34:3"
                  },
                  "src": "1534:44:3"
                },
                {
                  "documentation": {
                    "id": 287,
                    "nodeType": "StructuredDocumentation",
                    "src": "1584:173:3",
                    "text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "functionSelector": "00fdd58e",
                  "id": 296,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "1771:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1789:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "1781:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1781:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1806:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "1798:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1780:29:3"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "1833:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1833:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1832:9:3"
                  },
                  "scope": 358,
                  "src": "1762:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "1848:188:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
                  },
                  "functionSelector": "4e1273f4",
                  "id": 309,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfBatch",
                  "nameLocation": "2050:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "2084:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "2065:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 298,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2065:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 299,
                          "nodeType": "ArrayTypeName",
                          "src": "2065:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2113:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "2094:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 301,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2094:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 302,
                          "nodeType": "ArrayTypeName",
                          "src": "2094:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2064:53:3"
                  },
                  "returnParameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "2165:16:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 305,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2165:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 306,
                          "nodeType": "ArrayTypeName",
                          "src": "2165:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2164:18:3"
                  },
                  "scope": 358,
                  "src": "2041:142:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "2189:248:3",
                    "text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
                  },
                  "functionSelector": "a22cb465",
                  "id": 317,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "2451:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2477:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "2469:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "2492:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "2487:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:33:3"
                  },
                  "returnParameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2510:0:3"
                  },
                  "scope": 358,
                  "src": "2442:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "2517:135:3",
                    "text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
                  },
                  "functionSelector": "e985e9c5",
                  "id": 327,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "2666:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2691:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "2683:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2708:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "2700:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2682:35:3"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "2741:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2741:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2740:6:3"
                  },
                  "scope": 358,
                  "src": "2657:90:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 328,
                    "nodeType": "StructuredDocumentation",
                    "src": "2753:559:3",
                    "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
                  },
                  "functionSelector": "f242432a",
                  "id": 341,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "3326:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3360:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "3352:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3352:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3382:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "3374:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3402:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "3394:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3394:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3422:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "3414:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3414:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3453:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "3438:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3438:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3342:121:3"
                  },
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3472:0:3"
                  },
                  "scope": 358,
                  "src": "3317:156:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 342,
                    "nodeType": "StructuredDocumentation",
                    "src": "3479:390:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
                  },
                  "functionSelector": "2eb2c2d6",
                  "id": 357,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeBatchTransferFrom",
                  "nameLocation": "3883:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3922:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3914:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3914:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3944:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3936:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "3975:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3956:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 347,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3956:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 348,
                          "nodeType": "ArrayTypeName",
                          "src": "3956:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "4007:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3988:26:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 350,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3988:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 351,
                          "nodeType": "ArrayTypeName",
                          "src": "3988:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4039:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "4024:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3904:145:3"
                  },
                  "returnParameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4058:0:3"
                  },
                  "scope": 358,
                  "src": "3874:185:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 359,
              "src": "335:3726:3",
              "usedErrors": []
            }
          ],
          "src": "95:3967:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
          "exportedSymbols": {
            "IERC1155Receiver": [
              399
            ],
            "IERC165": [
              1374
            ]
          },
          "id": 400,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 360,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "118:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 361,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 400,
              "sourceUnit": 1375,
              "src": "143:47:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 363,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1374,
                    "src": "262:7:4"
                  },
                  "id": 364,
                  "nodeType": "InheritanceSpecifier",
                  "src": "262:7:4"
                }
              ],
              "canonicalName": "IERC1155Receiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 362,
                "nodeType": "StructuredDocumentation",
                "src": "192:39:4",
                "text": " @dev _Available since v3.1._"
              },
              "fullyImplemented": false,
              "id": 399,
              "linearizedBaseContracts": [
                399,
                1374
              ],
              "name": "IERC1155Receiver",
              "nameLocation": "242:16:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 365,
                    "nodeType": "StructuredDocumentation",
                    "src": "276:826:4",
                    "text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
                  },
                  "functionSelector": "f23a6e61",
                  "id": 380,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155Received",
                  "nameLocation": "1116:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1151:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1143:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1143:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1177:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1169:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1169:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1199:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1191:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1191:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1219:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1211:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1249:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1234:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1133:126:4"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1278:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1278:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1277:8:4"
                  },
                  "scope": 399,
                  "src": "1107:179:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 381,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:994:4",
                    "text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
                  },
                  "functionSelector": "bc197c81",
                  "id": 398,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155BatchReceived",
                  "nameLocation": "2300:22:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 383,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2340:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2332:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2332:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2366:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2358:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2358:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2399:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2380:22:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 386,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2380:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 387,
                          "nodeType": "ArrayTypeName",
                          "src": "2380:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "2431:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2412:25:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 389,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2412:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 390,
                          "nodeType": "ArrayTypeName",
                          "src": "2412:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2462:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2447:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2447:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2322:150:4"
                  },
                  "returnParameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2491:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2491:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2490:8:4"
                  },
                  "scope": 399,
                  "src": "2291:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 400,
              "src": "232:2269:4",
              "usedErrors": []
            }
          ],
          "src": "118:2384:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
          "exportedSymbols": {
            "ERC1155Holder": [
              450
            ],
            "ERC1155Receiver": [
              484
            ],
            "ERC165": [
              1362
            ],
            "IERC1155Receiver": [
              399
            ],
            "IERC165": [
              1374
            ]
          },
          "id": 451,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 401,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "121:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
              "file": "./ERC1155Receiver.sol",
              "id": 402,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 451,
              "sourceUnit": 485,
              "src": "146:31:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 404,
                    "name": "ERC1155Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 484,
                    "src": "477:15:5"
                  },
                  "id": 405,
                  "nodeType": "InheritanceSpecifier",
                  "src": "477:15:5"
                }
              ],
              "canonicalName": "ERC1155Holder",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 403,
                "nodeType": "StructuredDocumentation",
                "src": "179:271:5",
                "text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
              },
              "fullyImplemented": true,
              "id": 450,
              "linearizedBaseContracts": [
                450,
                484,
                399,
                1362,
                1374
              ],
              "name": "ERC1155Holder",
              "nameLocation": "460:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    380
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "663:55:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 421,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "680:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155Holder_$450",
                                "typeString": "contract ERC1155Holder"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 426,
                            "src": "680:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "680:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 420,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "673:38:5"
                      }
                    ]
                  },
                  "functionSelector": "f23a6e61",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155Received",
                  "nameLocation": "508:17:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 417,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "637:8:5"
                  },
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "535:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "535:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "552:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "552:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "569:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "569:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "586:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "603:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "525:96:5"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "655:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "655:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "654:8:5"
                  },
                  "scope": 450,
                  "src": "499:219:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    398
                  ],
                  "body": {
                    "id": 448,
                    "nodeType": "Block",
                    "src": "911:60:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 444,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "928:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155Holder_$450",
                                "typeString": "contract ERC1155Holder"
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 449,
                            "src": "928:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "928:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 443,
                        "id": 447,
                        "nodeType": "Return",
                        "src": "921:43:5"
                      }
                    ]
                  },
                  "functionSelector": "bc197c81",
                  "id": 449,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC1155BatchReceived",
                  "nameLocation": "733:22:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 440,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "885:8:5"
                  },
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "765:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "765:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "782:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "782:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "799:16:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 431,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "799:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 432,
                          "nodeType": "ArrayTypeName",
                          "src": "799:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "825:16:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 434,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "825:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 435,
                          "nodeType": "ArrayTypeName",
                          "src": "825:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "851:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "755:114:5"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "903:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "902:8:5"
                  },
                  "scope": 450,
                  "src": "724:247:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 451,
              "src": "451:522:5",
              "usedErrors": []
            }
          ],
          "src": "121:853:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
          "exportedSymbols": {
            "ERC1155Receiver": [
              484
            ],
            "ERC165": [
              1362
            ],
            "IERC1155Receiver": [
              399
            ],
            "IERC165": [
              1374
            ]
          },
          "id": 485,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 452,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
              "file": "../IERC1155Receiver.sol",
              "id": 453,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 485,
              "sourceUnit": 400,
              "src": "133:33:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../../../utils/introspection/ERC165.sol",
              "id": 454,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 485,
              "sourceUnit": 1363,
              "src": "167:49:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 456,
                    "name": "ERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1362,
                    "src": "295:6:6"
                  },
                  "id": 457,
                  "nodeType": "InheritanceSpecifier",
                  "src": "295:6:6"
                },
                {
                  "baseName": {
                    "id": 458,
                    "name": "IERC1155Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 399,
                    "src": "303:16:6"
                  },
                  "id": 459,
                  "nodeType": "InheritanceSpecifier",
                  "src": "303:16:6"
                }
              ],
              "canonicalName": "ERC1155Receiver",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 455,
                "nodeType": "StructuredDocumentation",
                "src": "218:39:6",
                "text": " @dev _Available since v3.1._"
              },
              "fullyImplemented": false,
              "id": 484,
              "linearizedBaseContracts": [
                484,
                399,
                1362,
                1374
              ],
              "name": "ERC1155Receiver",
              "nameLocation": "276:15:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1361,
                    1373
                  ],
                  "body": {
                    "id": 482,
                    "nodeType": "Block",
                    "src": "495:113:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 470,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "512:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 472,
                                    "name": "IERC1155Receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "532:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$399_$",
                                      "typeString": "type(contract IERC1155Receiver)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$399_$",
                                      "typeString": "type(contract IERC1155Receiver)"
                                    }
                                  ],
                                  "id": 471,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "527:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "527:22:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$399",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "527:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "512:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 478,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 462,
                                "src": "589:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 476,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "565:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$484_$",
                                  "typeString": "type(contract super ERC1155Receiver)"
                                }
                              },
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1361,
                              "src": "565:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "565:36:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "512:89:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 469,
                        "id": 481,
                        "nodeType": "Return",
                        "src": "505:96:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 460,
                    "nodeType": "StructuredDocumentation",
                    "src": "326:56:6",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 483,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "396:17:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 466,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 464,
                        "name": "ERC165",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1362,
                        "src": "463:6:6"
                      },
                      {
                        "id": 465,
                        "name": "IERC165",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1374,
                        "src": "471:7:6"
                      }
                    ],
                    "src": "454:25:6"
                  },
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "421:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "414:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "414:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "413:20:6"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "489:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "489:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "488:6:6"
                  },
                  "scope": 484,
                  "src": "387:221:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 485,
              "src": "258:352:6",
              "usedErrors": []
            }
          ],
          "src": "108:503:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              562
            ]
          },
          "id": 563,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 486,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 487,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:7",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 562,
              "linearizedBaseContracts": [
                562
              ],
              "name": "IERC20",
              "nameLocation": "212:6:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 488,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:66:7",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 493,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "305:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "316:2:7"
                  },
                  "returnParameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "342:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "342:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:9:7"
                  },
                  "scope": 562,
                  "src": "296:55:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 494,
                    "nodeType": "StructuredDocumentation",
                    "src": "357:72:7",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "443:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "461:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "453:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "453:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "452:17:7"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "493:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "492:9:7"
                  },
                  "scope": 562,
                  "src": "434:68:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 502,
                    "nodeType": "StructuredDocumentation",
                    "src": "508:202:7",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 511,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "724:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "741:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "733:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "753:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "745:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:28:7"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "779:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:6:7"
                  },
                  "scope": 562,
                  "src": "715:70:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 512,
                    "nodeType": "StructuredDocumentation",
                    "src": "791:264:7",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 521,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1069:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1087:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "1079:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1079:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1102:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "1094:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1094:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:32:7"
                  },
                  "returnParameters": {
                    "id": 520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "1134:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1134:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1133:9:7"
                  },
                  "scope": 562,
                  "src": "1060:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 522,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:642:7",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 531,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1805:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1821:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 531,
                        "src": "1813:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1838:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 531,
                        "src": "1830:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1830:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:33:7"
                  },
                  "returnParameters": {
                    "id": 530,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 531,
                        "src": "1864:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1864:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:6:7"
                  },
                  "scope": 562,
                  "src": "1796:74:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 532,
                    "nodeType": "StructuredDocumentation",
                    "src": "1876:287:7",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 543,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2177:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2207:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "2199:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2199:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2229:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "2221:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2249:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "2241:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:72:7"
                  },
                  "returnParameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "2280:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2279:6:7"
                  },
                  "scope": 562,
                  "src": "2168:118:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 544,
                    "nodeType": "StructuredDocumentation",
                    "src": "2292:158:7",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 552,
                  "name": "Transfer",
                  "nameLocation": "2461:8:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2486:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2470:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2470:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 548,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2508:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2492:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2492:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 550,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2520:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "2512:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2469:57:7"
                  },
                  "src": "2455:72:7"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 553,
                    "nodeType": "StructuredDocumentation",
                    "src": "2533:148:7",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 561,
                  "name": "Approval",
                  "nameLocation": "2692:8:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 555,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2717:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "2701:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2701:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 557,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2740:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "2724:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2724:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 559,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2757:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "2749:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2749:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2700:63:7"
                  },
                  "src": "2686:78:7"
                }
              ],
              "scope": 563,
              "src": "202:2564:7",
              "usedErrors": []
            }
          ],
          "src": "106:2661:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "Address": [
              1242
            ],
            "IERC20": [
              562
            ],
            "SafeERC20": [
              786
            ]
          },
          "id": 787,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 564,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:23:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 565,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 787,
              "sourceUnit": 563,
              "src": "125:23:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../../utils/Address.sol",
              "id": 566,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 787,
              "sourceUnit": 1243,
              "src": "149:36:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 567,
                "nodeType": "StructuredDocumentation",
                "src": "187:457:8",
                "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 786,
              "linearizedBaseContracts": [
                786
              ],
              "name": "SafeERC20",
              "nameLocation": "653:9:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 570,
                  "libraryName": {
                    "id": 568,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1242,
                    "src": "675:7:8"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "669:26:8",
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "803:103:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 581,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 573,
                              "src": "833:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 584,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "863:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$562",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 511,
                                    "src": "863:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "863:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 587,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 575,
                                  "src": "888:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 588,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "892:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 582,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "840:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "840:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "840:58:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 580,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "813:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "813:86:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "813:86:8"
                      }
                    ]
                  },
                  "id": 593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "710:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "739:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "732:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 572,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 571,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "732:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "732:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "762:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "754:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "782:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "774:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "774:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "722:71:8"
                  },
                  "returnParameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "803:0:8"
                  },
                  "scope": 786,
                  "src": "701:205:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "1040:113:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 606,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "1070:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 609,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 596,
                                      "src": "1100:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$562",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 610,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 543,
                                    "src": "1100:18:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1100:27:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 612,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 598,
                                  "src": "1129:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 613,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "1135:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 614,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 602,
                                  "src": "1139:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 607,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1077:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1077:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1077:68:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 605,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "1050:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1050:96:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "1050:96:8"
                      }
                    ]
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "921:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "954:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "947:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 595,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 594,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "947:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "947:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "977:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "969:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "999:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "991:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "991:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1019:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "1011:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1011:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "937:93:8"
                  },
                  "returnParameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1040:0:8"
                  },
                  "scope": 786,
                  "src": "912:241:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 662,
                    "nodeType": "Block",
                    "src": "1519:497:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 631,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 627,
                                      "src": "1768:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 632,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1777:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1768:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 634,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1767:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 639,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "1808:4:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafeERC20_$786",
                                                "typeString": "library SafeERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SafeERC20_$786",
                                                "typeString": "library SafeERC20"
                                              }
                                            ],
                                            "id": 638,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1800:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 637,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1800:7:8",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 640,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1800:13:8",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 641,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 625,
                                          "src": "1815:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 635,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 623,
                                          "src": "1784:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$562",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 636,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 521,
                                        "src": "1784:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 642,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1784:39:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1827:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1784:44:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 645,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1783:46:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1767:62:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                              "id": 647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1843:56:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              },
                              "value": "SafeERC20: approve from non-zero to non-zero allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              }
                            ],
                            "id": 630,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1746:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1746:163:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "1746:163:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 651,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "1939:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 654,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 623,
                                      "src": "1969:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$562",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 531,
                                    "src": "1969:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1969:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 657,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 625,
                                  "src": "1993:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 658,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 627,
                                  "src": "2002:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 652,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1946:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1946:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1946:62:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 650,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "1919:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1919:90:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "1919:90:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:249:8",
                    "text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
                  },
                  "id": 663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nameLocation": "1422:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1450:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "1443:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 621,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "1443:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "1443:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1473:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "1465:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1465:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1498:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "1490:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1490:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1433:76:8"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1519:0:8"
                  },
                  "scope": 786,
                  "src": "1413:603:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "2138:194:8",
                    "statements": [
                      {
                        "assignments": [
                          674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 674,
                            "mutability": "mutable",
                            "name": "newAllowance",
                            "nameLocation": "2156:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 698,
                            "src": "2148:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2148:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 685,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 679,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2195:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SafeERC20_$786",
                                      "typeString": "library SafeERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SafeERC20_$786",
                                      "typeString": "library SafeERC20"
                                    }
                                  ],
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2187:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 677,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2187:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2187:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 681,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 668,
                                "src": "2202:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 675,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2171:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$562",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 521,
                              "src": "2171:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2171:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 683,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "2213:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2171:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2148:70:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 687,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2248:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 690,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 666,
                                      "src": "2278:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$562",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 531,
                                    "src": "2278:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2278:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 693,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "2302:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 694,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 674,
                                  "src": "2311:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 688,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2255:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2255:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2255:69:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$562",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 686,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "2228:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2228:97:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 697,
                        "nodeType": "ExpressionStatement",
                        "src": "2228:97:8"
                      }
                    ]
                  },
                  "id": 699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "2031:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2069:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "2062:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 665,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 664,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "2062:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "2062:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2092:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "2084:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2084:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2117:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 699,
                        "src": "2109:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2109:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2052:76:8"
                  },
                  "returnParameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2138:0:8"
                  },
                  "scope": 786,
                  "src": "2022:310:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "2454:370:8",
                    "statements": [
                      {
                        "id": 745,
                        "nodeType": "UncheckedBlock",
                        "src": "2464:354:8",
                        "statements": [
                          {
                            "assignments": [
                              710
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 710,
                                "mutability": "mutable",
                                "name": "oldAllowance",
                                "nameLocation": "2496:12:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 745,
                                "src": "2488:20:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 709,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2488:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 719,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 715,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2535:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$786",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$786",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2527:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 713,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2527:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2527:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 717,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 704,
                                  "src": "2542:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 711,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "2511:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$562",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 521,
                                "src": "2511:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2511:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2488:62:8"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 721,
                                    "name": "oldAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 710,
                                    "src": "2572:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 722,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 706,
                                    "src": "2588:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2572:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2595:43:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  },
                                  "value": "SafeERC20: decreased allowance below zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                    "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                                  }
                                ],
                                "id": 720,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "2564:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2564:75:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 726,
                            "nodeType": "ExpressionStatement",
                            "src": "2564:75:8"
                          },
                          {
                            "assignments": [
                              728
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 728,
                                "mutability": "mutable",
                                "name": "newAllowance",
                                "nameLocation": "2661:12:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 745,
                                "src": "2653:20:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 727,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2653:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 732,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 729,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 710,
                                "src": "2676:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 730,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 706,
                                "src": "2691:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2676:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2653:43:8"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 734,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "2730:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$562",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 737,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 702,
                                          "src": "2760:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$562",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 531,
                                        "src": "2760:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2760:22:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "id": 740,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 704,
                                      "src": "2784:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 741,
                                      "name": "newAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 728,
                                      "src": "2793:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 735,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "2737:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSelector",
                                    "nodeType": "MemberAccess",
                                    "src": "2737:22:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes4) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2737:69:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$562",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 733,
                                "name": "_callOptionalReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "2710:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (contract IERC20,bytes memory)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2710:97:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 744,
                            "nodeType": "ExpressionStatement",
                            "src": "2710:97:8"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "2347:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2385:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "2378:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 701,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 700,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "2378:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "2378:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2408:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "2400:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2400:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2433:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "2425:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2425:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2368:76:8"
                  },
                  "returnParameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2454:0:8"
                  },
                  "scope": 786,
                  "src": "2338:486:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 784,
                    "nodeType": "Block",
                    "src": "3277:636:8",
                    "statements": [
                      {
                        "assignments": [
                          757
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 757,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3639:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 784,
                            "src": "3626:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 756,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3626:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "3680:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3686:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              },
                              "value": "SafeERC20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 760,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "3660:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$562",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$562",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3652:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 758,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3652:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3652:14:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1036,
                            "src": "3652:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3652:69:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3626:95:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 767,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "3735:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3735:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3755:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3735:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 783,
                        "nodeType": "IfStatement",
                        "src": "3731:176:8",
                        "trueBody": {
                          "id": 782,
                          "nodeType": "Block",
                          "src": "3758:149:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 774,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 757,
                                        "src": "3830:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 776,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3843:4:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 775,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3843:4:8",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 777,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3842:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 772,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3819:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 773,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "3819:10:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3819:30:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                                    "id": 779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3851:44:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    },
                                    "value": "SafeERC20: ERC20 operation did not succeed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    }
                                  ],
                                  "id": 771,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3811:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3811:85:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 781,
                              "nodeType": "ExpressionStatement",
                              "src": "3811:85:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 748,
                    "nodeType": "StructuredDocumentation",
                    "src": "2830:372:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                  },
                  "id": 785,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "3216:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 751,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3243:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 785,
                        "src": "3236:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$562",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 750,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 749,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 562,
                            "src": "3236:6:8"
                          },
                          "referencedDeclaration": 562,
                          "src": "3236:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$562",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3263:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 785,
                        "src": "3250:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3250:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3235:33:8"
                  },
                  "returnParameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3277:0:8"
                  },
                  "scope": 786,
                  "src": "3207:706:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 787,
              "src": "645:3270:8",
              "usedErrors": []
            }
          ],
          "src": "100:3816:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              1374
            ],
            "IERC721": [
              902
            ]
          },
          "id": 903,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 788,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "93:23:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 789,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 903,
              "sourceUnit": 1375,
              "src": "118:47:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 791,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1374,
                    "src": "256:7:9"
                  },
                  "id": 792,
                  "nodeType": "InheritanceSpecifier",
                  "src": "256:7:9"
                }
              ],
              "canonicalName": "IERC721",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 790,
                "nodeType": "StructuredDocumentation",
                "src": "167:67:9",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 902,
              "linearizedBaseContracts": [
                902,
                1374
              ],
              "name": "IERC721",
              "nameLocation": "245:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 793,
                    "nodeType": "StructuredDocumentation",
                    "src": "270:88:9",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 801,
                  "name": "Transfer",
                  "nameLocation": "369:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 800,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "394:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 801,
                        "src": "378:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 794,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 797,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "416:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 801,
                        "src": "400:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 796,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "400:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 799,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "436:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 801,
                        "src": "420:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "377:67:9"
                  },
                  "src": "363:82:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 802,
                    "nodeType": "StructuredDocumentation",
                    "src": "451:94:9",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 810,
                  "name": "Approval",
                  "nameLocation": "556:8:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "581:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "565:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 806,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "604:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "588:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 808,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "630:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "614:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "614:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "564:74:9"
                  },
                  "src": "550:89:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 811,
                    "nodeType": "StructuredDocumentation",
                    "src": "645:117:9",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 819,
                  "name": "ApprovalForAll",
                  "nameLocation": "773:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "804:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "788:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 815,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "827:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "811:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "811:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 817,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "842:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "837:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:64:9"
                  },
                  "src": "767:85:9"
                },
                {
                  "documentation": {
                    "id": 820,
                    "nodeType": "StructuredDocumentation",
                    "src": "858:76:9",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 827,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "948:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "966:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "958:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "958:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "957:15:9"
                  },
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "1004:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "996:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "996:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "995:17:9"
                  },
                  "scope": 902,
                  "src": "939:74:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 828,
                    "nodeType": "StructuredDocumentation",
                    "src": "1019:131:9",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 835,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1164:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1180:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "1172:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1172:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1171:17:9"
                  },
                  "returnParameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1220:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "1212:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1211:15:9"
                  },
                  "scope": 902,
                  "src": "1155:72:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 836,
                    "nodeType": "StructuredDocumentation",
                    "src": "1233:690:9",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 845,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1937:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 838,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1971:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "1963:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1963:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1993:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "1985:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1985:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2013:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2005:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2005:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1953:73:9"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2035:0:9"
                  },
                  "scope": 902,
                  "src": "1928:108:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 846,
                    "nodeType": "StructuredDocumentation",
                    "src": "2042:504:9",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 855,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2560:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2590:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "2582:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2582:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2612:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "2604:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2632:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "2624:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2624:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2572:73:9"
                  },
                  "returnParameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2654:0:9"
                  },
                  "scope": 902,
                  "src": "2551:104:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 856,
                    "nodeType": "StructuredDocumentation",
                    "src": "2661:452:9",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 863,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3127:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3143:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 863,
                        "src": "3135:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3155:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 863,
                        "src": "3147:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3147:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3134:29:9"
                  },
                  "returnParameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3172:0:9"
                  },
                  "scope": 902,
                  "src": "3118:55:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 864,
                    "nodeType": "StructuredDocumentation",
                    "src": "3179:139:9",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 871,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "3332:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3352:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "3344:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3344:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3343:17:9"
                  },
                  "returnParameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3392:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "3384:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:18:9"
                  },
                  "scope": 902,
                  "src": "3323:79:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 872,
                    "nodeType": "StructuredDocumentation",
                    "src": "3408:309:9",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 879,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "3731:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3757:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "3749:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "3772:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "3767:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3767:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3748:34:9"
                  },
                  "returnParameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3791:0:9"
                  },
                  "scope": 902,
                  "src": "3722:70:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 880,
                    "nodeType": "StructuredDocumentation",
                    "src": "3798:138:9",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 889,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "3950:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 882,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3975:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "3967:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3967:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 884,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3990:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "3982:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3982:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3966:33:9"
                  },
                  "returnParameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "4023:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4023:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4022:6:9"
                  },
                  "scope": 902,
                  "src": "3941:88:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 890,
                    "nodeType": "StructuredDocumentation",
                    "src": "4035:556:9",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 901,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "4605:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4639:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "4631:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4631:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4661:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "4653:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 896,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4681:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "4673:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4673:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4713:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "4698:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4698:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4621:102:9"
                  },
                  "returnParameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4732:0:9"
                  },
                  "scope": 902,
                  "src": "4596:137:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 903,
              "src": "235:4500:9",
              "usedErrors": []
            }
          ],
          "src": "93:4643:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              920
            ]
          },
          "id": 921,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 904,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Receiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 905,
                "nodeType": "StructuredDocumentation",
                "src": "126:152:10",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 920,
              "linearizedBaseContracts": [
                920
              ],
              "name": "IERC721Receiver",
              "nameLocation": "289:15:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 906,
                    "nodeType": "StructuredDocumentation",
                    "src": "311:485:10",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 919,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "810:16:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "844:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "836:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "870:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "862:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "892:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "884:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "924:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "909:19:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "826:108:10"
                  },
                  "returnParameters": {
                    "id": 918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "953:6:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "953:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "952:8:10"
                  },
                  "scope": 920,
                  "src": "801:160:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 921,
              "src": "279:684:10",
              "usedErrors": []
            }
          ],
          "src": "101:863:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
          "exportedSymbols": {
            "ERC721Holder": [
              947
            ],
            "IERC721Receiver": [
              920
            ]
          },
          "id": 948,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 922,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "104:23:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "file": "../IERC721Receiver.sol",
              "id": 923,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 948,
              "sourceUnit": 921,
              "src": "129:32:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 925,
                    "name": "IERC721Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 920,
                    "src": "424:15:11"
                  },
                  "id": 926,
                  "nodeType": "InheritanceSpecifier",
                  "src": "424:15:11"
                }
              ],
              "canonicalName": "ERC721Holder",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 924,
                "nodeType": "StructuredDocumentation",
                "src": "163:235:11",
                "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
              },
              "fullyImplemented": true,
              "id": 947,
              "linearizedBaseContracts": [
                947,
                920
              ],
              "name": "ERC721Holder",
              "nameLocation": "408:12:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    919
                  ],
                  "body": {
                    "id": 945,
                    "nodeType": "Block",
                    "src": "734:54:11",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 941,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "751:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Holder_$947",
                                "typeString": "contract ERC721Holder"
                              }
                            },
                            "id": 942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 946,
                            "src": "751:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "751:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 940,
                        "id": 944,
                        "nodeType": "Return",
                        "src": "744:37:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 927,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:137:11",
                    "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "597:16:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 937,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "708:8:11"
                  },
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 929,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "623:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "623:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "640:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "657:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "674:12:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "613:79:11"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "726:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "726:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "725:8:11"
                  },
                  "scope": 947,
                  "src": "588:200:11",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 948,
              "src": "399:391:11",
              "usedErrors": []
            }
          ],
          "src": "104:687:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              1242
            ]
          },
          "id": 1243,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 949,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".1"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 950,
                "nodeType": "StructuredDocumentation",
                "src": "126:67:12",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 1242,
              "linearizedBaseContracts": [
                1242
              ],
              "name": "Address",
              "nameLocation": "202:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 964,
                    "nodeType": "Block",
                    "src": "1241:254:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 958,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 953,
                                "src": "1465:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1465:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1465:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1487:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1465:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 957,
                        "id": 963,
                        "nodeType": "Return",
                        "src": "1458:30:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 951,
                    "nodeType": "StructuredDocumentation",
                    "src": "216:954:12",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                  },
                  "id": 965,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "1184:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1203:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "1195:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1194:17:12"
                  },
                  "returnParameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "1235:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1234:6:12"
                  },
                  "scope": 1242,
                  "src": "1175:320:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 998,
                    "nodeType": "Block",
                    "src": "2483:241:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 976,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2509:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1242",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1242",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2501:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 974,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2501:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2501:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2501:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 979,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 970,
                                "src": "2526:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2501:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2534:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 973,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2493:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2493:73:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "2493:73:12"
                      },
                      {
                        "assignments": [
                          985,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 985,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2583:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 998,
                            "src": "2578:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 984,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2578:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 992,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2626:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 986,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 968,
                                "src": "2596:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2596:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 988,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 970,
                                "src": "2618:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2596:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2596:33:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2577:52:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "2647:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2656:60:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 993,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2639:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:78:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "2639:78:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 966,
                    "nodeType": "StructuredDocumentation",
                    "src": "1501:906:12",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 999,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "2421:9:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2447:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "2431:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:15:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 970,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2466:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "2458:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 969,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2458:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:43:12"
                  },
                  "returnParameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2483:0:12"
                  },
                  "scope": 1242,
                  "src": "2412:312:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1015,
                    "nodeType": "Block",
                    "src": "3555:84:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1010,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "3585:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1011,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "3593:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3599:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 1009,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1016,
                              1036
                            ],
                            "referencedDeclaration": 1036,
                            "src": "3572:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1008,
                        "id": 1014,
                        "nodeType": "Return",
                        "src": "3565:67:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1000,
                    "nodeType": "StructuredDocumentation",
                    "src": "2730:731:12",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 1016,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3475:12:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3496:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "3488:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3488:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3517:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "3504:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3504:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3487:35:12"
                  },
                  "returnParameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1016,
                        "src": "3541:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3541:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3540:14:12"
                  },
                  "scope": 1242,
                  "src": "3466:173:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "4008:76:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1029,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "4047:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1030,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "4055:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4061:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1032,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "4064:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1028,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1056,
                              1106
                            ],
                            "referencedDeclaration": 1106,
                            "src": "4025:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4025:52:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1027,
                        "id": 1034,
                        "nodeType": "Return",
                        "src": "4018:59:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1017,
                    "nodeType": "StructuredDocumentation",
                    "src": "3645:211:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 1036,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3870:12:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3900:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1036,
                        "src": "3892:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3892:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3929:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1036,
                        "src": "3916:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3916:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "3957:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1036,
                        "src": "3943:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3943:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3882:93:12"
                  },
                  "returnParameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1036,
                        "src": "3994:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3994:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3993:14:12"
                  },
                  "scope": 1242,
                  "src": "3861:223:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "4589:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1049,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "4628:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1050,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "4636:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1051,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1043,
                              "src": "4642:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4649:43:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 1048,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1056,
                              1106
                            ],
                            "referencedDeclaration": 1106,
                            "src": "4606:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4606:87:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1047,
                        "id": 1054,
                        "nodeType": "Return",
                        "src": "4599:94:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1037,
                    "nodeType": "StructuredDocumentation",
                    "src": "4090:351:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 1056,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4455:21:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4494:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "4486:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4486:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4523:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "4510:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4510:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4545:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "4537:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4537:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4476:80:12"
                  },
                  "returnParameters": {
                    "id": 1047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1046,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "4575:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4575:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4574:14:12"
                  },
                  "scope": 1242,
                  "src": "4446:254:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "5127:320:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1073,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5153:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1242",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1242",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 1072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5145:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1071,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5145:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1074,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5145:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "5145:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1076,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1063,
                                "src": "5170:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5145:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5177:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 1070,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5137:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5137:81:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1080,
                        "nodeType": "ExpressionStatement",
                        "src": "5137:81:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1083,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "5247:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1082,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "5236:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5236:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5256:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 1081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5228:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5228:60:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1087,
                        "nodeType": "ExpressionStatement",
                        "src": "5228:60:12"
                      },
                      {
                        "assignments": [
                          1089,
                          1091
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1089,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5305:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1105,
                            "src": "5300:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1088,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5300:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1091,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5327:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1105,
                            "src": "5314:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1090,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5314:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1098,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1096,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1061,
                              "src": "5367:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1092,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1059,
                                "src": "5341:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5341:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1094,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1063,
                                "src": "5360:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5341:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5341:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5299:73:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1100,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "5406:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1101,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "5415:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1102,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "5427:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1099,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "5389:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:51:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1069,
                        "id": 1104,
                        "nodeType": "Return",
                        "src": "5382:58:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1057,
                    "nodeType": "StructuredDocumentation",
                    "src": "4706:237:12",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 1106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4957:21:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4996:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "4988:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4988:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5025:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "5012:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5012:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5047:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "5039:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5039:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1065,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5076:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "5062:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5062:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4978:116:12"
                  },
                  "returnParameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "5113:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5113:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5112:14:12"
                  },
                  "scope": 1242,
                  "src": "4948:499:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1122,
                    "nodeType": "Block",
                    "src": "5724:97:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1117,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "5760:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1118,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "5768:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5774:39:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 1116,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1123,
                              1158
                            ],
                            "referencedDeclaration": 1158,
                            "src": "5741:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5741:73:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1115,
                        "id": 1121,
                        "nodeType": "Return",
                        "src": "5734:80:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5453:166:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 1123,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "5633:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5660:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "5652:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5652:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5681:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "5668:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5668:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5651:35:12"
                  },
                  "returnParameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "5710:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5710:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5709:14:12"
                  },
                  "scope": 1242,
                  "src": "5624:197:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1157,
                    "nodeType": "Block",
                    "src": "6163:228:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1137,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1126,
                                  "src": "6192:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1136,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "6181:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6181:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 1139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6201:38:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              },
                              "value": "Address: static call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              }
                            ],
                            "id": 1135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6173:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1141,
                        "nodeType": "ExpressionStatement",
                        "src": "6173:67:12"
                      },
                      {
                        "assignments": [
                          1143,
                          1145
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1143,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "6257:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1157,
                            "src": "6252:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1142,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6252:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1145,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "6279:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1157,
                            "src": "6266:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1144,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6266:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1150,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "6311:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1146,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "6293:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "6293:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6293:23:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6251:65:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1152,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "6350:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1153,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "6359:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1154,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "6371:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1151,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "6333:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6333:51:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1134,
                        "id": 1156,
                        "nodeType": "Return",
                        "src": "6326:58:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1124,
                    "nodeType": "StructuredDocumentation",
                    "src": "5827:173:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 1158,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "6014:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6050:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1158,
                        "src": "6042:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6042:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6079:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1158,
                        "src": "6066:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6066:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6107:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1158,
                        "src": "6093:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6093:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6032:93:12"
                  },
                  "returnParameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1158,
                        "src": "6149:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6149:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6148:14:12"
                  },
                  "scope": 1242,
                  "src": "6005:386:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1174,
                    "nodeType": "Block",
                    "src": "6667:101:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1169,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1161,
                              "src": "6705:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1170,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1163,
                              "src": "6713:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6719:41:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 1168,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1175,
                              1210
                            ],
                            "referencedDeclaration": 1210,
                            "src": "6684:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6684:77:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1167,
                        "id": 1173,
                        "nodeType": "Return",
                        "src": "6677:84:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1159,
                    "nodeType": "StructuredDocumentation",
                    "src": "6397:168:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 1175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6579:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6608:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "6600:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6600:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1163,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "6616:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6599:35:12"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1175,
                        "src": "6653:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6653:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6652:14:12"
                  },
                  "scope": 1242,
                  "src": "6570:198:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1209,
                    "nodeType": "Block",
                    "src": "7109:232:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1189,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1178,
                                  "src": "7138:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1188,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "7127:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7127:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7147:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              },
                              "value": "Address: delegate call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              }
                            ],
                            "id": 1187,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7119:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7119:69:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "7119:69:12"
                      },
                      {
                        "assignments": [
                          1195,
                          1197
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1195,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7205:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "7200:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1194,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7200:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1197,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "7227:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "7214:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1196,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7214:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1200,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7261:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1198,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1178,
                              "src": "7241:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "7241:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7241:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7199:67:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1204,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1195,
                              "src": "7300:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1205,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "7309:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1206,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1182,
                              "src": "7321:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1203,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "7283:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7283:51:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1186,
                        "id": 1208,
                        "nodeType": "Return",
                        "src": "7276:58:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1176,
                    "nodeType": "StructuredDocumentation",
                    "src": "6774:175:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 1210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6963:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7001:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "6993:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6993:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1180,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7030:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "7017:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1179,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7017:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1182,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7058:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "7044:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1181,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7044:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6983:93:12"
                  },
                  "returnParameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "7095:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7095:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7094:14:12"
                  },
                  "scope": 1242,
                  "src": "6954:387:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1240,
                    "nodeType": "Block",
                    "src": "7721:532:12",
                    "statements": [
                      {
                        "condition": {
                          "id": 1222,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "7735:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1238,
                          "nodeType": "Block",
                          "src": "7792:455:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1226,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1215,
                                    "src": "7876:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7876:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7896:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7876:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1236,
                                "nodeType": "Block",
                                "src": "8184:53:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1233,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1217,
                                          "src": "8209:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1232,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "8202:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 1234,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8202:20:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1235,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8202:20:12"
                                  }
                                ]
                              },
                              "id": 1237,
                              "nodeType": "IfStatement",
                              "src": "7872:365:12",
                              "trueBody": {
                                "id": 1231,
                                "nodeType": "Block",
                                "src": "7899:279:12",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "8019:145:12",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "8041:40:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "8070:10:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "8064:5:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8064:17:12"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "8045:15:12",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8113:2:12",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8117:10:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8109:3:12"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8109:19:12"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "8130:15:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "8102:6:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8102:44:12"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "8102:44:12"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 1215,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "8070:10:12",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 1215,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "8117:10:12",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 1230,
                                    "nodeType": "InlineAssembly",
                                    "src": "8010:154:12"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1239,
                        "nodeType": "IfStatement",
                        "src": "7731:516:12",
                        "trueBody": {
                          "id": 1225,
                          "nodeType": "Block",
                          "src": "7744:42:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1223,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1215,
                                "src": "7765:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1221,
                              "id": 1224,
                              "nodeType": "Return",
                              "src": "7758:17:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "7347:209:12",
                    "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
                  },
                  "id": 1241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "7570:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "7601:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "7596:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "7631:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "7618:23:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7618:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1217,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7665:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "7651:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1216,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7651:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7586:97:12"
                  },
                  "returnParameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "7707:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7707:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7706:14:12"
                  },
                  "scope": 1242,
                  "src": "7561:692:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1243,
              "src": "194:8061:12",
              "usedErrors": []
            }
          ],
          "src": "101:8155:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1264
            ]
          },
          "id": 1265,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1244,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:13"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1245,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:13",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1264,
              "linearizedBaseContracts": [
                1264
              ],
              "name": "Context",
              "nameLocation": "626:7:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1253,
                    "nodeType": "Block",
                    "src": "702:34:13",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1250,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1249,
                        "id": 1252,
                        "nodeType": "Return",
                        "src": "712:17:13"
                      }
                    ]
                  },
                  "id": 1254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:13"
                  },
                  "returnParameters": {
                    "id": 1249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1254,
                        "src": "693:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:13"
                  },
                  "scope": 1264,
                  "src": "640:96:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1262,
                    "nodeType": "Block",
                    "src": "809:32:13",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1258,
                        "id": 1261,
                        "nodeType": "Return",
                        "src": "819:15:13"
                      }
                    ]
                  },
                  "id": 1263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:13"
                  },
                  "returnParameters": {
                    "id": 1258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1257,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "793:14:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1256,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:13"
                  },
                  "scope": 1264,
                  "src": "742:99:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1265,
              "src": "608:235:13",
              "usedErrors": []
            }
          ],
          "src": "86:758:13"
        },
        "id": 13
      },
      "@openzeppelin/contracts/utils/Counters.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
          "exportedSymbols": {
            "Counters": [
              1338
            ]
          },
          "id": 1339,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1266,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Counters",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1267,
                "nodeType": "StructuredDocumentation",
                "src": "112:311:14",
                "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
              },
              "fullyImplemented": true,
              "id": 1338,
              "linearizedBaseContracts": [
                1338
              ],
              "name": "Counters",
              "nameLocation": "432:8:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Counters.Counter",
                  "id": 1270,
                  "members": [
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "_value",
                      "nameLocation": "794:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1270,
                      "src": "786:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "786:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Counter",
                  "nameLocation": "454:7:14",
                  "nodeType": "StructDefinition",
                  "scope": 1338,
                  "src": "447:374:14",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1281,
                    "nodeType": "Block",
                    "src": "901:38:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1278,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "918:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1269,
                          "src": "918:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1277,
                        "id": 1280,
                        "nodeType": "Return",
                        "src": "911:21:14"
                      }
                    ]
                  },
                  "id": 1282,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "current",
                  "nameLocation": "836:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "860:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1282,
                        "src": "844:23:14",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1271,
                            "name": "Counter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1270,
                            "src": "844:7:14"
                          },
                          "referencedDeclaration": 1270,
                          "src": "844:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:25:14"
                  },
                  "returnParameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1276,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1282,
                        "src": "892:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "891:9:14"
                  },
                  "scope": 1338,
                  "src": "827:112:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "998:70:14",
                    "statements": [
                      {
                        "id": 1294,
                        "nodeType": "UncheckedBlock",
                        "src": "1008:54:14",
                        "statements": [
                          {
                            "expression": {
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 1288,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "1032:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                                    "typeString": "struct Counters.Counter storage pointer"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "_value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1269,
                                "src": "1032:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1050:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1032:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1293,
                            "nodeType": "ExpressionStatement",
                            "src": "1032:19:14"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 1296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increment",
                  "nameLocation": "954:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1285,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "980:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1296,
                        "src": "964:23:14",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1284,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1283,
                            "name": "Counter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1270,
                            "src": "964:7:14"
                          },
                          "referencedDeclaration": 1270,
                          "src": "964:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "963:25:14"
                  },
                  "returnParameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "998:0:14"
                  },
                  "scope": 1338,
                  "src": "945:123:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1323,
                    "nodeType": "Block",
                    "src": "1127:176:14",
                    "statements": [
                      {
                        "assignments": [
                          1303
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1303,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1145:5:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1323,
                            "src": "1137:13:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1302,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1137:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1306,
                        "initialValue": {
                          "expression": {
                            "id": 1304,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "1153:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1269,
                          "src": "1153:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1137:30:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1308,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1303,
                                "src": "1185:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1193:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1185:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1196:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                                "typeString": "literal_string \"Counter: decrement overflow\""
                              },
                              "value": "Counter: decrement overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                                "typeString": "literal_string \"Counter: decrement overflow\""
                              }
                            ],
                            "id": 1307,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1177:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1177:49:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "1177:49:14"
                      },
                      {
                        "id": 1322,
                        "nodeType": "UncheckedBlock",
                        "src": "1236:61:14",
                        "statements": [
                          {
                            "expression": {
                              "id": 1320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 1314,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1299,
                                  "src": "1260:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                                    "typeString": "struct Counters.Counter storage pointer"
                                  }
                                },
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "_value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1269,
                                "src": "1260:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1317,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1303,
                                  "src": "1277:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1285:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1277:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1260:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1321,
                            "nodeType": "ExpressionStatement",
                            "src": "1260:26:14"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 1324,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decrement",
                  "nameLocation": "1083:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1299,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "1109:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1324,
                        "src": "1093:23:14",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1298,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1297,
                            "name": "Counter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1270,
                            "src": "1093:7:14"
                          },
                          "referencedDeclaration": 1270,
                          "src": "1093:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1092:25:14"
                  },
                  "returnParameters": {
                    "id": 1301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1127:0:14"
                  },
                  "scope": 1338,
                  "src": "1074:229:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "1358:35:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1330,
                              "name": "counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1327,
                              "src": "1368:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                                "typeString": "struct Counters.Counter storage pointer"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "_value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1269,
                            "src": "1368:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1385:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1368:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1335,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:18:14"
                      }
                    ]
                  },
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "reset",
                  "nameLocation": "1318:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "1340:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "1324:23:14",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                          "id": 1326,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1325,
                            "name": "Counter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1270,
                            "src": "1324:7:14"
                          },
                          "referencedDeclaration": 1270,
                          "src": "1324:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                            "typeString": "struct Counters.Counter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1323:25:14"
                  },
                  "returnParameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1358:0:14"
                  },
                  "scope": 1338,
                  "src": "1309:84:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1339,
              "src": "424:971:14",
              "usedErrors": []
            }
          ],
          "src": "87:1309:14"
        },
        "id": 14
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1362
            ],
            "IERC165": [
              1374
            ]
          },
          "id": 1363,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1340,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "99:23:15"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1341,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1363,
              "sourceUnit": 1375,
              "src": "124:23:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1343,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1374,
                    "src": "754:7:15"
                  },
                  "id": 1344,
                  "nodeType": "InheritanceSpecifier",
                  "src": "754:7:15"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1342,
                "nodeType": "StructuredDocumentation",
                "src": "149:576:15",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
              },
              "fullyImplemented": true,
              "id": 1362,
              "linearizedBaseContracts": [
                1362,
                1374
              ],
              "name": "ERC165",
              "nameLocation": "744:6:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1373
                  ],
                  "body": {
                    "id": 1360,
                    "nodeType": "Block",
                    "src": "920:64:15",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1353,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "937:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1355,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "957:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1374_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1374_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1354,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "952:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "952:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1374",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "952:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "937:40:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1352,
                        "id": 1359,
                        "nodeType": "Return",
                        "src": "930:47:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1345,
                    "nodeType": "StructuredDocumentation",
                    "src": "768:56:15",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1361,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "838:17:15",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1349,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "896:8:15"
                  },
                  "parameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1347,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "863:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "856:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1346,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "856:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "855:20:15"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "914:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "914:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "913:6:15"
                  },
                  "scope": 1362,
                  "src": "829:155:15",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1363,
              "src": "726:260:15",
              "usedErrors": []
            }
          ],
          "src": "99:888:15"
        },
        "id": 15
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1374
            ]
          },
          "id": 1375,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1364,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:23:16"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1365,
                "nodeType": "StructuredDocumentation",
                "src": "125:279:16",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1374,
              "linearizedBaseContracts": [
                1374
              ],
              "name": "IERC165",
              "nameLocation": "415:7:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1366,
                    "nodeType": "StructuredDocumentation",
                    "src": "429:340:16",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1373,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "783:17:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "808:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1373,
                        "src": "801:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "801:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "800:20:16"
                  },
                  "returnParameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1373,
                        "src": "844:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "844:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:6:16"
                  },
                  "scope": 1374,
                  "src": "774:76:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1375,
              "src": "405:447:16",
              "usedErrors": []
            }
          ],
          "src": "100:753:16"
        },
        "id": 16
      },
      "contracts/Tradescrow.sol": {
        "ast": {
          "absolutePath": "contracts/Tradescrow.sol",
          "exportedSymbols": {
            "Address": [
              1242
            ],
            "Context": [
              1264
            ],
            "Counters": [
              1338
            ],
            "ERC1155Holder": [
              450
            ],
            "ERC1155Receiver": [
              484
            ],
            "ERC165": [
              1362
            ],
            "ERC721Holder": [
              947
            ],
            "IERC1155": [
              358
            ],
            "IERC1155Receiver": [
              399
            ],
            "IERC165": [
              1374
            ],
            "IERC20": [
              562
            ],
            "IERC721": [
              902
            ],
            "IERC721Receiver": [
              920
            ],
            "Ownable": [
              104
            ],
            "Pausable": [
              196
            ],
            "ReentrancyGuard": [
              236
            ],
            "SafeERC20": [
              786
            ],
            "Tradescrow": [
              2544
            ]
          },
          "id": 2545,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1376,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:17"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
              "file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
              "id": 1377,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 451,
              "src": "62:71:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "id": 1378,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 948,
              "src": "134:69:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1379,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 787,
              "src": "204:65:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 1380,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 237,
              "src": "270:62:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
              "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
              "id": 1381,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 359,
              "src": "333:60:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 1382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 903,
              "src": "394:58:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 1383,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 197,
              "src": "453:55:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1384,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 105,
              "src": "509:52:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
              "file": "@openzeppelin/contracts/utils/Counters.sol",
              "id": 1385,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2545,
              "sourceUnit": 1339,
              "src": "562:52:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1387,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "703:7:17"
                  },
                  "id": 1388,
                  "nodeType": "InheritanceSpecifier",
                  "src": "703:7:17"
                },
                {
                  "baseName": {
                    "id": 1389,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 236,
                    "src": "712:15:17"
                  },
                  "id": 1390,
                  "nodeType": "InheritanceSpecifier",
                  "src": "712:15:17"
                },
                {
                  "baseName": {
                    "id": 1391,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 196,
                    "src": "729:8:17"
                  },
                  "id": 1392,
                  "nodeType": "InheritanceSpecifier",
                  "src": "729:8:17"
                },
                {
                  "baseName": {
                    "id": 1393,
                    "name": "ERC721Holder",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 947,
                    "src": "739:12:17"
                  },
                  "id": 1394,
                  "nodeType": "InheritanceSpecifier",
                  "src": "739:12:17"
                },
                {
                  "baseName": {
                    "id": 1395,
                    "name": "ERC1155Holder",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 450,
                    "src": "753:13:17"
                  },
                  "id": 1396,
                  "nodeType": "InheritanceSpecifier",
                  "src": "753:13:17"
                }
              ],
              "canonicalName": "Tradescrow",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1386,
                "nodeType": "StructuredDocumentation",
                "src": "616:63:17",
                "text": " @title Trade & Escrow v1.2.1\n @author @DirtyCajunRice"
              },
              "fullyImplemented": true,
              "id": 2544,
              "linearizedBaseContracts": [
                2544,
                450,
                484,
                399,
                1362,
                1374,
                947,
                920,
                196,
                236,
                104,
                1264
              ],
              "name": "Tradescrow",
              "nameLocation": "689:10:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1400,
                  "libraryName": {
                    "id": 1397,
                    "name": "SafeERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 786,
                    "src": "819:9:17"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "813:27:17",
                  "typeName": {
                    "id": 1399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1398,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 562,
                      "src": "833:6:17"
                    },
                    "referencedDeclaration": 562,
                    "src": "833:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$562",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "id": 1404,
                  "libraryName": {
                    "id": 1401,
                    "name": "Counters",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1338,
                    "src": "884:8:17"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "878:36:17",
                  "typeName": {
                    "id": 1403,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1402,
                      "name": "Counters.Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1270,
                      "src": "897:16:17"
                    },
                    "referencedDeclaration": 1270,
                    "src": "897:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "_swapsCounter",
                  "nameLocation": "944:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "919:38:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1270_storage",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1406,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1405,
                      "name": "Counters.Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1270,
                      "src": "919:16:17"
                    },
                    "referencedDeclaration": 1270,
                    "src": "919:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1270_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_native",
                  "nameLocation": "1033:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "1017:23:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "ddca3f43",
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1102:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "1087:18:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 1414,
                  "mutability": "constant",
                  "name": "TRUEINT",
                  "nameLocation": "1200:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "1175:36:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1210:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1417,
                  "mutability": "constant",
                  "name": "FALSEINT",
                  "nameLocation": "1242:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "1217:37:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1253:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "_swaps",
                  "nameLocation": "1328:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2544,
                  "src": "1294:40:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                    "typeString": "mapping(uint256 => struct Tradescrow.Swap)"
                  },
                  "typeName": {
                    "id": 1421,
                    "keyType": {
                      "id": 1418,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1303:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1294:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                      "typeString": "mapping(uint256 => struct Tradescrow.Swap)"
                    },
                    "valueType": {
                      "id": 1420,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1419,
                        "name": "Swap",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1456,
                        "src": "1314:4:17"
                      },
                      "referencedDeclaration": 1456,
                      "src": "1314:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                        "typeString": "struct Tradescrow.Swap"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "canonicalName": "Tradescrow.Nft",
                  "id": 1429,
                  "members": [
                    {
                      "constant": false,
                      "id": 1424,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1463:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1429,
                      "src": "1455:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1423,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1455:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1426,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1485:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1429,
                      "src": "1477:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1477:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1428,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1509:2:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1429,
                      "src": "1501:10:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1501:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Nft",
                  "nameLocation": "1441:3:17",
                  "nodeType": "StructDefinition",
                  "scope": 2544,
                  "src": "1434:84:17",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Tradescrow.Coin",
                  "id": 1434,
                  "members": [
                    {
                      "constant": false,
                      "id": 1431,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1639:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1434,
                      "src": "1631:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1631:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1661:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1434,
                      "src": "1653:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1653:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Coin",
                  "nameLocation": "1616:4:17",
                  "nodeType": "StructDefinition",
                  "scope": 2544,
                  "src": "1609:65:17",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Tradescrow.Offer",
                  "id": 1447,
                  "members": [
                    {
                      "constant": false,
                      "id": 1436,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1789:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "1773:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1773:15:17",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1438,
                      "mutability": "mutable",
                      "name": "native",
                      "nameLocation": "1811:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "1803:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1803:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1442,
                      "mutability": "mutable",
                      "name": "nfts",
                      "nameLocation": "1833:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "1827:10:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr",
                        "typeString": "struct Tradescrow.Nft[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1439,
                            "name": "Nft",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1429,
                            "src": "1827:3:17"
                          },
                          "referencedDeclaration": 1429,
                          "src": "1827:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Nft_$1429_storage_ptr",
                            "typeString": "struct Tradescrow.Nft"
                          }
                        },
                        "id": 1441,
                        "nodeType": "ArrayTypeName",
                        "src": "1827:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr",
                          "typeString": "struct Tradescrow.Nft[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1446,
                      "mutability": "mutable",
                      "name": "coins",
                      "nameLocation": "1854:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "1847:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr",
                        "typeString": "struct Tradescrow.Coin[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1444,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1443,
                            "name": "Coin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1434,
                            "src": "1847:4:17"
                          },
                          "referencedDeclaration": 1434,
                          "src": "1847:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Coin_$1434_storage_ptr",
                            "typeString": "struct Tradescrow.Coin"
                          }
                        },
                        "id": 1445,
                        "nodeType": "ArrayTypeName",
                        "src": "1847:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr",
                          "typeString": "struct Tradescrow.Coin[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Offer",
                  "nameLocation": "1757:5:17",
                  "nodeType": "StructDefinition",
                  "scope": 2544,
                  "src": "1750:116:17",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Tradescrow.Swap",
                  "id": 1456,
                  "members": [
                    {
                      "constant": false,
                      "id": 1450,
                      "mutability": "mutable",
                      "name": "initiator",
                      "nameLocation": "1966:9:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1456,
                      "src": "1960:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                        "typeString": "struct Tradescrow.Offer"
                      },
                      "typeName": {
                        "id": 1449,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1448,
                          "name": "Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1447,
                          "src": "1960:5:17"
                        },
                        "referencedDeclaration": 1447,
                        "src": "1960:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1453,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1991:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1456,
                      "src": "1985:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                        "typeString": "struct Tradescrow.Offer"
                      },
                      "typeName": {
                        "id": 1452,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1451,
                          "name": "Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1447,
                          "src": "1985:5:17"
                        },
                        "referencedDeclaration": 1447,
                        "src": "1985:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1455,
                      "mutability": "mutable",
                      "name": "open",
                      "nameLocation": "2015:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1456,
                      "src": "2007:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2007:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Swap",
                  "nameLocation": "1945:4:17",
                  "nodeType": "StructDefinition",
                  "scope": 2544,
                  "src": "1938:88:17",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1467,
                  "name": "SwapProposed",
                  "nameLocation": "2038:12:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1458,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2067:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "2051:20:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2051:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1460,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2089:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "2073:18:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2073:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1462,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "2109:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "2093:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2093:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1465,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "2123:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "2117:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 1464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1463,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "2117:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "2117:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2050:79:17"
                  },
                  "src": "2032:98:17"
                },
                {
                  "anonymous": false,
                  "id": 1478,
                  "name": "SwapInitiated",
                  "nameLocation": "2141:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1469,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2171:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "2155:20:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2155:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1471,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2193:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "2177:18:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2177:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1473,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "2213:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "2197:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2197:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1476,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "2227:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "2221:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 1475,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1474,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "2221:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "2221:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2154:79:17"
                  },
                  "src": "2135:99:17"
                },
                {
                  "anonymous": false,
                  "id": 1486,
                  "name": "SwapExecuted",
                  "nameLocation": "2245:12:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1480,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2274:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1486,
                        "src": "2258:20:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2258:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1482,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2296:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1486,
                        "src": "2280:18:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1484,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "2316:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1486,
                        "src": "2300:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2300:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2257:66:17"
                  },
                  "src": "2239:85:17"
                },
                {
                  "anonymous": false,
                  "id": 1492,
                  "name": "SwapCancelled",
                  "nameLocation": "2335:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1488,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "cancelledBy",
                        "nameLocation": "2365:11:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "2349:27:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2349:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1490,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "2394:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "2378:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2378:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2348:53:17"
                  },
                  "src": "2329:73:17"
                },
                {
                  "anonymous": false,
                  "id": 1496,
                  "name": "SwapClosed",
                  "nameLocation": "2413:10:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1494,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "2440:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1496,
                        "src": "2424:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2424:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2423:24:17"
                  },
                  "src": "2407:41:17"
                },
                {
                  "anonymous": false,
                  "id": 1500,
                  "name": "AppFeeChanged",
                  "nameLocation": "2459:13:17",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1498,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "2481:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "2473:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2473:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2472:13:17"
                  },
                  "src": "2453:33:17"
                },
                {
                  "body": {
                    "id": 1517,
                    "nodeType": "Block",
                    "src": "2615:91:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1507,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "2625:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1508,
                            "name": "initialAppFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1502,
                            "src": "2631:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2625:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1510,
                        "nodeType": "ExpressionStatement",
                        "src": "2625:19:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1514,
                              "name": "contractOwnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "2678:20:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 1511,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "2654:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Tradescrow_$2544_$",
                                "typeString": "type(contract super Tradescrow)"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "2654:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2654:45:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "2654:45:17"
                      }
                    ]
                  },
                  "id": 1518,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1502,
                        "mutability": "mutable",
                        "name": "initialAppFee",
                        "nameLocation": "2562:13:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "2554:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1501,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2554:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "contractOwnerAddress",
                        "nameLocation": "2593:20:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "2577:36:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2577:15:17",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2553:61:17"
                  },
                  "returnParameters": {
                    "id": 1506,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2615:0:17"
                  },
                  "scope": 2544,
                  "src": "2542:164:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1529,
                    "nodeType": "Block",
                    "src": "2794:171:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1521,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2825:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2825:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1523,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1411,
                                "src": "2838:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2825:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a2053656e7420616d6f756e74206e6565647320746f2062652067726561746572207468616e206f7220657175616c20746f20746865206170706c69636174696f6e20666565",
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2855:82:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99f42558b586dc72ca995d95dbefffd69a3cdea04598bdf09f3743cad77d39ae",
                                "typeString": "literal_string \"Tradescrow: Sent amount needs to be greater than or equal to the application fee\""
                              },
                              "value": "Tradescrow: Sent amount needs to be greater than or equal to the application fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_99f42558b586dc72ca995d95dbefffd69a3cdea04598bdf09f3743cad77d39ae",
                                "typeString": "literal_string \"Tradescrow: Sent amount needs to be greater than or equal to the application fee\""
                              }
                            ],
                            "id": 1520,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2804:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2804:143:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1527,
                        "nodeType": "ExpressionStatement",
                        "src": "2804:143:17"
                      },
                      {
                        "id": 1528,
                        "nodeType": "PlaceholderStatement",
                        "src": "2957:1:17"
                      }
                    ]
                  },
                  "id": 1530,
                  "name": "chargeAppFee",
                  "nameLocation": "2779:12:17",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2791:2:17"
                  },
                  "src": "2770:195:17",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1695,
                    "nodeType": "Block",
                    "src": "3679:833:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1548,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "3705:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1547,
                            "name": "requireNotEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "3689:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3689:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1550,
                        "nodeType": "ExpressionStatement",
                        "src": "3689:22:17"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1551,
                              "name": "_swapsCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "3721:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1270_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1553,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1296,
                            "src": "3721:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1270_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1270_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3721:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1555,
                        "nodeType": "ExpressionStatement",
                        "src": "3721:25:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1559,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3791:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3791:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3783:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1557,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3783:8:17",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3783:19:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1564,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3812:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                ],
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3804:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1562,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3804:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3804:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1566,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "3819:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1556,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2503,
                            "src": "3757:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3757:68:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1568,
                        "nodeType": "ExpressionStatement",
                        "src": "3757:68:17"
                      },
                      {
                        "assignments": [
                          1571
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1571,
                            "mutability": "mutable",
                            "name": "swap",
                            "nameLocation": "3849:4:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1695,
                            "src": "3836:17:17",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                              "typeString": "struct Tradescrow.Swap"
                            },
                            "typeName": {
                              "id": 1570,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1569,
                                "name": "Swap",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1456,
                                "src": "3836:4:17"
                              },
                              "referencedDeclaration": 1456,
                              "src": "3836:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                "typeString": "struct Tradescrow.Swap"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1577,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1572,
                            "name": "_swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1422,
                            "src": "3856:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                              "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                            }
                          },
                          "id": 1576,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1573,
                                "name": "_swapsCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1407,
                                "src": "3863:13:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Counter_$1270_storage",
                                  "typeString": "struct Counters.Counter storage ref"
                                }
                              },
                              "id": 1574,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1282,
                              "src": "3863:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1270_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1270_storage_ptr_$",
                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3863:23:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3856:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1456_storage",
                            "typeString": "struct Tradescrow.Swap storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3836:51:17"
                      },
                      {
                        "expression": {
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1578,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "3898:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                "typeString": "struct Tradescrow.Swap storage pointer"
                              }
                            },
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1455,
                            "src": "3898:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1581,
                            "name": "TRUEINT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "3910:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3898:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1583,
                        "nodeType": "ExpressionStatement",
                        "src": "3898:19:17"
                      },
                      {
                        "expression": {
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1584,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1571,
                                "src": "3927:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                  "typeString": "struct Tradescrow.Swap storage pointer"
                                }
                              },
                              "id": 1587,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "3927:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1436,
                            "src": "3927:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1591,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3957:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3957:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3949:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1589,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3949:8:17",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3949:19:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3927:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1595,
                        "nodeType": "ExpressionStatement",
                        "src": "3927:41:17"
                      },
                      {
                        "body": {
                          "id": 1621,
                          "nodeType": "Block",
                          "src": "4024:64:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1615,
                                        "name": "offer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1536,
                                        "src": "4063:5:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                          "typeString": "struct Tradescrow.Offer memory"
                                        }
                                      },
                                      "id": 1616,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nfts",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1442,
                                      "src": "4063:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Tradescrow.Nft memory[] memory"
                                      }
                                    },
                                    "id": 1618,
                                    "indexExpression": {
                                      "id": 1617,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1597,
                                      "src": "4074:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4063:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                      "typeString": "struct Tradescrow.Nft memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                      "typeString": "struct Tradescrow.Nft memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 1608,
                                        "name": "swap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1571,
                                        "src": "4038:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                          "typeString": "struct Tradescrow.Swap storage pointer"
                                        }
                                      },
                                      "id": 1612,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "initiator",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1450,
                                      "src": "4038:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    "id": 1613,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nfts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1442,
                                    "src": "4038:19:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Nft_$1429_storage_$dyn_storage",
                                      "typeString": "struct Tradescrow.Nft storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4038:24:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr_$_t_struct$_Nft_$1429_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct Tradescrow.Nft storage ref[] storage pointer,struct Tradescrow.Nft storage ref)"
                                  }
                                },
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4038:39:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1620,
                              "nodeType": "ExpressionStatement",
                              "src": "4038:39:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1600,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1597,
                            "src": "3996:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1601,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1536,
                                "src": "4000:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nfts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1442,
                              "src": "4000:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Nft memory[] memory"
                              }
                            },
                            "id": 1603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4000:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3996:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1622,
                        "initializationExpression": {
                          "assignments": [
                            1597
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1597,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3991:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 1622,
                              "src": "3983:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1596,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3983:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1599,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3993:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3983:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4019:3:17",
                            "subExpression": {
                              "id": 1605,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1597,
                              "src": "4019:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1607,
                          "nodeType": "ExpressionStatement",
                          "src": "4019:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "3978:110:17"
                      },
                      {
                        "body": {
                          "id": 1648,
                          "nodeType": "Block",
                          "src": "4144:66:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1642,
                                        "name": "offer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1536,
                                        "src": "4184:5:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                          "typeString": "struct Tradescrow.Offer memory"
                                        }
                                      },
                                      "id": 1643,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "coins",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1446,
                                      "src": "4184:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Tradescrow.Coin memory[] memory"
                                      }
                                    },
                                    "id": 1645,
                                    "indexExpression": {
                                      "id": 1644,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1624,
                                      "src": "4196:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4184:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                      "typeString": "struct Tradescrow.Coin memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                      "typeString": "struct Tradescrow.Coin memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 1635,
                                        "name": "swap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1571,
                                        "src": "4158:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                          "typeString": "struct Tradescrow.Swap storage pointer"
                                        }
                                      },
                                      "id": 1639,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "initiator",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1450,
                                      "src": "4158:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    "id": 1640,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "coins",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1446,
                                    "src": "4158:20:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Coin_$1434_storage_$dyn_storage",
                                      "typeString": "struct Tradescrow.Coin storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4158:25:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr_$_t_struct$_Coin_$1434_storage_$returns$__$bound_to$_t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct Tradescrow.Coin storage ref[] storage pointer,struct Tradescrow.Coin storage ref)"
                                  }
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4158:41:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1647,
                              "nodeType": "ExpressionStatement",
                              "src": "4158:41:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1627,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1624,
                            "src": "4115:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1628,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1536,
                                "src": "4119:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 1629,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1446,
                              "src": "4119:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Coin memory[] memory"
                              }
                            },
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4119:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4115:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1649,
                        "initializationExpression": {
                          "assignments": [
                            1624
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1624,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4110:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 1649,
                              "src": "4102:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1623,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4102:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1626,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4112:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4102:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4139:3:17",
                            "subExpression": {
                              "id": 1632,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "4139:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1634,
                          "nodeType": "ExpressionStatement",
                          "src": "4139:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "4097:113:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1650,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4223:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4223:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1652,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "4235:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4223:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1672,
                        "nodeType": "IfStatement",
                        "src": "4219:131:17",
                        "trueBody": {
                          "id": 1671,
                          "nodeType": "Block",
                          "src": "4240:110:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 1663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 1654,
                                      "name": "swap",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "4254:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                        "typeString": "struct Tradescrow.Swap storage pointer"
                                      }
                                    },
                                    "id": 1657,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "4254:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1658,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "4254:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1659,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4278:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "4278:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1661,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1411,
                                    "src": "4290:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4278:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4254:39:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1664,
                              "nodeType": "ExpressionStatement",
                              "src": "4254:39:17"
                            },
                            {
                              "expression": {
                                "id": 1669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1665,
                                  "name": "_native",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1409,
                                  "src": "4307:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 1666,
                                      "name": "swap",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "4318:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                        "typeString": "struct Tradescrow.Swap storage pointer"
                                      }
                                    },
                                    "id": 1667,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "4318:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1668,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "4318:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4307:32:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1670,
                              "nodeType": "ExpressionStatement",
                              "src": "4307:32:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1673,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1571,
                                "src": "4359:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage_ptr",
                                  "typeString": "struct Tradescrow.Swap storage pointer"
                                }
                              },
                              "id": 1676,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1453,
                              "src": "4359:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            },
                            "id": 1677,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1436,
                            "src": "4359:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1678,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1533,
                            "src": "4378:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4359:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1680,
                        "nodeType": "ExpressionStatement",
                        "src": "4359:25:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1682,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4413:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4413:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1684,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "4425:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1685,
                                  "name": "_swapsCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1407,
                                  "src": "4433:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$1270_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1282,
                                "src": "4433:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1270_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1270_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 1687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4433:23:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1688,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "4458:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1681,
                            "name": "SwapProposed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1467,
                            "src": "4400:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4400:64:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1690,
                        "nodeType": "EmitStatement",
                        "src": "4395:69:17"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1691,
                              "name": "_swapsCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "4482:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1270_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "4482:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1270_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1270_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4482:23:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1546,
                        "id": 1694,
                        "nodeType": "Return",
                        "src": "4475:30:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1531,
                    "nodeType": "StructuredDocumentation",
                    "src": "2971:560:17",
                    "text": " @notice Propose a new swap and pay the app fee\n @dev Step 1: User proposes a swap to another address that contains any combination of\n      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed\n      assets are transferred to this contract and kept there until the swap is either\n      accepted or cancelled.\n @param target Address that the initiating user wants to trade with\n @param offer Struct that defines the proposed offer\n @return swapId ID of the new swap"
                  },
                  "functionSelector": "b5cbcb88",
                  "id": 1696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1539,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1538,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "3622:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3622:12:17"
                    },
                    {
                      "id": 1541,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1540,
                        "name": "chargeAppFee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1530,
                        "src": "3635:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3635:12:17"
                    },
                    {
                      "id": 1543,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1542,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "3648:13:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3648:13:17"
                    }
                  ],
                  "name": "proposeSwap",
                  "nameLocation": "3545:11:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3573:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "3557:22:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3557:15:17",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1536,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "3594:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "3581:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 1535,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1534,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "3581:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "3581:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3556:44:17"
                  },
                  "returnParameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "3670:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3670:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3669:9:17"
                  },
                  "scope": 2544,
                  "src": "3536:976:17",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1843,
                    "nodeType": "Block",
                    "src": "5336:968:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1712,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "5357:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1711,
                            "name": "onlyTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "5346:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5346:18:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1714,
                        "nodeType": "ExpressionStatement",
                        "src": "5346:18:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1717,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "5390:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 1719,
                                      "indexExpression": {
                                        "id": 1718,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1699,
                                        "src": "5397:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5390:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 1720,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1453,
                                    "src": "5390:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  ],
                                  "id": 1716,
                                  "name": "isEmpty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2350,
                                  "src": "5382:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Tradescrow.Offer memory) returns (uint256)"
                                  }
                                },
                                "id": 1721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5382:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1722,
                                "name": "TRUEINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1414,
                                "src": "5416:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5382:41:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a207377617020616c726561647920696e69746961746564",
                              "id": 1724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5437:36:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_73e49f9bbdacf029dca4aed3f3de7982c7ef80d5f20adf41d37dd6f012988125",
                                "typeString": "literal_string \"Tradescrow: swap already initiated\""
                              },
                              "value": "Tradescrow: swap already initiated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_73e49f9bbdacf029dca4aed3f3de7982c7ef80d5f20adf41d37dd6f012988125",
                                "typeString": "literal_string \"Tradescrow: swap already initiated\""
                              }
                            ],
                            "id": 1715,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5374:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5374:109:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1726,
                        "nodeType": "ExpressionStatement",
                        "src": "5374:109:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1728,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "5501:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1730,
                                  "indexExpression": {
                                    "id": 1729,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1699,
                                    "src": "5508:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5501:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1731,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "open",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1455,
                                "src": "5501:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1732,
                                "name": "TRUEINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1414,
                                "src": "5524:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5501:30:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a205377617020636c6f7365642e204f6e6c7920757365722063616e63656c20656e61626c6564",
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5533:51:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8",
                                "typeString": "literal_string \"Tradescrow: Swap closed. Only user cancel enabled\""
                              },
                              "value": "Tradescrow: Swap closed. Only user cancel enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8",
                                "typeString": "literal_string \"Tradescrow: Swap closed. Only user cancel enabled\""
                              }
                            ],
                            "id": 1727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5493:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5493:92:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "5493:92:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1738,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "5611:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1737,
                            "name": "requireNotEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "5595:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5595:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1740,
                        "nodeType": "ExpressionStatement",
                        "src": "5595:22:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1744,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5675:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5675:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5667:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1742,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5667:8:17",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5667:19:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1749,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5708:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                ],
                                "id": 1748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5700:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1747,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5700:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5700:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1751,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "5727:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1741,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2503,
                            "src": "5628:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5628:114:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1753,
                        "nodeType": "ExpressionStatement",
                        "src": "5628:114:17"
                      },
                      {
                        "body": {
                          "id": 1778,
                          "nodeType": "Block",
                          "src": "5799:71:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1772,
                                        "name": "offer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1702,
                                        "src": "5845:5:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                          "typeString": "struct Tradescrow.Offer memory"
                                        }
                                      },
                                      "id": 1773,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nfts",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1442,
                                      "src": "5845:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Tradescrow.Nft memory[] memory"
                                      }
                                    },
                                    "id": 1775,
                                    "indexExpression": {
                                      "id": 1774,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1755,
                                      "src": "5856:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5845:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                      "typeString": "struct Tradescrow.Nft memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                      "typeString": "struct Tradescrow.Nft memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1766,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "5813:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 1768,
                                        "indexExpression": {
                                          "id": 1767,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1699,
                                          "src": "5820:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5813:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 1769,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "5813:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    "id": 1770,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nfts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1442,
                                    "src": "5813:26:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Nft_$1429_storage_$dyn_storage",
                                      "typeString": "struct Tradescrow.Nft storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5813:31:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr_$_t_struct$_Nft_$1429_storage_$returns$__$bound_to$_t_array$_t_struct$_Nft_$1429_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct Tradescrow.Nft storage ref[] storage pointer,struct Tradescrow.Nft storage ref)"
                                  }
                                },
                                "id": 1776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5813:46:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1777,
                              "nodeType": "ExpressionStatement",
                              "src": "5813:46:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1758,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1755,
                            "src": "5771:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1759,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1702,
                                "src": "5775:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nfts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1442,
                              "src": "5775:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Nft memory[] memory"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5775:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5771:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1779,
                        "initializationExpression": {
                          "assignments": [
                            1755
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1755,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5766:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 1779,
                              "src": "5758:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1754,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5758:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1757,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5768:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5758:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5794:3:17",
                            "subExpression": {
                              "id": 1763,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "5794:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1765,
                          "nodeType": "ExpressionStatement",
                          "src": "5794:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "5753:117:17"
                      },
                      {
                        "body": {
                          "id": 1804,
                          "nodeType": "Block",
                          "src": "5926:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1798,
                                        "name": "offer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1702,
                                        "src": "5973:5:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                          "typeString": "struct Tradescrow.Offer memory"
                                        }
                                      },
                                      "id": 1799,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "coins",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1446,
                                      "src": "5973:11:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Tradescrow.Coin memory[] memory"
                                      }
                                    },
                                    "id": 1801,
                                    "indexExpression": {
                                      "id": 1800,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1781,
                                      "src": "5985:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5973:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                      "typeString": "struct Tradescrow.Coin memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                      "typeString": "struct Tradescrow.Coin memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1792,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "5940:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 1794,
                                        "indexExpression": {
                                          "id": 1793,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1699,
                                          "src": "5947:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5940:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 1795,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "5940:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    "id": 1796,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "coins",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1446,
                                    "src": "5940:27:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Coin_$1434_storage_$dyn_storage",
                                      "typeString": "struct Tradescrow.Coin storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5940:32:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr_$_t_struct$_Coin_$1434_storage_$returns$__$bound_to$_t_array$_t_struct$_Coin_$1434_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct Tradescrow.Coin storage ref[] storage pointer,struct Tradescrow.Coin storage ref)"
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5940:48:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1803,
                              "nodeType": "ExpressionStatement",
                              "src": "5940:48:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1784,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "5897:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1785,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1702,
                                "src": "5901:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1446,
                              "src": "5901:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Coin memory[] memory"
                              }
                            },
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5901:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5897:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1805,
                        "initializationExpression": {
                          "assignments": [
                            1781
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1781,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5892:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 1805,
                              "src": "5884:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1780,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5884:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1783,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5894:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5884:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5921:3:17",
                            "subExpression": {
                              "id": 1789,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1781,
                              "src": "5921:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1791,
                          "nodeType": "ExpressionStatement",
                          "src": "5921:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "5879:120:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1806,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6012:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6012:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1808,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "6024:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6012:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1830,
                        "nodeType": "IfStatement",
                        "src": "6008:145:17",
                        "trueBody": {
                          "id": 1829,
                          "nodeType": "Block",
                          "src": "6029:124:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 1819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1810,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "6043:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 1812,
                                      "indexExpression": {
                                        "id": 1811,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1699,
                                        "src": "6050:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6043:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 1813,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1453,
                                    "src": "6043:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1814,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "6043:28:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1815,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6074:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "6074:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1817,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1411,
                                    "src": "6086:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6074:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6043:46:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1820,
                              "nodeType": "ExpressionStatement",
                              "src": "6043:46:17"
                            },
                            {
                              "expression": {
                                "id": 1827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1821,
                                  "name": "_native",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1409,
                                  "src": "6103:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1822,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "6114:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 1824,
                                      "indexExpression": {
                                        "id": 1823,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1699,
                                        "src": "6121:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6114:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 1825,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1453,
                                    "src": "6114:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1826,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "6114:28:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6103:39:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1828,
                              "nodeType": "ExpressionStatement",
                              "src": "6103:39:17"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1832,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6195:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6195:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1834,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "6219:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1836,
                                  "indexExpression": {
                                    "id": 1835,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1699,
                                    "src": "6226:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6219:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1837,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1450,
                                "src": "6219:24:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "6219:29:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1839,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "6262:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1840,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "6282:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                "typeString": "struct Tradescrow.Offer memory"
                              }
                            ],
                            "id": 1831,
                            "name": "SwapInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1478,
                            "src": "6168:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6168:129:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1842,
                        "nodeType": "EmitStatement",
                        "src": "6163:134:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1697,
                    "nodeType": "StructuredDocumentation",
                    "src": "4518:698:17",
                    "text": " @notice Initiate a response offer to a swap proposed to you and pay the app fee\n @dev Step 2: Proposed user agrees to the the assets offered from the initiating\n      party by responding with their offer that contains any combination of\n      NFTs (ERC721), coins (ERC20), and native asset (base coin ~= ETH). All proposed\n      assets are transferred to this contract and kept there until the swap is either\n      accepted or cancelled. This can only be called by a user with a pending swap.\n @param swapId ID of the swap that the target user is invited to participate in\n @param offer Struct that defines the proposed response offer"
                  },
                  "functionSelector": "7cb1774d",
                  "id": 1844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1705,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1704,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "5296:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5296:12:17"
                    },
                    {
                      "id": 1707,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1706,
                        "name": "chargeAppFee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1530,
                        "src": "5309:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5309:12:17"
                    },
                    {
                      "id": 1709,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1708,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "5322:13:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5322:13:17"
                    }
                  ],
                  "name": "initiateSwap",
                  "nameLocation": "5230:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "5251:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1844,
                        "src": "5243:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5243:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1702,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "5272:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1844,
                        "src": "5259:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 1701,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1700,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "5259:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "5259:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5242:36:17"
                  },
                  "returnParameters": {
                    "id": 1710,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5336:0:17"
                  },
                  "scope": 2544,
                  "src": "5221:1083:17",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1955,
                    "nodeType": "Block",
                    "src": "6822:825:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1855,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1847,
                              "src": "6846:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1854,
                            "name": "onlyInitiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "6832:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6832:21:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1857,
                        "nodeType": "ExpressionStatement",
                        "src": "6832:21:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1859,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "6871:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1861,
                                  "indexExpression": {
                                    "id": 1860,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1847,
                                    "src": "6878:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6871:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1862,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "open",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1455,
                                "src": "6871:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1863,
                                "name": "TRUEINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1414,
                                "src": "6894:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6871:30:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a205377617020636c6f7365642e204f6e6c7920757365722063616e63656c20656e61626c6564",
                              "id": 1865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6903:51:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8",
                                "typeString": "literal_string \"Tradescrow: Swap closed. Only user cancel enabled\""
                              },
                              "value": "Tradescrow: Swap closed. Only user cancel enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df496e64f40e7ef0a3cee373a47d9d589978e43310214a1d8a564307f31175a8",
                                "typeString": "literal_string \"Tradescrow: Swap closed. Only user cancel enabled\""
                              }
                            ],
                            "id": 1858,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6863:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6863:92:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1867,
                        "nodeType": "ExpressionStatement",
                        "src": "6863:92:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1869,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "6981:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1871,
                                "indexExpression": {
                                  "id": 1870,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "6988:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6981:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "6981:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1868,
                            "name": "requireNotEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "6965:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6965:41:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1874,
                        "nodeType": "ExpressionStatement",
                        "src": "6965:41:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1876,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7032:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1878,
                                "indexExpression": {
                                  "id": 1877,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7039:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7032:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1879,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1453,
                              "src": "7032:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1875,
                            "name": "requireNotEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "7016:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7016:38:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1881,
                        "nodeType": "ExpressionStatement",
                        "src": "7016:38:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1885,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7149:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                ],
                                "id": 1884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7141:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1883,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7141:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7141:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1887,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "7156:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1889,
                                  "indexExpression": {
                                    "id": 1888,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1847,
                                    "src": "7163:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7156:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1890,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1450,
                                "src": "7156:24:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "7156:29:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1892,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7187:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1894,
                                "indexExpression": {
                                  "id": 1893,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7194:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7187:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1895,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1453,
                              "src": "7187:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1882,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2503,
                            "src": "7115:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7115:94:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1897,
                        "nodeType": "ExpressionStatement",
                        "src": "7115:94:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1901,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7306:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                    "typeString": "contract Tradescrow"
                                  }
                                ],
                                "id": 1900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7298:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1899,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7298:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7298:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1903,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "7313:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1905,
                                  "indexExpression": {
                                    "id": 1904,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1847,
                                    "src": "7320:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7313:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1453,
                                "src": "7313:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 1907,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "7313:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1908,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7341:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1910,
                                "indexExpression": {
                                  "id": 1909,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7348:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7341:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "7341:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1898,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2503,
                            "src": "7272:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7272:94:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1913,
                        "nodeType": "ExpressionStatement",
                        "src": "7272:94:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1915,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7392:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1917,
                                "indexExpression": {
                                  "id": 1916,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7399:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7392:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1918,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "7392:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1919,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7418:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1921,
                                "indexExpression": {
                                  "id": 1920,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7425:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7418:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1922,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1453,
                              "src": "7418:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1914,
                            "name": "transferNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2543,
                            "src": "7377:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer storage pointer,struct Tradescrow.Offer storage pointer)"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7377:63:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1924,
                        "nodeType": "ExpressionStatement",
                        "src": "7377:63:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1926,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7465:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1928,
                                "indexExpression": {
                                  "id": 1927,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7472:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7465:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1453,
                              "src": "7465:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1930,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "7488:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1932,
                                "indexExpression": {
                                  "id": 1931,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1847,
                                  "src": "7495:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7488:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1933,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "7488:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            ],
                            "id": 1925,
                            "name": "transferNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2543,
                            "src": "7450:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                              "typeString": "function (struct Tradescrow.Offer storage pointer,struct Tradescrow.Offer storage pointer)"
                            }
                          },
                          "id": 1934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7450:63:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1935,
                        "nodeType": "ExpressionStatement",
                        "src": "7450:63:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1937,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "7542:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1939,
                                  "indexExpression": {
                                    "id": 1938,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1847,
                                    "src": "7549:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7542:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1940,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1450,
                                "src": "7542:24:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "7542:29:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1942,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "7573:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 1944,
                                  "indexExpression": {
                                    "id": 1943,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1847,
                                    "src": "7580:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7573:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 1945,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1453,
                                "src": "7573:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 1946,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "7573:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1947,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1847,
                              "src": "7601:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1936,
                            "name": "SwapExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "7529:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7529:79:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1949,
                        "nodeType": "EmitStatement",
                        "src": "7524:84:17"
                      },
                      {
                        "expression": {
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "7619:21:17",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1950,
                              "name": "_swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1422,
                              "src": "7626:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                              }
                            },
                            "id": 1952,
                            "indexExpression": {
                              "id": 1951,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1847,
                              "src": "7633:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7626:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1456_storage",
                              "typeString": "struct Tradescrow.Swap storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1954,
                        "nodeType": "ExpressionStatement",
                        "src": "7619:21:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1845,
                    "nodeType": "StructuredDocumentation",
                    "src": "6310:435:17",
                    "text": " @notice Accept the proposed swap offer sent from the target\n @dev Step 3: Swap initiator accepts the proposed swap from the target, which transfers\n      all assets to their intended parties from this contract. This can only be called by\n      the initiator of the swap, and only when the target has proposed their offer\n @param swapId ID of the swap that the initiator wants to execute"
                  },
                  "functionSelector": "1bf33004",
                  "id": 1956,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1850,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1849,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "6795:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6795:12:17"
                    },
                    {
                      "id": 1852,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1851,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "6808:13:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6808:13:17"
                    }
                  ],
                  "name": "acceptSwap",
                  "nameLocation": "6759:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "6778:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1956,
                        "src": "6770:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6770:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6769:16:17"
                  },
                  "returnParameters": {
                    "id": 1853,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6822:0:17"
                  },
                  "scope": 2544,
                  "src": "6750:897:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2116,
                    "nodeType": "Block",
                    "src": "7999:1082:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1967,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8030:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 1969,
                                      "indexExpression": {
                                        "id": 1968,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8037:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8030:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 1970,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "8030:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1971,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addr",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1436,
                                  "src": "8030:29:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1972,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8063:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8063:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8030:43:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1975,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8077:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 1977,
                                      "indexExpression": {
                                        "id": 1976,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8084:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8077:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 1978,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1453,
                                    "src": "8077:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  "id": 1979,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addr",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1436,
                                  "src": "8077:26:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1980,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8107:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8107:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8077:40:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8030:87:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a2043616e27742063616e63656c20737761702c206d7573742062652073776170207061727469636970616e74",
                              "id": 1984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8131:57:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99ca17aed01c53af5d12bf5d5c41fd90829c88bb1398cb9a3296efec15437cd4",
                                "typeString": "literal_string \"Tradescrow: Can't cancel swap, must be swap participant\""
                              },
                              "value": "Tradescrow: Can't cancel swap, must be swap participant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_99ca17aed01c53af5d12bf5d5c41fd90829c88bb1398cb9a3296efec15437cd4",
                                "typeString": "literal_string \"Tradescrow: Can't cancel swap, must be swap participant\""
                              }
                            ],
                            "id": 1966,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8009:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8009:189:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1986,
                        "nodeType": "ExpressionStatement",
                        "src": "8009:189:17"
                      },
                      {
                        "expression": {
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1987,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1422,
                                "src": "8209:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                  "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                }
                              },
                              "id": 1989,
                              "indexExpression": {
                                "id": 1988,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1959,
                                "src": "8216:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8209:14:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                "typeString": "struct Tradescrow.Swap storage ref"
                              }
                            },
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1455,
                            "src": "8209:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1991,
                            "name": "FALSEINT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "8231:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8209:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1993,
                        "nodeType": "ExpressionStatement",
                        "src": "8209:30:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1994,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "8254:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                    "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                  }
                                },
                                "id": 1996,
                                "indexExpression": {
                                  "id": 1995,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1959,
                                  "src": "8261:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8254:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                  "typeString": "struct Tradescrow.Swap storage ref"
                                }
                              },
                              "id": 1997,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1450,
                              "src": "8254:24:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                "typeString": "struct Tradescrow.Offer storage ref"
                              }
                            },
                            "id": 1998,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1436,
                            "src": "8254:29:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1999,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8287:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8287:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8254:43:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2037,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "8560:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 2039,
                                  "indexExpression": {
                                    "id": 2038,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1959,
                                    "src": "8567:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8560:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "id": 2040,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1453,
                                "src": "8560:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                  "typeString": "struct Tradescrow.Offer storage ref"
                                }
                              },
                              "id": 2041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1436,
                              "src": "8560:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2042,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8590:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8590:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8560:40:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2080,
                          "nodeType": "IfStatement",
                          "src": "8556:282:17",
                          "trueBody": {
                            "id": 2079,
                            "nodeType": "Block",
                            "src": "8602:236:17",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2048,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "8650:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                            "typeString": "contract Tradescrow"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                            "typeString": "contract Tradescrow"
                                          }
                                        ],
                                        "id": 2047,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8642:7:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2046,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8642:7:17",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2049,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8642:13:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 2050,
                                            "name": "_swaps",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1422,
                                            "src": "8657:6:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                              "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                            }
                                          },
                                          "id": 2052,
                                          "indexExpression": {
                                            "id": 2051,
                                            "name": "swapId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1959,
                                            "src": "8664:6:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8657:14:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                            "typeString": "struct Tradescrow.Swap storage ref"
                                          }
                                        },
                                        "id": 2053,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1453,
                                        "src": "8657:21:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                          "typeString": "struct Tradescrow.Offer storage ref"
                                        }
                                      },
                                      "id": 2054,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1436,
                                      "src": "8657:26:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2055,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "8685:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 2057,
                                        "indexExpression": {
                                          "id": 2056,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1959,
                                          "src": "8692:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8685:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 2058,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "8685:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    ],
                                    "id": 2045,
                                    "name": "safeMultipleTransfersFrom",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2503,
                                    "src": "8616:25:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                                      "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                                    }
                                  },
                                  "id": 2059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8616:91:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2060,
                                "nodeType": "ExpressionStatement",
                                "src": "8616:91:17"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2062,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "8736:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 2064,
                                        "indexExpression": {
                                          "id": 2063,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1959,
                                          "src": "8743:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8736:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 2065,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "8736:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2066,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "8759:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 2068,
                                        "indexExpression": {
                                          "id": 2067,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1959,
                                          "src": "8766:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8759:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 2069,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "8759:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    ],
                                    "id": 2061,
                                    "name": "transferNative",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2543,
                                    "src": "8721:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                                      "typeString": "function (struct Tradescrow.Offer storage pointer,struct Tradescrow.Offer storage pointer)"
                                    }
                                  },
                                  "id": 2070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8721:60:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2071,
                                "nodeType": "ExpressionStatement",
                                "src": "8721:60:17"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2073,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "8805:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 2075,
                                        "indexExpression": {
                                          "id": 2074,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1959,
                                          "src": "8812:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8805:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 2076,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "target",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1453,
                                      "src": "8805:21:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    ],
                                    "id": 2072,
                                    "name": "wipeOffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2371,
                                    "src": "8795:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                                      "typeString": "function (struct Tradescrow.Offer storage pointer)"
                                    }
                                  },
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8795:32:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2078,
                                "nodeType": "ExpressionStatement",
                                "src": "8795:32:17"
                              }
                            ]
                          }
                        },
                        "id": 2081,
                        "nodeType": "IfStatement",
                        "src": "8250:588:17",
                        "trueBody": {
                          "id": 2036,
                          "nodeType": "Block",
                          "src": "8299:251:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2005,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8347:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                          "typeString": "contract Tradescrow"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                          "typeString": "contract Tradescrow"
                                        }
                                      ],
                                      "id": 2004,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8339:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2003,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8339:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2006,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8339:13:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2007,
                                          "name": "_swaps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1422,
                                          "src": "8354:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                            "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                          }
                                        },
                                        "id": 2009,
                                        "indexExpression": {
                                          "id": 2008,
                                          "name": "swapId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1959,
                                          "src": "8361:6:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8354:14:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                          "typeString": "struct Tradescrow.Swap storage ref"
                                        }
                                      },
                                      "id": 2010,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "initiator",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1450,
                                      "src": "8354:24:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                        "typeString": "struct Tradescrow.Offer storage ref"
                                      }
                                    },
                                    "id": 2011,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "addr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1436,
                                    "src": "8354:29:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2012,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8385:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 2014,
                                      "indexExpression": {
                                        "id": 2013,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8392:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8385:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 2015,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "8385:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  ],
                                  "id": 2002,
                                  "name": "safeMultipleTransfersFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2503,
                                  "src": "8313:25:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Offer_$1447_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,struct Tradescrow.Offer memory)"
                                  }
                                },
                                "id": 2016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8313:97:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2017,
                              "nodeType": "ExpressionStatement",
                              "src": "8313:97:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2019,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8439:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 2021,
                                      "indexExpression": {
                                        "id": 2020,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8446:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8439:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 2022,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "8439:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2023,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8465:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 2025,
                                      "indexExpression": {
                                        "id": 2024,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8472:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8465:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 2026,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "8465:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  ],
                                  "id": 2018,
                                  "name": "transferNative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2543,
                                  "src": "8424:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                                    "typeString": "function (struct Tradescrow.Offer storage pointer,struct Tradescrow.Offer storage pointer)"
                                  }
                                },
                                "id": 2027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8424:66:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2028,
                              "nodeType": "ExpressionStatement",
                              "src": "8424:66:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2030,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1422,
                                        "src": "8514:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                          "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                        }
                                      },
                                      "id": 2032,
                                      "indexExpression": {
                                        "id": 2031,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1959,
                                        "src": "8521:6:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8514:14:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                        "typeString": "struct Tradescrow.Swap storage ref"
                                      }
                                    },
                                    "id": 2033,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1450,
                                    "src": "8514:24:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                      "typeString": "struct Tradescrow.Offer storage ref"
                                    }
                                  ],
                                  "id": 2029,
                                  "name": "wipeOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2371,
                                  "src": "8504:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_storage_ptr_$returns$__$",
                                    "typeString": "function (struct Tradescrow.Offer storage pointer)"
                                  }
                                },
                                "id": 2034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8504:35:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2035,
                              "nodeType": "ExpressionStatement",
                              "src": "8504:35:17"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2083,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8867:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8867:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2085,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "8879:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2082,
                            "name": "SwapCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "8853:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8853:33:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2087,
                        "nodeType": "EmitStatement",
                        "src": "8848:38:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2089,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1422,
                                      "src": "8909:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                        "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                      }
                                    },
                                    "id": 2091,
                                    "indexExpression": {
                                      "id": 2090,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1959,
                                      "src": "8916:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8909:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                      "typeString": "struct Tradescrow.Swap storage ref"
                                    }
                                  },
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1450,
                                  "src": "8909:24:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                ],
                                "id": 2088,
                                "name": "isEmpty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2350,
                                "src": "8901:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (struct Tradescrow.Offer memory) returns (uint256)"
                                }
                              },
                              "id": 2093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8901:33:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2094,
                              "name": "TRUEINT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1414,
                              "src": "8938:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8901:44:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2097,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1422,
                                      "src": "8957:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                        "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                      }
                                    },
                                    "id": 2099,
                                    "indexExpression": {
                                      "id": 2098,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1959,
                                      "src": "8964:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8957:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                      "typeString": "struct Tradescrow.Swap storage ref"
                                    }
                                  },
                                  "id": 2100,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1453,
                                  "src": "8957:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                ],
                                "id": 2096,
                                "name": "isEmpty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2350,
                                "src": "8949:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (struct Tradescrow.Offer memory) returns (uint256)"
                                }
                              },
                              "id": 2101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8949:30:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2102,
                              "name": "TRUEINT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1414,
                              "src": "8983:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8949:41:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8901:89:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2115,
                        "nodeType": "IfStatement",
                        "src": "8897:178:17",
                        "trueBody": {
                          "id": 2114,
                          "nodeType": "Block",
                          "src": "8992:83:17",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2106,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1959,
                                    "src": "9022:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2105,
                                  "name": "SwapClosed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1496,
                                  "src": "9011:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9011:18:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2108,
                              "nodeType": "EmitStatement",
                              "src": "9006:23:17"
                            },
                            {
                              "expression": {
                                "id": 2112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9043:21:17",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2109,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1422,
                                    "src": "9050:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                      "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                    }
                                  },
                                  "id": 2111,
                                  "indexExpression": {
                                    "id": 2110,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1959,
                                    "src": "9057:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9050:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                    "typeString": "struct Tradescrow.Swap storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2113,
                              "nodeType": "ExpressionStatement",
                              "src": "9043:21:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1957,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:269:17",
                    "text": " @notice Cancel the incomplete swap, returning all assets to their original owners\n @dev Reverts all prior deposits, sending the assets back to their original owners\n @param swapId ID of the swap that the swap participants want to cancel"
                  },
                  "functionSelector": "54d6a2b7",
                  "id": 2117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1962,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1961,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "7972:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7972:12:17"
                    },
                    {
                      "id": 1964,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1963,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "7985:13:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7985:13:17"
                    }
                  ],
                  "name": "cancelSwap",
                  "nameLocation": "7936:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1960,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1959,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "7955:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2117,
                        "src": "7947:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7947:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7946:16:17"
                  },
                  "returnParameters": {
                    "id": 1965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7999:0:17"
                  },
                  "scope": 2544,
                  "src": "7927:1154:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2135,
                    "nodeType": "Block",
                    "src": "9352:65:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2127,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "9362:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2128,
                            "name": "newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2120,
                            "src": "9368:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9362:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2130,
                        "nodeType": "ExpressionStatement",
                        "src": "9362:12:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2132,
                              "name": "newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "9403:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2131,
                            "name": "AppFeeChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "9389:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9389:21:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2134,
                        "nodeType": "EmitStatement",
                        "src": "9384:26:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2118,
                    "nodeType": "StructuredDocumentation",
                    "src": "9120:160:17",
                    "text": " @notice Update the fee charged to each user for a swap\n @dev Can only be called by the contract owner\n @param newFee Fee in wei"
                  },
                  "functionSelector": "52492815",
                  "id": 2136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2123,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2122,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "9329:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9329:12:17"
                    },
                    {
                      "id": 2125,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2124,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "9342:9:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9342:9:17"
                    }
                  ],
                  "name": "updateAppFee",
                  "nameLocation": "9294:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2120,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "9312:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "9307:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2119,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9307:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9306:13:17"
                  },
                  "returnParameters": {
                    "id": 2126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9352:0:17"
                  },
                  "scope": 2544,
                  "src": "9285:132:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2146,
                    "nodeType": "Block",
                    "src": "9472:25:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2143,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "9482:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9482:8:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2145,
                        "nodeType": "ExpressionStatement",
                        "src": "9482:8:17"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 2147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2138,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "9449:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9449:12:17"
                    },
                    {
                      "id": 2141,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2140,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "9462:9:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9462:9:17"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "9432:5:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9437:2:17"
                  },
                  "returnParameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9472:0:17"
                  },
                  "scope": 2544,
                  "src": "9423:74:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2157,
                    "nodeType": "Block",
                    "src": "9554:27:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2154,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "9564:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9564:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2156,
                        "nodeType": "ExpressionStatement",
                        "src": "9564:10:17"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 2158,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2150,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2149,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "9531:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9531:12:17"
                    },
                    {
                      "id": 2152,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2151,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "9544:9:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9544:9:17"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "9512:7:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9519:2:17"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9554:0:17"
                  },
                  "scope": 2544,
                  "src": "9503:78:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2207,
                    "nodeType": "Block",
                    "src": "9899:264:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2169,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2161,
                                "src": "9917:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2172,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9938:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9930:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2170,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9930:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9930:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9917:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 2175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9942:42:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e4a875764ffe42712c8e053158628b37f0a9b37947ceaf3df1d80f7ef40d3ee",
                                "typeString": "literal_string \"Tradescrow: transfer to the zero address\""
                              },
                              "value": "Tradescrow: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e4a875764ffe42712c8e053158628b37f0a9b37947ceaf3df1d80f7ef40d3ee",
                                "typeString": "literal_string \"Tradescrow: transfer to the zero address\""
                              }
                            ],
                            "id": 2168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9909:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9909:76:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2177,
                        "nodeType": "ExpressionStatement",
                        "src": "9909:76:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2181,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "10012:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                            "typeString": "contract Tradescrow"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                            "typeString": "contract Tradescrow"
                                          }
                                        ],
                                        "id": 2180,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10004:7:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2179,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10004:7:17",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2182,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10004:13:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2183,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "10004:21:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2184,
                                    "name": "_native",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1409,
                                    "src": "10028:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10004:31:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10038:7:17",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "src": "10004:41:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10049:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10004:46:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a204e6f20617661696c61626c652066656573",
                              "id": 2190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10052:31:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c270a08588dfe6b1b7768983935475cdfbee552f6421bc094aaf3aec5e3b72dc",
                                "typeString": "literal_string \"Tradescrow: No available fees\""
                              },
                              "value": "Tradescrow: No available fees"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c270a08588dfe6b1b7768983935475cdfbee552f6421bc094aaf3aec5e3b72dc",
                                "typeString": "literal_string \"Tradescrow: No available fees\""
                              }
                            ],
                            "id": 2178,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9996:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9996:88:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2192,
                        "nodeType": "ExpressionStatement",
                        "src": "9996:88:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2198,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10122:4:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                          "typeString": "contract Tradescrow"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                          "typeString": "contract Tradescrow"
                                        }
                                      ],
                                      "id": 2197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10114:7:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2196,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10114:7:17",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10114:13:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "10114:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2201,
                                  "name": "_native",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1409,
                                  "src": "10138:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10114:31:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10148:7:17",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              "src": "10114:41:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2193,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2161,
                              "src": "10095:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "10095:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10095:61:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2206,
                        "nodeType": "ExpressionStatement",
                        "src": "10095:61:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2159,
                    "nodeType": "StructuredDocumentation",
                    "src": "9587:226:17",
                    "text": " @notice Withdraw accrued fees from the contract to an address\n @dev Can only be called by the contract owner, and always leaves 1e18 native for gas\n @param recipient Ox address of the recipient"
                  },
                  "functionSelector": "164e68de",
                  "id": 2208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2164,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2163,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "9876:12:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9876:12:17"
                    },
                    {
                      "id": 2166,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2165,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "9889:9:17"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9889:9:17"
                    }
                  ],
                  "name": "withdrawFees",
                  "nameLocation": "9827:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2161,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "9856:9:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "9840:25:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9840:15:17",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9839:27:17"
                  },
                  "returnParameters": {
                    "id": 2167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9899:0:17"
                  },
                  "scope": 2544,
                  "src": "9818:345:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2225,
                    "nodeType": "Block",
                    "src": "10252:147:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2214,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10283:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10283:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2216,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1422,
                                      "src": "10297:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                        "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                      }
                                    },
                                    "id": 2218,
                                    "indexExpression": {
                                      "id": 2217,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2210,
                                      "src": "10304:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10297:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                      "typeString": "struct Tradescrow.Swap storage ref"
                                    }
                                  },
                                  "id": 2219,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1450,
                                  "src": "10297:24:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                },
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "10297:29:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "10283:43:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a2063616c6c6572206973206e6f74207377617020696e69746961746f72",
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10340:42:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7931cdccd8d6c18f9143ecf32834dc315736a14c8ea589a453b1c5a095df45f1",
                                "typeString": "literal_string \"Tradescrow: caller is not swap initiator\""
                              },
                              "value": "Tradescrow: caller is not swap initiator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7931cdccd8d6c18f9143ecf32834dc315736a14c8ea589a453b1c5a095df45f1",
                                "typeString": "literal_string \"Tradescrow: caller is not swap initiator\""
                              }
                            ],
                            "id": 2213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10262:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10262:130:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "ExpressionStatement",
                        "src": "10262:130:17"
                      }
                    ]
                  },
                  "id": 2226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onlyInitiator",
                  "nameLocation": "10205:13:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2210,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "10227:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "10219:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10219:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10218:16:17"
                  },
                  "returnParameters": {
                    "id": 2212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10252:0:17"
                  },
                  "scope": 2544,
                  "src": "10196:203:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "10458:141:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2232,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10489:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10489:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2234,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1422,
                                      "src": "10503:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Swap_$1456_storage_$",
                                        "typeString": "mapping(uint256 => struct Tradescrow.Swap storage ref)"
                                      }
                                    },
                                    "id": 2236,
                                    "indexExpression": {
                                      "id": 2235,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2228,
                                      "src": "10510:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10503:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$1456_storage",
                                      "typeString": "struct Tradescrow.Swap storage ref"
                                    }
                                  },
                                  "id": 2237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1453,
                                  "src": "10503:21:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage",
                                    "typeString": "struct Tradescrow.Offer storage ref"
                                  }
                                },
                                "id": 2238,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "10503:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "10489:40:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a2063616c6c6572206973206e6f74207377617020746172676574",
                              "id": 2240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10543:39:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7653f136e737ca43daea4992f5fd38430bc3a18da68880da7c93fedef8758fe5",
                                "typeString": "literal_string \"Tradescrow: caller is not swap target\""
                              },
                              "value": "Tradescrow: caller is not swap target"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7653f136e737ca43daea4992f5fd38430bc3a18da68880da7c93fedef8758fe5",
                                "typeString": "literal_string \"Tradescrow: caller is not swap target\""
                              }
                            ],
                            "id": 2231,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10468:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10468:124:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "10468:124:17"
                      }
                    ]
                  },
                  "id": 2244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onlyTarget",
                  "nameLocation": "10414:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2228,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "10433:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2244,
                        "src": "10425:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10425:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10424:16:17"
                  },
                  "returnParameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10458:0:17"
                  },
                  "scope": 2544,
                  "src": "10405:194:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2259,
                    "nodeType": "Block",
                    "src": "10664:104:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2251,
                                "name": "FALSEINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1417,
                                "src": "10682:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2253,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2247,
                                    "src": "10705:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  ],
                                  "id": 2252,
                                  "name": "isNotEmpty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2313,
                                  "src": "10694:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Tradescrow.Offer memory) returns (uint256)"
                                  }
                                },
                                "id": 2254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10694:17:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10682:29:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a20417373657473206578697374",
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10725:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cc66c7b43548f911d0cfccba00d2b16b5d47b737bd5d7b27d4d01c7f821f30c",
                                "typeString": "literal_string \"Tradescrow: Assets exist\""
                              },
                              "value": "Tradescrow: Assets exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cc66c7b43548f911d0cfccba00d2b16b5d47b737bd5d7b27d4d01c7f821f30c",
                                "typeString": "literal_string \"Tradescrow: Assets exist\""
                              }
                            ],
                            "id": 2250,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10674:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10674:87:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2258,
                        "nodeType": "ExpressionStatement",
                        "src": "10674:87:17"
                      }
                    ]
                  },
                  "id": 2260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requireEmpty",
                  "nameLocation": "10614:12:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2247,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "10640:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2260,
                        "src": "10627:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2245,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "10627:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "10627:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10626:20:17"
                  },
                  "returnParameters": {
                    "id": 2249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10664:0:17"
                  },
                  "scope": 2544,
                  "src": "10605:163:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2275,
                    "nodeType": "Block",
                    "src": "10836:140:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2267,
                                "name": "TRUEINT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1414,
                                "src": "10854:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2269,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2263,
                                    "src": "10876:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  ],
                                  "id": 2268,
                                  "name": "isNotEmpty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2313,
                                  "src": "10865:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$1447_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Tradescrow.Offer memory) returns (uint256)"
                                  }
                                },
                                "id": 2270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10865:17:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10854:28:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164657363726f773a2043616e277420616363657074206f666665722c207061727469636970616e74206469646e27742061646420617373657473",
                              "id": 2272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10896:63:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b65f9cb588e2917ca9b5cb347e64214aa74344276b9de610f58bc3a5161f6e5",
                                "typeString": "literal_string \"Tradescrow: Can't accept offer, participant didn't add assets\""
                              },
                              "value": "Tradescrow: Can't accept offer, participant didn't add assets"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b65f9cb588e2917ca9b5cb347e64214aa74344276b9de610f58bc3a5161f6e5",
                                "typeString": "literal_string \"Tradescrow: Can't accept offer, participant didn't add assets\""
                              }
                            ],
                            "id": 2266,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10846:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10846:123:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2274,
                        "nodeType": "ExpressionStatement",
                        "src": "10846:123:17"
                      }
                    ]
                  },
                  "id": 2276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requireNotEmpty",
                  "nameLocation": "10783:15:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2263,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "10812:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "10799:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2262,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2261,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "10799:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "10799:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10798:20:17"
                  },
                  "returnParameters": {
                    "id": 2265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10836:0:17"
                  },
                  "scope": 2544,
                  "src": "10774:202:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2312,
                    "nodeType": "Block",
                    "src": "11056:188:17",
                    "statements": [
                      {
                        "assignments": [
                          2285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2285,
                            "mutability": "mutable",
                            "name": "empty",
                            "nameLocation": "11074:5:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2312,
                            "src": "11066:13:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2284,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11066:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2287,
                        "initialValue": {
                          "id": 2286,
                          "name": "FALSEINT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1417,
                          "src": "11082:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11066:24:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2288,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2279,
                                    "src": "11104:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  },
                                  "id": 2289,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nfts",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1442,
                                  "src": "11104:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Tradescrow.Nft memory[] memory"
                                  }
                                },
                                "id": 2290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11104:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11125:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11104:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2293,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2279,
                                    "src": "11130:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  },
                                  "id": 2294,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "coins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1446,
                                  "src": "11130:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Tradescrow.Coin memory[] memory"
                                  }
                                },
                                "id": 2295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11130:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11152:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11130:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11104:49:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2299,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "11157:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 2300,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "native",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "11157:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11173:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11157:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11104:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2309,
                        "nodeType": "IfStatement",
                        "src": "11100:116:17",
                        "trueBody": {
                          "id": 2308,
                          "nodeType": "Block",
                          "src": "11176:40:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 2306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2304,
                                  "name": "empty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2285,
                                  "src": "11190:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2305,
                                  "name": "TRUEINT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1414,
                                  "src": "11198:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11190:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2307,
                              "nodeType": "ExpressionStatement",
                              "src": "11190:15:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2310,
                          "name": "empty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2285,
                          "src": "11232:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2283,
                        "id": 2311,
                        "nodeType": "Return",
                        "src": "11225:12:17"
                      }
                    ]
                  },
                  "id": 2313,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isNotEmpty",
                  "nameLocation": "10991:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2279,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "11015:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "11002:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2278,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2277,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "11002:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "11002:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11001:20:17"
                  },
                  "returnParameters": {
                    "id": 2283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "11047:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11047:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11046:9:17"
                  },
                  "scope": 2544,
                  "src": "10982:262:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2349,
                    "nodeType": "Block",
                    "src": "11321:188:17",
                    "statements": [
                      {
                        "assignments": [
                          2322
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2322,
                            "mutability": "mutable",
                            "name": "empty",
                            "nameLocation": "11339:5:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2349,
                            "src": "11331:13:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2321,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11331:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2324,
                        "initialValue": {
                          "id": 2323,
                          "name": "FALSEINT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1417,
                          "src": "11347:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11331:24:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2325,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2316,
                                    "src": "11369:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  },
                                  "id": 2326,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nfts",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1442,
                                  "src": "11369:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Tradescrow.Nft memory[] memory"
                                  }
                                },
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11369:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11390:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11369:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2330,
                                    "name": "offer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2316,
                                    "src": "11395:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                      "typeString": "struct Tradescrow.Offer memory"
                                    }
                                  },
                                  "id": 2331,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "coins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1446,
                                  "src": "11395:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Tradescrow.Coin memory[] memory"
                                  }
                                },
                                "id": 2332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11395:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11417:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11395:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11369:49:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2336,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2316,
                                "src": "11422:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "native",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "11422:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11422:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11369:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2346,
                        "nodeType": "IfStatement",
                        "src": "11365:116:17",
                        "trueBody": {
                          "id": 2345,
                          "nodeType": "Block",
                          "src": "11441:40:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 2343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2341,
                                  "name": "empty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2322,
                                  "src": "11455:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2342,
                                  "name": "TRUEINT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1414,
                                  "src": "11463:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11455:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2344,
                              "nodeType": "ExpressionStatement",
                              "src": "11455:15:17"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2347,
                          "name": "empty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2322,
                          "src": "11497:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2320,
                        "id": 2348,
                        "nodeType": "Return",
                        "src": "11490:12:17"
                      }
                    ]
                  },
                  "id": 2350,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmpty",
                  "nameLocation": "11259:7:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2316,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "11280:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2350,
                        "src": "11267:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2315,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2314,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "11267:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "11267:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11266:20:17"
                  },
                  "returnParameters": {
                    "id": 2320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2319,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2350,
                        "src": "11312:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11312:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11311:9:17"
                  },
                  "scope": 2544,
                  "src": "11250:259:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2370,
                    "nodeType": "Block",
                    "src": "11572:88:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "11582:18:17",
                          "subExpression": {
                            "expression": {
                              "id": 2356,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2353,
                              "src": "11589:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                "typeString": "struct Tradescrow.Offer storage pointer"
                              }
                            },
                            "id": 2357,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "coins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1446,
                            "src": "11589:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Coin_$1434_storage_$dyn_storage",
                              "typeString": "struct Tradescrow.Coin storage ref[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2359,
                        "nodeType": "ExpressionStatement",
                        "src": "11582:18:17"
                      },
                      {
                        "expression": {
                          "id": 2362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "11610:17:17",
                          "subExpression": {
                            "expression": {
                              "id": 2360,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2353,
                              "src": "11617:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                "typeString": "struct Tradescrow.Offer storage pointer"
                              }
                            },
                            "id": 2361,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nfts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1442,
                            "src": "11617:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Nft_$1429_storage_$dyn_storage",
                              "typeString": "struct Tradescrow.Nft storage ref[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2363,
                        "nodeType": "ExpressionStatement",
                        "src": "11610:17:17"
                      },
                      {
                        "expression": {
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2364,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2353,
                              "src": "11637:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                "typeString": "struct Tradescrow.Offer storage pointer"
                              }
                            },
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "native",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1438,
                            "src": "11637:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11652:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11637:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2369,
                        "nodeType": "ExpressionStatement",
                        "src": "11637:16:17"
                      }
                    ]
                  },
                  "id": 2371,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "wipeOffer",
                  "nameLocation": "11524:9:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2353,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "11548:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2371,
                        "src": "11534:19:17",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2352,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2351,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "11534:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "11534:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11533:21:17"
                  },
                  "returnParameters": {
                    "id": 2355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11572:0:17"
                  },
                  "scope": 2544,
                  "src": "11515:145:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2502,
                    "nodeType": "Block",
                    "src": "11764:687:17",
                    "statements": [
                      {
                        "body": {
                          "id": 2444,
                          "nodeType": "Block",
                          "src": "11820:302:17",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 2393,
                                        "name": "offer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2378,
                                        "src": "11838:5:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                          "typeString": "struct Tradescrow.Offer memory"
                                        }
                                      },
                                      "id": 2394,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nfts",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1442,
                                      "src": "11838:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Tradescrow.Nft memory[] memory"
                                      }
                                    },
                                    "id": 2396,
                                    "indexExpression": {
                                      "id": 2395,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2382,
                                      "src": "11849:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11838:13:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                      "typeString": "struct Tradescrow.Nft memory"
                                    }
                                  },
                                  "id": 2397,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1426,
                                  "src": "11838:20:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11862:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11838:25:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2442,
                                "nodeType": "Block",
                                "src": "11980:132:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2427,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2373,
                                          "src": "12044:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2428,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2375,
                                          "src": "12050:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2429,
                                                "name": "offer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2378,
                                                "src": "12054:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                  "typeString": "struct Tradescrow.Offer memory"
                                                }
                                              },
                                              "id": 2430,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "nfts",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1442,
                                              "src": "12054:10:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Tradescrow.Nft memory[] memory"
                                              }
                                            },
                                            "id": 2432,
                                            "indexExpression": {
                                              "id": 2431,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2382,
                                              "src": "12065:1:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12054:13:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                              "typeString": "struct Tradescrow.Nft memory"
                                            }
                                          },
                                          "id": 2433,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "id",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1428,
                                          "src": "12054:16:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2434,
                                                "name": "offer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2378,
                                                "src": "12072:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                  "typeString": "struct Tradescrow.Offer memory"
                                                }
                                              },
                                              "id": 2435,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "nfts",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1442,
                                              "src": "12072:10:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Tradescrow.Nft memory[] memory"
                                              }
                                            },
                                            "id": 2437,
                                            "indexExpression": {
                                              "id": 2436,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2382,
                                              "src": "12083:1:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12072:13:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                              "typeString": "struct Tradescrow.Nft memory"
                                            }
                                          },
                                          "id": 2438,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1426,
                                          "src": "12072:20:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "",
                                          "id": 2439,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12094:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 2420,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2378,
                                                    "src": "12007:5:17",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                      "typeString": "struct Tradescrow.Offer memory"
                                                    }
                                                  },
                                                  "id": 2421,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "nfts",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1442,
                                                  "src": "12007:10:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct Tradescrow.Nft memory[] memory"
                                                  }
                                                },
                                                "id": 2423,
                                                "indexExpression": {
                                                  "id": 2422,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2382,
                                                  "src": "12018:1:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "12007:13:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                                  "typeString": "struct Tradescrow.Nft memory"
                                                }
                                              },
                                              "id": 2424,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "addr",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1424,
                                              "src": "12007:18:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2419,
                                            "name": "IERC1155",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 358,
                                            "src": "11998:8:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1155_$358_$",
                                              "typeString": "type(contract IERC1155)"
                                            }
                                          },
                                          "id": 2425,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11998:28:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1155_$358",
                                            "typeString": "contract IERC1155"
                                          }
                                        },
                                        "id": 2426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 341,
                                        "src": "11998:45:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                                        }
                                      },
                                      "id": 2440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11998:99:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2441,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11998:99:17"
                                  }
                                ]
                              },
                              "id": 2443,
                              "nodeType": "IfStatement",
                              "src": "11834:278:17",
                              "trueBody": {
                                "id": 2418,
                                "nodeType": "Block",
                                "src": "11865:109:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2408,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2373,
                                          "src": "11928:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2409,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2375,
                                          "src": "11934:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2410,
                                                "name": "offer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2378,
                                                "src": "11938:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                  "typeString": "struct Tradescrow.Offer memory"
                                                }
                                              },
                                              "id": 2411,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "nfts",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1442,
                                              "src": "11938:10:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Tradescrow.Nft memory[] memory"
                                              }
                                            },
                                            "id": 2413,
                                            "indexExpression": {
                                              "id": 2412,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2382,
                                              "src": "11949:1:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "11938:13:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                              "typeString": "struct Tradescrow.Nft memory"
                                            }
                                          },
                                          "id": 2414,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "id",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1428,
                                          "src": "11938:16:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "",
                                          "id": 2415,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11956:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 2401,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2378,
                                                    "src": "11891:5:17",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                      "typeString": "struct Tradescrow.Offer memory"
                                                    }
                                                  },
                                                  "id": 2402,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "nfts",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1442,
                                                  "src": "11891:10:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct Tradescrow.Nft memory[] memory"
                                                  }
                                                },
                                                "id": 2404,
                                                "indexExpression": {
                                                  "id": 2403,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2382,
                                                  "src": "11902:1:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "11891:13:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Nft_$1429_memory_ptr",
                                                  "typeString": "struct Tradescrow.Nft memory"
                                                }
                                              },
                                              "id": 2405,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "addr",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1424,
                                              "src": "11891:18:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2400,
                                            "name": "IERC721",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 902,
                                            "src": "11883:7:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721_$902_$",
                                              "typeString": "type(contract IERC721)"
                                            }
                                          },
                                          "id": 2406,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11883:27:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721_$902",
                                            "typeString": "contract IERC721"
                                          }
                                        },
                                        "id": 2407,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 901,
                                        "src": "11883:44:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address,address,uint256,bytes memory) external"
                                        }
                                      },
                                      "id": 2416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11883:76:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2417,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11883:76:17"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2385,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2382,
                            "src": "11792:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2386,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2378,
                                "src": "11796:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 2387,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nfts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1442,
                              "src": "11796:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$1429_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Nft memory[] memory"
                              }
                            },
                            "id": 2388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11796:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11792:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2445,
                        "initializationExpression": {
                          "assignments": [
                            2382
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2382,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11787:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 2445,
                              "src": "11779:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2381,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11779:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2384,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11789:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11779:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11815:3:17",
                            "subExpression": {
                              "id": 2390,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2382,
                              "src": "11815:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2392,
                          "nodeType": "ExpressionStatement",
                          "src": "11815:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "11774:348:17"
                      },
                      {
                        "body": {
                          "id": 2500,
                          "nodeType": "Block",
                          "src": "12178:267:17",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2458,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2373,
                                  "src": "12196:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 2461,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "12212:4:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                        "typeString": "contract Tradescrow"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Tradescrow_$2544",
                                        "typeString": "contract Tradescrow"
                                      }
                                    ],
                                    "id": 2460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12204:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2459,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12204:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12204:13:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12196:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2498,
                                "nodeType": "Block",
                                "src": "12325:110:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2489,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2373,
                                          "src": "12388:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2490,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2375,
                                          "src": "12394:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2491,
                                                "name": "offer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2378,
                                                "src": "12398:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                  "typeString": "struct Tradescrow.Offer memory"
                                                }
                                              },
                                              "id": 2492,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "coins",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1446,
                                              "src": "12398:11:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Tradescrow.Coin memory[] memory"
                                              }
                                            },
                                            "id": 2494,
                                            "indexExpression": {
                                              "id": 2493,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2447,
                                              "src": "12410:1:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12398:14:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                              "typeString": "struct Tradescrow.Coin memory"
                                            }
                                          },
                                          "id": 2495,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1433,
                                          "src": "12398:21:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 2482,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2378,
                                                    "src": "12350:5:17",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                      "typeString": "struct Tradescrow.Offer memory"
                                                    }
                                                  },
                                                  "id": 2483,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "coins",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1446,
                                                  "src": "12350:11:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct Tradescrow.Coin memory[] memory"
                                                  }
                                                },
                                                "id": 2485,
                                                "indexExpression": {
                                                  "id": 2484,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2447,
                                                  "src": "12362:1:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "12350:14:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                                  "typeString": "struct Tradescrow.Coin memory"
                                                }
                                              },
                                              "id": 2486,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "addr",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1431,
                                              "src": "12350:19:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2481,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 562,
                                            "src": "12343:6:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$562_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2487,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12343:27:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$562",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2488,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 619,
                                        "src": "12343:44:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$562_$",
                                          "typeString": "function (contract IERC20,address,address,uint256)"
                                        }
                                      },
                                      "id": 2496,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12343:77:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2497,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12343:77:17"
                                  }
                                ]
                              },
                              "id": 2499,
                              "nodeType": "IfStatement",
                              "src": "12192:243:17",
                              "trueBody": {
                                "id": 2480,
                                "nodeType": "Block",
                                "src": "12219:100:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2472,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2375,
                                          "src": "12278:2:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 2473,
                                                "name": "offer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2378,
                                                "src": "12282:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                  "typeString": "struct Tradescrow.Offer memory"
                                                }
                                              },
                                              "id": 2474,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "coins",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1446,
                                              "src": "12282:11:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct Tradescrow.Coin memory[] memory"
                                              }
                                            },
                                            "id": 2476,
                                            "indexExpression": {
                                              "id": 2475,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2447,
                                              "src": "12294:1:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12282:14:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                              "typeString": "struct Tradescrow.Coin memory"
                                            }
                                          },
                                          "id": 2477,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1433,
                                          "src": "12282:21:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "baseExpression": {
                                                  "expression": {
                                                    "id": 2465,
                                                    "name": "offer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2378,
                                                    "src": "12244:5:17",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                                      "typeString": "struct Tradescrow.Offer memory"
                                                    }
                                                  },
                                                  "id": 2466,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "coins",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 1446,
                                                  "src": "12244:11:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct Tradescrow.Coin memory[] memory"
                                                  }
                                                },
                                                "id": 2468,
                                                "indexExpression": {
                                                  "id": 2467,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2447,
                                                  "src": "12256:1:17",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "12244:14:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Coin_$1434_memory_ptr",
                                                  "typeString": "struct Tradescrow.Coin memory"
                                                }
                                              },
                                              "id": 2469,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "addr",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1431,
                                              "src": "12244:19:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2464,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 562,
                                            "src": "12237:6:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$562_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2470,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12237:27:17",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$562",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2471,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 593,
                                        "src": "12237:40:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$562_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$562_$",
                                          "typeString": "function (contract IERC20,address,uint256)"
                                        }
                                      },
                                      "id": 2478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12237:67:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2479,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12237:67:17"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2450,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2447,
                            "src": "12149:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2451,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2378,
                                "src": "12153:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                                  "typeString": "struct Tradescrow.Offer memory"
                                }
                              },
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1446,
                              "src": "12153:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Coin_$1434_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Tradescrow.Coin memory[] memory"
                              }
                            },
                            "id": 2453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12153:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12149:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2501,
                        "initializationExpression": {
                          "assignments": [
                            2447
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2447,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12144:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 2501,
                              "src": "12136:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2446,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12136:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2449,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12146:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12136:11:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12173:3:17",
                            "subExpression": {
                              "id": 2455,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2447,
                              "src": "12173:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2457,
                          "nodeType": "ExpressionStatement",
                          "src": "12173:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "12131:314:17"
                      }
                    ]
                  },
                  "id": 2503,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeMultipleTransfersFrom",
                  "nameLocation": "11675:25:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2373,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "11709:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2503,
                        "src": "11701:12:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11701:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2375,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "11723:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2503,
                        "src": "11715:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11715:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2378,
                        "mutability": "mutable",
                        "name": "offer",
                        "nameLocation": "11740:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2503,
                        "src": "11727:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_memory_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2377,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2376,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "11727:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "11727:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11700:46:17"
                  },
                  "returnParameters": {
                    "id": 2380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11764:0:17"
                  },
                  "scope": 2544,
                  "src": "11666:785:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2542,
                    "nodeType": "Block",
                    "src": "12536:190:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2512,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2506,
                              "src": "12550:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                "typeString": "struct Tradescrow.Offer storage pointer"
                              }
                            },
                            "id": 2513,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "native",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1438,
                            "src": "12550:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12564:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12550:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2541,
                        "nodeType": "IfStatement",
                        "src": "12546:174:17",
                        "trueBody": {
                          "id": 2540,
                          "nodeType": "Block",
                          "src": "12567:153:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 2519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2516,
                                  "name": "_native",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1409,
                                  "src": "12581:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2517,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2506,
                                    "src": "12592:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                      "typeString": "struct Tradescrow.Offer storage pointer"
                                    }
                                  },
                                  "id": 2518,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "12592:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12581:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2520,
                              "nodeType": "ExpressionStatement",
                              "src": "12581:22:17"
                            },
                            {
                              "assignments": [
                                2522
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2522,
                                  "mutability": "mutable",
                                  "name": "native",
                                  "nameLocation": "12622:6:17",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2540,
                                  "src": "12617:11:17",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2521,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12617:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2525,
                              "initialValue": {
                                "expression": {
                                  "id": 2523,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2506,
                                  "src": "12631:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                    "typeString": "struct Tradescrow.Offer storage pointer"
                                  }
                                },
                                "id": 2524,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "native",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "12631:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12617:25:17"
                            },
                            {
                              "expression": {
                                "id": 2530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2526,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2506,
                                    "src": "12656:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                      "typeString": "struct Tradescrow.Offer storage pointer"
                                    }
                                  },
                                  "id": 2528,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "native",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1438,
                                  "src": "12656:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12670:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12656:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2531,
                              "nodeType": "ExpressionStatement",
                              "src": "12656:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2537,
                                    "name": "native",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2522,
                                    "src": "12702:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 2532,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2509,
                                      "src": "12685:2:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                                        "typeString": "struct Tradescrow.Offer storage pointer"
                                      }
                                    },
                                    "id": 2535,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "addr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1436,
                                    "src": "12685:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 2536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "12685:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12685:24:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2539,
                              "nodeType": "ExpressionStatement",
                              "src": "12685:24:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2543,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferNative",
                  "nameLocation": "12466:14:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2506,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "12495:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2543,
                        "src": "12481:18:17",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2505,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2504,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "12481:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "12481:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2509,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "12515:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2543,
                        "src": "12501:16:17",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                          "typeString": "struct Tradescrow.Offer"
                        },
                        "typeName": {
                          "id": 2508,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2507,
                            "name": "Offer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1447,
                            "src": "12501:5:17"
                          },
                          "referencedDeclaration": 1447,
                          "src": "12501:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$1447_storage_ptr",
                            "typeString": "struct Tradescrow.Offer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12480:38:17"
                  },
                  "returnParameters": {
                    "id": 2511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12536:0:17"
                  },
                  "scope": 2544,
                  "src": "12457:269:17",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2545,
              "src": "680:12048:17",
              "usedErrors": []
            }
          ],
          "src": "37:12691:17"
        },
        "id": 17
      }
    }
  }
}
